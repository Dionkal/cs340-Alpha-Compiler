Terminals unused in grammar

   DOUBLEDOT


State 154 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: stmt1
    2        | %empty

    3 stmt1: stmt1 stmt
    4      | stmt

    5 stmt: expr ';'
    6     | ifstmt
    7     | whilestmt
    8     | forstmt
    9     | returnstmt
   10     | BREAK ';'
   11     | CONTINUE ';'
   12     | block
   13     | funcdef
   14     | ';'

   15 expr: assignexpr
   16     | expr '+' expr
   17     | expr '-' expr
   18     | expr '*' expr
   19     | expr '/' expr
   20     | expr '%' expr
   21     | expr '>' expr
   22     | expr '<' expr
   23     | expr GREATEREQUAL expr
   24     | expr LESSEQUAL expr
   25     | expr EQUAL expr
   26     | expr NOTEQUAL expr
   27     | expr AND expr
   28     | expr OR expr
   29     | term

   30 term: '(' expr ')'
   31     | '-' expr
   32     | NOT expr
   33     | PLUSPLUS lvalue
   34     | lvalue PLUSPLUS
   35     | MINUSMINUS lvalue
   36     | lvalue MINUSMINUS
   37     | primary

   38 assignexpr: lvalue '=' expr

   39 primary: lvalue
   40        | call
   41        | objectdef
   42        | '(' funcdef ')'
   43        | const

   44 lvalue: ID
   45       | LOCAL ID
   46       | SCOPEOP ID
   47       | member

   48 member: lvalue '.' ID
   49       | lvalue '[' expr ']'

   50 $@1: %empty

   51 member: call '.' ID $@1 call '[' expr ']'

   52 call: call '(' elist ')'
   53     | lvalue callsuffix
   54     | '(' funcdef ')' '(' elist ')'

   55 callsuffix: normcall
   56           | methodcall

   57 normcall: '(' elist ')'

   58 methodcall: DOUPLEDOT ID '(' elist ')'

   59 elist: %empty
   60      | expr elist1

   61 elist1: %empty
   62       | ',' expr elist1

   63 objectdef: '[' elist ']'
   64          | '[' indexed ']'

   65 indexed: indexedelem more

   66 more: ',' indexedelem more
   67     | %empty

   68 indexedelem: '{' expr ':' expr '}'

   69 block: '{' stmt1 '}'
   70      | '{' '}'

   71 funcdef: FUNCTION ID '(' idlist ')' block
   72        | FUNCTION '(' idlist ')' block

   73 const: NUMBER
   74      | STRING
   75      | NIL
   76      | TRUE
   77      | FALSE

   78 idlist: %empty
   79       | ID idlist1

   80 idlist1: %empty
   81        | ',' ID idlist1

   82 ifstmt: IF '(' expr ')' stmt ifstmt1

   83 ifstmt1: %empty
   84        | ELSE stmt

   85 whilestmt: WHILE '(' expr ')' stmt

   86 forstmt: FOR '(' elist ';' expr ';' elist ')' stmt

   87 returnstmt: RETURN ';'
   88           | RETURN expr ';'


Terminals, with rules where they appear

$end (0) 0
'%' (37) 20
'(' (40) 30 42 52 54 57 58 71 72 82 85 86
')' (41) 30 42 52 54 57 58 71 72 82 85 86
'*' (42) 18
'+' (43) 16
',' (44) 62 66 81
'-' (45) 17 31
'.' (46) 48 51
'/' (47) 19
':' (58) 68
';' (59) 5 10 11 14 86 87 88
'<' (60) 22
'=' (61) 38
'>' (62) 21
'[' (91) 49 51 63 64
']' (93) 49 51 63 64
'{' (123) 68 69 70
'}' (125) 68 69 70
error (256)
ID (258) 44 45 46 48 51 58 71 79 81
NUMBER (259) 73
STRING (260) 74
BREAK (261) 10
CONTINUE (262) 11
AND (263) 27
OR (264) 28
NOT (265) 32
GREATEREQUAL (266) 23
LESSEQUAL (267) 24
EQUAL (268) 25
NOTEQUAL (269) 26
PLUSPLUS (270) 33 34
MINUSMINUS (271) 35 36
LOCAL (272) 45
SCOPEOP (273) 46
DOUPLEDOT (274) 58
FUNCTION (275) 71 72
NIL (276) 75
TRUE (277) 76
FALSE (278) 77
IF (279) 82
ELSE (280) 84
WHILE (281) 85
FOR (282) 86
RETURN (283) 87 88
DOUBLEDOT (284)
UMINUS (285)


Nonterminals, with rules where they appear

$accept (49)
    on left: 0
program (50)
    on left: 1 2, on right: 0
stmt1 (51)
    on left: 3 4, on right: 1 3 69
stmt (52)
    on left: 5 6 7 8 9 10 11 12 13 14, on right: 3 4 82 84 85 86
expr (53)
    on left: 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29, on right:
    5 16 17 18 19 20 21 22 23 24 25 26 27 28 30 31 32 38 49 51 60 62
    68 82 85 86 88
term (54)
    on left: 30 31 32 33 34 35 36 37, on right: 29
assignexpr (55)
    on left: 38, on right: 15
primary (56)
    on left: 39 40 41 42 43, on right: 37
lvalue (57)
    on left: 44 45 46 47, on right: 33 34 35 36 38 39 48 49 53
member (58)
    on left: 48 49 51, on right: 47
$@1 (59)
    on left: 50, on right: 51
call (60)
    on left: 52 53 54, on right: 40 51 52
callsuffix (61)
    on left: 55 56, on right: 53
normcall (62)
    on left: 57, on right: 55
methodcall (63)
    on left: 58, on right: 56
elist (64)
    on left: 59 60, on right: 52 54 57 58 63 86
elist1 (65)
    on left: 61 62, on right: 60 62
objectdef (66)
    on left: 63 64, on right: 41
indexed (67)
    on left: 65, on right: 64
more (68)
    on left: 66 67, on right: 65 66
indexedelem (69)
    on left: 68, on right: 65 66
block (70)
    on left: 69 70, on right: 12 71 72
funcdef (71)
    on left: 71 72, on right: 13 42 54
const (72)
    on left: 73 74 75 76 77, on right: 43
idlist (73)
    on left: 78 79, on right: 71 72
idlist1 (74)
    on left: 80 81, on right: 79 81
ifstmt (75)
    on left: 82, on right: 6
ifstmt1 (76)
    on left: 83 84, on right: 82
whilestmt (77)
    on left: 85, on right: 7
forstmt (78)
    on left: 86, on right: 8
returnstmt (79)
    on left: 87 88, on right: 9


State 0

    0 $accept: . program $end

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    CONTINUE    shift, and go to state 5
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    FUNCTION    shift, and go to state 11
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    IF          shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    RETURN      shift, and go to state 18
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21
    ';'         shift, and go to state 22
    '{'         shift, and go to state 23

    $default  reduce using rule 2 (program)

    program     go to state 24
    stmt1       go to state 25
    stmt        go to state 26
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    funcdef     go to state 36
    const       go to state 37
    ifstmt      go to state 38
    whilestmt   go to state 39
    forstmt     go to state 40
    returnstmt  go to state 41


State 1

   44 lvalue: ID .

    $default  reduce using rule 44 (lvalue)


State 2

   73 const: NUMBER .

    $default  reduce using rule 73 (const)


State 3

   74 const: STRING .

    $default  reduce using rule 74 (const)


State 4

   10 stmt: BREAK . ';'

    ';'  shift, and go to state 42


State 5

   11 stmt: CONTINUE . ';'

    ';'  shift, and go to state 43


State 6

   32 term: NOT . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    expr        go to state 44
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 7

   33 term: PLUSPLUS . lvalue

    ID       shift, and go to state 1
    LOCAL    shift, and go to state 9
    SCOPEOP  shift, and go to state 10
    '('      shift, and go to state 45

    lvalue  go to state 46
    member  go to state 32
    call    go to state 47


State 8

   35 term: MINUSMINUS . lvalue

    ID       shift, and go to state 1
    LOCAL    shift, and go to state 9
    SCOPEOP  shift, and go to state 10
    '('      shift, and go to state 45

    lvalue  go to state 48
    member  go to state 32
    call    go to state 47


State 9

   45 lvalue: LOCAL . ID

    ID  shift, and go to state 49


State 10

   46 lvalue: SCOPEOP . ID

    ID  shift, and go to state 50


State 11

   71 funcdef: FUNCTION . ID '(' idlist ')' block
   72        | FUNCTION . '(' idlist ')' block

    ID   shift, and go to state 51
    '('  shift, and go to state 52


State 12

   75 const: NIL .

    $default  reduce using rule 75 (const)


State 13

   76 const: TRUE .

    $default  reduce using rule 76 (const)


State 14

   77 const: FALSE .

    $default  reduce using rule 77 (const)


State 15

   82 ifstmt: IF . '(' expr ')' stmt ifstmt1

    '('  shift, and go to state 53


State 16

   85 whilestmt: WHILE . '(' expr ')' stmt

    '('  shift, and go to state 54


State 17

   86 forstmt: FOR . '(' elist ';' expr ';' elist ')' stmt

    '('  shift, and go to state 55


State 18

   87 returnstmt: RETURN . ';'
   88           | RETURN . expr ';'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21
    ';'         shift, and go to state 56

    expr        go to state 57
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 19

   30 term: '(' . expr ')'
   42 primary: '(' . funcdef ')'
   54 call: '(' . funcdef ')' '(' elist ')'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    FUNCTION    shift, and go to state 11
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    expr        go to state 58
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    funcdef     go to state 59
    const       go to state 37


State 20

   63 objectdef: '[' . elist ']'
   64          | '[' . indexed ']'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21
    '{'         shift, and go to state 60

    $default  reduce using rule 59 (elist)

    expr         go to state 61
    term         go to state 28
    assignexpr   go to state 29
    primary      go to state 30
    lvalue       go to state 31
    member       go to state 32
    call         go to state 33
    elist        go to state 62
    objectdef    go to state 34
    indexed      go to state 63
    indexedelem  go to state 64
    const        go to state 37


State 21

   31 term: '-' . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    expr        go to state 65
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 22

   14 stmt: ';' .

    $default  reduce using rule 14 (stmt)


State 23

   69 block: '{' . stmt1 '}'
   70      | '{' . '}'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    CONTINUE    shift, and go to state 5
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    FUNCTION    shift, and go to state 11
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    IF          shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    RETURN      shift, and go to state 18
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21
    ';'         shift, and go to state 22
    '{'         shift, and go to state 23
    '}'         shift, and go to state 66

    stmt1       go to state 67
    stmt        go to state 26
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    funcdef     go to state 36
    const       go to state 37
    ifstmt      go to state 38
    whilestmt   go to state 39
    forstmt     go to state 40
    returnstmt  go to state 41


State 24

    0 $accept: program . $end

    $end  shift, and go to state 68


State 25

    1 program: stmt1 .
    3 stmt1: stmt1 . stmt

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    CONTINUE    shift, and go to state 5
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    FUNCTION    shift, and go to state 11
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    IF          shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    RETURN      shift, and go to state 18
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21
    ';'         shift, and go to state 22
    '{'         shift, and go to state 23

    $default  reduce using rule 1 (program)

    stmt        go to state 69
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    funcdef     go to state 36
    const       go to state 37
    ifstmt      go to state 38
    whilestmt   go to state 39
    forstmt     go to state 40
    returnstmt  go to state 41


State 26

    4 stmt1: stmt .

    $default  reduce using rule 4 (stmt1)


State 27

    5 stmt: expr . ';'
   16 expr: expr . '+' expr
   17     | expr . '-' expr
   18     | expr . '*' expr
   19     | expr . '/' expr
   20     | expr . '%' expr
   21     | expr . '>' expr
   22     | expr . '<' expr
   23     | expr . GREATEREQUAL expr
   24     | expr . LESSEQUAL expr
   25     | expr . EQUAL expr
   26     | expr . NOTEQUAL expr
   27     | expr . AND expr
   28     | expr . OR expr

    AND           shift, and go to state 70
    OR            shift, and go to state 71
    GREATEREQUAL  shift, and go to state 72
    LESSEQUAL     shift, and go to state 73
    EQUAL         shift, and go to state 74
    NOTEQUAL      shift, and go to state 75
    '*'           shift, and go to state 76
    '/'           shift, and go to state 77
    '%'           shift, and go to state 78
    '+'           shift, and go to state 79
    '-'           shift, and go to state 80
    '>'           shift, and go to state 81
    '<'           shift, and go to state 82
    ';'           shift, and go to state 83


State 28

   29 expr: term .

    $default  reduce using rule 29 (expr)


State 29

   15 expr: assignexpr .

    $default  reduce using rule 15 (expr)


State 30

   37 term: primary .

    $default  reduce using rule 37 (term)


State 31

   34 term: lvalue . PLUSPLUS
   36     | lvalue . MINUSMINUS
   38 assignexpr: lvalue . '=' expr
   39 primary: lvalue .
   48 member: lvalue . '.' ID
   49       | lvalue . '[' expr ']'
   53 call: lvalue . callsuffix

    PLUSPLUS    shift, and go to state 84
    MINUSMINUS  shift, and go to state 85
    DOUPLEDOT   shift, and go to state 86
    '('         shift, and go to state 87
    '['         shift, and go to state 88
    '.'         shift, and go to state 89
    '='         shift, and go to state 90

    $default  reduce using rule 39 (primary)

    callsuffix  go to state 91
    normcall    go to state 92
    methodcall  go to state 93


State 32

   47 lvalue: member .

    $default  reduce using rule 47 (lvalue)


State 33

   40 primary: call .
   51 member: call . '.' ID $@1 call '[' expr ']'
   52 call: call . '(' elist ')'

    '('  shift, and go to state 94
    '.'  shift, and go to state 95

    $default  reduce using rule 40 (primary)


State 34

   41 primary: objectdef .

    $default  reduce using rule 41 (primary)


State 35

   12 stmt: block .

    $default  reduce using rule 12 (stmt)


State 36

   13 stmt: funcdef .

    $default  reduce using rule 13 (stmt)


State 37

   43 primary: const .

    $default  reduce using rule 43 (primary)


State 38

    6 stmt: ifstmt .

    $default  reduce using rule 6 (stmt)


State 39

    7 stmt: whilestmt .

    $default  reduce using rule 7 (stmt)


State 40

    8 stmt: forstmt .

    $default  reduce using rule 8 (stmt)


State 41

    9 stmt: returnstmt .

    $default  reduce using rule 9 (stmt)


State 42

   10 stmt: BREAK ';' .

    $default  reduce using rule 10 (stmt)


State 43

   11 stmt: CONTINUE ';' .

    $default  reduce using rule 11 (stmt)


State 44

   16 expr: expr . '+' expr
   17     | expr . '-' expr
   18     | expr . '*' expr
   19     | expr . '/' expr
   20     | expr . '%' expr
   21     | expr . '>' expr
   22     | expr . '<' expr
   23     | expr . GREATEREQUAL expr
   24     | expr . LESSEQUAL expr
   25     | expr . EQUAL expr
   26     | expr . NOTEQUAL expr
   27     | expr . AND expr
   28     | expr . OR expr
   32 term: NOT expr .

    AND           shift, and go to state 70
    OR            shift, and go to state 71
    GREATEREQUAL  shift, and go to state 72
    LESSEQUAL     shift, and go to state 73
    EQUAL         shift, and go to state 74
    NOTEQUAL      shift, and go to state 75
    '*'           shift, and go to state 76
    '/'           shift, and go to state 77
    '%'           shift, and go to state 78
    '+'           shift, and go to state 79
    '-'           shift, and go to state 80
    '>'           shift, and go to state 81
    '<'           shift, and go to state 82

    $default  reduce using rule 32 (term)


State 45

   54 call: '(' . funcdef ')' '(' elist ')'

    FUNCTION  shift, and go to state 11

    funcdef  go to state 96


State 46

   33 term: PLUSPLUS lvalue .
   48 member: lvalue . '.' ID
   49       | lvalue . '[' expr ']'
   53 call: lvalue . callsuffix

    DOUPLEDOT  shift, and go to state 86
    '('        shift, and go to state 87
    '['        shift, and go to state 88
    '.'        shift, and go to state 89

    $default  reduce using rule 33 (term)

    callsuffix  go to state 91
    normcall    go to state 92
    methodcall  go to state 93


State 47

   51 member: call . '.' ID $@1 call '[' expr ']'
   52 call: call . '(' elist ')'

    '('  shift, and go to state 94
    '.'  shift, and go to state 95


State 48

   35 term: MINUSMINUS lvalue .
   48 member: lvalue . '.' ID
   49       | lvalue . '[' expr ']'
   53 call: lvalue . callsuffix

    DOUPLEDOT  shift, and go to state 86
    '('        shift, and go to state 87
    '['        shift, and go to state 88
    '.'        shift, and go to state 89

    $default  reduce using rule 35 (term)

    callsuffix  go to state 91
    normcall    go to state 92
    methodcall  go to state 93


State 49

   45 lvalue: LOCAL ID .

    $default  reduce using rule 45 (lvalue)


State 50

   46 lvalue: SCOPEOP ID .

    $default  reduce using rule 46 (lvalue)


State 51

   71 funcdef: FUNCTION ID . '(' idlist ')' block

    '('  shift, and go to state 97


State 52

   72 funcdef: FUNCTION '(' . idlist ')' block

    ID  shift, and go to state 98

    $default  reduce using rule 78 (idlist)

    idlist  go to state 99


State 53

   82 ifstmt: IF '(' . expr ')' stmt ifstmt1

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    expr        go to state 100
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 54

   85 whilestmt: WHILE '(' . expr ')' stmt

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    expr        go to state 101
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 55

   86 forstmt: FOR '(' . elist ';' expr ';' elist ')' stmt

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    $default  reduce using rule 59 (elist)

    expr        go to state 61
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 102
    objectdef   go to state 34
    const       go to state 37


State 56

   87 returnstmt: RETURN ';' .

    $default  reduce using rule 87 (returnstmt)


State 57

   16 expr: expr . '+' expr
   17     | expr . '-' expr
   18     | expr . '*' expr
   19     | expr . '/' expr
   20     | expr . '%' expr
   21     | expr . '>' expr
   22     | expr . '<' expr
   23     | expr . GREATEREQUAL expr
   24     | expr . LESSEQUAL expr
   25     | expr . EQUAL expr
   26     | expr . NOTEQUAL expr
   27     | expr . AND expr
   28     | expr . OR expr
   88 returnstmt: RETURN expr . ';'

    AND           shift, and go to state 70
    OR            shift, and go to state 71
    GREATEREQUAL  shift, and go to state 72
    LESSEQUAL     shift, and go to state 73
    EQUAL         shift, and go to state 74
    NOTEQUAL      shift, and go to state 75
    '*'           shift, and go to state 76
    '/'           shift, and go to state 77
    '%'           shift, and go to state 78
    '+'           shift, and go to state 79
    '-'           shift, and go to state 80
    '>'           shift, and go to state 81
    '<'           shift, and go to state 82
    ';'           shift, and go to state 103


State 58

   16 expr: expr . '+' expr
   17     | expr . '-' expr
   18     | expr . '*' expr
   19     | expr . '/' expr
   20     | expr . '%' expr
   21     | expr . '>' expr
   22     | expr . '<' expr
   23     | expr . GREATEREQUAL expr
   24     | expr . LESSEQUAL expr
   25     | expr . EQUAL expr
   26     | expr . NOTEQUAL expr
   27     | expr . AND expr
   28     | expr . OR expr
   30 term: '(' expr . ')'

    AND           shift, and go to state 70
    OR            shift, and go to state 71
    GREATEREQUAL  shift, and go to state 72
    LESSEQUAL     shift, and go to state 73
    EQUAL         shift, and go to state 74
    NOTEQUAL      shift, and go to state 75
    ')'           shift, and go to state 104
    '*'           shift, and go to state 76
    '/'           shift, and go to state 77
    '%'           shift, and go to state 78
    '+'           shift, and go to state 79
    '-'           shift, and go to state 80
    '>'           shift, and go to state 81
    '<'           shift, and go to state 82


State 59

   42 primary: '(' funcdef . ')'
   54 call: '(' funcdef . ')' '(' elist ')'

    ')'  shift, and go to state 105


State 60

   68 indexedelem: '{' . expr ':' expr '}'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    expr        go to state 106
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 61

   16 expr: expr . '+' expr
   17     | expr . '-' expr
   18     | expr . '*' expr
   19     | expr . '/' expr
   20     | expr . '%' expr
   21     | expr . '>' expr
   22     | expr . '<' expr
   23     | expr . GREATEREQUAL expr
   24     | expr . LESSEQUAL expr
   25     | expr . EQUAL expr
   26     | expr . NOTEQUAL expr
   27     | expr . AND expr
   28     | expr . OR expr
   60 elist: expr . elist1

    AND           shift, and go to state 70
    OR            shift, and go to state 71
    GREATEREQUAL  shift, and go to state 72
    LESSEQUAL     shift, and go to state 73
    EQUAL         shift, and go to state 74
    NOTEQUAL      shift, and go to state 75
    '*'           shift, and go to state 76
    '/'           shift, and go to state 77
    '%'           shift, and go to state 78
    '+'           shift, and go to state 79
    '-'           shift, and go to state 80
    '>'           shift, and go to state 81
    '<'           shift, and go to state 82
    ','           shift, and go to state 107

    $default  reduce using rule 61 (elist1)

    elist1  go to state 108


State 62

   63 objectdef: '[' elist . ']'

    ']'  shift, and go to state 109


State 63

   64 objectdef: '[' indexed . ']'

    ']'  shift, and go to state 110


State 64

   65 indexed: indexedelem . more

    ','  shift, and go to state 111

    $default  reduce using rule 67 (more)

    more  go to state 112


State 65

   16 expr: expr . '+' expr
   17     | expr . '-' expr
   18     | expr . '*' expr
   19     | expr . '/' expr
   20     | expr . '%' expr
   21     | expr . '>' expr
   22     | expr . '<' expr
   23     | expr . GREATEREQUAL expr
   24     | expr . LESSEQUAL expr
   25     | expr . EQUAL expr
   26     | expr . NOTEQUAL expr
   27     | expr . AND expr
   28     | expr . OR expr
   31 term: '-' expr .

    AND           shift, and go to state 70
    OR            shift, and go to state 71
    GREATEREQUAL  shift, and go to state 72
    LESSEQUAL     shift, and go to state 73
    EQUAL         shift, and go to state 74
    NOTEQUAL      shift, and go to state 75
    '*'           shift, and go to state 76
    '/'           shift, and go to state 77
    '%'           shift, and go to state 78
    '+'           shift, and go to state 79
    '-'           shift, and go to state 80
    '>'           shift, and go to state 81
    '<'           shift, and go to state 82

    $default  reduce using rule 31 (term)


State 66

   70 block: '{' '}' .

    $default  reduce using rule 70 (block)


State 67

    3 stmt1: stmt1 . stmt
   69 block: '{' stmt1 . '}'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    CONTINUE    shift, and go to state 5
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    FUNCTION    shift, and go to state 11
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    IF          shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    RETURN      shift, and go to state 18
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21
    ';'         shift, and go to state 22
    '{'         shift, and go to state 23
    '}'         shift, and go to state 113

    stmt        go to state 69
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    funcdef     go to state 36
    const       go to state 37
    ifstmt      go to state 38
    whilestmt   go to state 39
    forstmt     go to state 40
    returnstmt  go to state 41


State 68

    0 $accept: program $end .

    $default  accept


State 69

    3 stmt1: stmt1 stmt .

    $default  reduce using rule 3 (stmt1)


State 70

   27 expr: expr AND . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    expr        go to state 114
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 71

   28 expr: expr OR . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    expr        go to state 115
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 72

   23 expr: expr GREATEREQUAL . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    expr        go to state 116
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 73

   24 expr: expr LESSEQUAL . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    expr        go to state 117
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 74

   25 expr: expr EQUAL . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    expr        go to state 118
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 75

   26 expr: expr NOTEQUAL . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    expr        go to state 119
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 76

   18 expr: expr '*' . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    expr        go to state 120
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 77

   19 expr: expr '/' . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    expr        go to state 121
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 78

   20 expr: expr '%' . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    expr        go to state 122
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 79

   16 expr: expr '+' . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    expr        go to state 123
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 80

   17 expr: expr '-' . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    expr        go to state 124
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 81

   21 expr: expr '>' . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    expr        go to state 125
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 82

   22 expr: expr '<' . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    expr        go to state 126
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 83

    5 stmt: expr ';' .

    $default  reduce using rule 5 (stmt)


State 84

   34 term: lvalue PLUSPLUS .

    $default  reduce using rule 34 (term)


State 85

   36 term: lvalue MINUSMINUS .

    $default  reduce using rule 36 (term)


State 86

   58 methodcall: DOUPLEDOT . ID '(' elist ')'

    ID  shift, and go to state 127


State 87

   57 normcall: '(' . elist ')'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    $default  reduce using rule 59 (elist)

    expr        go to state 61
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 128
    objectdef   go to state 34
    const       go to state 37


State 88

   49 member: lvalue '[' . expr ']'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    expr        go to state 129
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 89

   48 member: lvalue '.' . ID

    ID  shift, and go to state 130


State 90

   38 assignexpr: lvalue '=' . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    expr        go to state 131
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 91

   53 call: lvalue callsuffix .

    $default  reduce using rule 53 (call)


State 92

   55 callsuffix: normcall .

    $default  reduce using rule 55 (callsuffix)


State 93

   56 callsuffix: methodcall .

    $default  reduce using rule 56 (callsuffix)


State 94

   52 call: call '(' . elist ')'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    $default  reduce using rule 59 (elist)

    expr        go to state 61
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 132
    objectdef   go to state 34
    const       go to state 37


State 95

   51 member: call '.' . ID $@1 call '[' expr ']'

    ID  shift, and go to state 133


State 96

   54 call: '(' funcdef . ')' '(' elist ')'

    ')'  shift, and go to state 134


State 97

   71 funcdef: FUNCTION ID '(' . idlist ')' block

    ID  shift, and go to state 98

    $default  reduce using rule 78 (idlist)

    idlist  go to state 135


State 98

   79 idlist: ID . idlist1

    ','  shift, and go to state 136

    $default  reduce using rule 80 (idlist1)

    idlist1  go to state 137


State 99

   72 funcdef: FUNCTION '(' idlist . ')' block

    ')'  shift, and go to state 138


State 100

   16 expr: expr . '+' expr
   17     | expr . '-' expr
   18     | expr . '*' expr
   19     | expr . '/' expr
   20     | expr . '%' expr
   21     | expr . '>' expr
   22     | expr . '<' expr
   23     | expr . GREATEREQUAL expr
   24     | expr . LESSEQUAL expr
   25     | expr . EQUAL expr
   26     | expr . NOTEQUAL expr
   27     | expr . AND expr
   28     | expr . OR expr
   82 ifstmt: IF '(' expr . ')' stmt ifstmt1

    AND           shift, and go to state 70
    OR            shift, and go to state 71
    GREATEREQUAL  shift, and go to state 72
    LESSEQUAL     shift, and go to state 73
    EQUAL         shift, and go to state 74
    NOTEQUAL      shift, and go to state 75
    ')'           shift, and go to state 139
    '*'           shift, and go to state 76
    '/'           shift, and go to state 77
    '%'           shift, and go to state 78
    '+'           shift, and go to state 79
    '-'           shift, and go to state 80
    '>'           shift, and go to state 81
    '<'           shift, and go to state 82


State 101

   16 expr: expr . '+' expr
   17     | expr . '-' expr
   18     | expr . '*' expr
   19     | expr . '/' expr
   20     | expr . '%' expr
   21     | expr . '>' expr
   22     | expr . '<' expr
   23     | expr . GREATEREQUAL expr
   24     | expr . LESSEQUAL expr
   25     | expr . EQUAL expr
   26     | expr . NOTEQUAL expr
   27     | expr . AND expr
   28     | expr . OR expr
   85 whilestmt: WHILE '(' expr . ')' stmt

    AND           shift, and go to state 70
    OR            shift, and go to state 71
    GREATEREQUAL  shift, and go to state 72
    LESSEQUAL     shift, and go to state 73
    EQUAL         shift, and go to state 74
    NOTEQUAL      shift, and go to state 75
    ')'           shift, and go to state 140
    '*'           shift, and go to state 76
    '/'           shift, and go to state 77
    '%'           shift, and go to state 78
    '+'           shift, and go to state 79
    '-'           shift, and go to state 80
    '>'           shift, and go to state 81
    '<'           shift, and go to state 82


State 102

   86 forstmt: FOR '(' elist . ';' expr ';' elist ')' stmt

    ';'  shift, and go to state 141


State 103

   88 returnstmt: RETURN expr ';' .

    $default  reduce using rule 88 (returnstmt)


State 104

   30 term: '(' expr ')' .

    $default  reduce using rule 30 (term)


State 105

   42 primary: '(' funcdef ')' .
   54 call: '(' funcdef ')' . '(' elist ')'

    '('  shift, and go to state 142

    $default  reduce using rule 42 (primary)


State 106

   16 expr: expr . '+' expr
   17     | expr . '-' expr
   18     | expr . '*' expr
   19     | expr . '/' expr
   20     | expr . '%' expr
   21     | expr . '>' expr
   22     | expr . '<' expr
   23     | expr . GREATEREQUAL expr
   24     | expr . LESSEQUAL expr
   25     | expr . EQUAL expr
   26     | expr . NOTEQUAL expr
   27     | expr . AND expr
   28     | expr . OR expr
   68 indexedelem: '{' expr . ':' expr '}'

    AND           shift, and go to state 70
    OR            shift, and go to state 71
    GREATEREQUAL  shift, and go to state 72
    LESSEQUAL     shift, and go to state 73
    EQUAL         shift, and go to state 74
    NOTEQUAL      shift, and go to state 75
    '*'           shift, and go to state 76
    '/'           shift, and go to state 77
    '%'           shift, and go to state 78
    '+'           shift, and go to state 79
    '-'           shift, and go to state 80
    '>'           shift, and go to state 81
    '<'           shift, and go to state 82
    ':'           shift, and go to state 143


State 107

   62 elist1: ',' . expr elist1

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    expr        go to state 144
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 108

   60 elist: expr elist1 .

    $default  reduce using rule 60 (elist)


State 109

   63 objectdef: '[' elist ']' .

    $default  reduce using rule 63 (objectdef)


State 110

   64 objectdef: '[' indexed ']' .

    $default  reduce using rule 64 (objectdef)


State 111

   66 more: ',' . indexedelem more

    '{'  shift, and go to state 60

    indexedelem  go to state 145


State 112

   65 indexed: indexedelem more .

    $default  reduce using rule 65 (indexed)


State 113

   69 block: '{' stmt1 '}' .

    $default  reduce using rule 69 (block)


State 114

   16 expr: expr . '+' expr
   17     | expr . '-' expr
   18     | expr . '*' expr
   19     | expr . '/' expr
   20     | expr . '%' expr
   21     | expr . '>' expr
   22     | expr . '<' expr
   23     | expr . GREATEREQUAL expr
   24     | expr . LESSEQUAL expr
   25     | expr . EQUAL expr
   26     | expr . NOTEQUAL expr
   27     | expr . AND expr
   27     | expr AND expr .
   28     | expr . OR expr

    OR  shift, and go to state 71

    $default  reduce using rule 27 (expr)


State 115

   16 expr: expr . '+' expr
   17     | expr . '-' expr
   18     | expr . '*' expr
   19     | expr . '/' expr
   20     | expr . '%' expr
   21     | expr . '>' expr
   22     | expr . '<' expr
   23     | expr . GREATEREQUAL expr
   24     | expr . LESSEQUAL expr
   25     | expr . EQUAL expr
   26     | expr . NOTEQUAL expr
   27     | expr . AND expr
   28     | expr . OR expr
   28     | expr OR expr .

    $default  reduce using rule 28 (expr)


State 116

   16 expr: expr . '+' expr
   17     | expr . '-' expr
   18     | expr . '*' expr
   19     | expr . '/' expr
   20     | expr . '%' expr
   21     | expr . '>' expr
   22     | expr . '<' expr
   23     | expr . GREATEREQUAL expr
   23     | expr GREATEREQUAL expr .
   24     | expr . LESSEQUAL expr
   25     | expr . EQUAL expr
   26     | expr . NOTEQUAL expr
   27     | expr . AND expr
   28     | expr . OR expr

    AND       shift, and go to state 70
    OR        shift, and go to state 71
    EQUAL     shift, and go to state 74
    NOTEQUAL  shift, and go to state 75

    GREATEREQUAL  error (nonassociative)
    LESSEQUAL     error (nonassociative)
    '>'           error (nonassociative)
    '<'           error (nonassociative)

    $default  reduce using rule 23 (expr)


State 117

   16 expr: expr . '+' expr
   17     | expr . '-' expr
   18     | expr . '*' expr
   19     | expr . '/' expr
   20     | expr . '%' expr
   21     | expr . '>' expr
   22     | expr . '<' expr
   23     | expr . GREATEREQUAL expr
   24     | expr . LESSEQUAL expr
   24     | expr LESSEQUAL expr .
   25     | expr . EQUAL expr
   26     | expr . NOTEQUAL expr
   27     | expr . AND expr
   28     | expr . OR expr

    AND       shift, and go to state 70
    OR        shift, and go to state 71
    EQUAL     shift, and go to state 74
    NOTEQUAL  shift, and go to state 75

    GREATEREQUAL  error (nonassociative)
    LESSEQUAL     error (nonassociative)
    '>'           error (nonassociative)
    '<'           error (nonassociative)

    $default  reduce using rule 24 (expr)


State 118

   16 expr: expr . '+' expr
   17     | expr . '-' expr
   18     | expr . '*' expr
   19     | expr . '/' expr
   20     | expr . '%' expr
   21     | expr . '>' expr
   22     | expr . '<' expr
   23     | expr . GREATEREQUAL expr
   24     | expr . LESSEQUAL expr
   25     | expr . EQUAL expr
   25     | expr EQUAL expr .
   26     | expr . NOTEQUAL expr
   27     | expr . AND expr
   28     | expr . OR expr

    AND  shift, and go to state 70
    OR   shift, and go to state 71

    EQUAL     error (nonassociative)
    NOTEQUAL  error (nonassociative)

    $default  reduce using rule 25 (expr)


State 119

   16 expr: expr . '+' expr
   17     | expr . '-' expr
   18     | expr . '*' expr
   19     | expr . '/' expr
   20     | expr . '%' expr
   21     | expr . '>' expr
   22     | expr . '<' expr
   23     | expr . GREATEREQUAL expr
   24     | expr . LESSEQUAL expr
   25     | expr . EQUAL expr
   26     | expr . NOTEQUAL expr
   26     | expr NOTEQUAL expr .
   27     | expr . AND expr
   28     | expr . OR expr

    AND  shift, and go to state 70
    OR   shift, and go to state 71

    EQUAL     error (nonassociative)
    NOTEQUAL  error (nonassociative)

    $default  reduce using rule 26 (expr)


State 120

   16 expr: expr . '+' expr
   17     | expr . '-' expr
   18     | expr . '*' expr
   18     | expr '*' expr .
   19     | expr . '/' expr
   20     | expr . '%' expr
   21     | expr . '>' expr
   22     | expr . '<' expr
   23     | expr . GREATEREQUAL expr
   24     | expr . LESSEQUAL expr
   25     | expr . EQUAL expr
   26     | expr . NOTEQUAL expr
   27     | expr . AND expr
   28     | expr . OR expr

    AND           shift, and go to state 70
    OR            shift, and go to state 71
    GREATEREQUAL  shift, and go to state 72
    LESSEQUAL     shift, and go to state 73
    EQUAL         shift, and go to state 74
    NOTEQUAL      shift, and go to state 75
    '+'           shift, and go to state 79
    '-'           shift, and go to state 80
    '>'           shift, and go to state 81
    '<'           shift, and go to state 82

    $default  reduce using rule 18 (expr)


State 121

   16 expr: expr . '+' expr
   17     | expr . '-' expr
   18     | expr . '*' expr
   19     | expr . '/' expr
   19     | expr '/' expr .
   20     | expr . '%' expr
   21     | expr . '>' expr
   22     | expr . '<' expr
   23     | expr . GREATEREQUAL expr
   24     | expr . LESSEQUAL expr
   25     | expr . EQUAL expr
   26     | expr . NOTEQUAL expr
   27     | expr . AND expr
   28     | expr . OR expr

    AND           shift, and go to state 70
    OR            shift, and go to state 71
    GREATEREQUAL  shift, and go to state 72
    LESSEQUAL     shift, and go to state 73
    EQUAL         shift, and go to state 74
    NOTEQUAL      shift, and go to state 75
    '+'           shift, and go to state 79
    '-'           shift, and go to state 80
    '>'           shift, and go to state 81
    '<'           shift, and go to state 82

    $default  reduce using rule 19 (expr)


State 122

   16 expr: expr . '+' expr
   17     | expr . '-' expr
   18     | expr . '*' expr
   19     | expr . '/' expr
   20     | expr . '%' expr
   20     | expr '%' expr .
   21     | expr . '>' expr
   22     | expr . '<' expr
   23     | expr . GREATEREQUAL expr
   24     | expr . LESSEQUAL expr
   25     | expr . EQUAL expr
   26     | expr . NOTEQUAL expr
   27     | expr . AND expr
   28     | expr . OR expr

    AND           shift, and go to state 70
    OR            shift, and go to state 71
    GREATEREQUAL  shift, and go to state 72
    LESSEQUAL     shift, and go to state 73
    EQUAL         shift, and go to state 74
    NOTEQUAL      shift, and go to state 75
    '+'           shift, and go to state 79
    '-'           shift, and go to state 80
    '>'           shift, and go to state 81
    '<'           shift, and go to state 82

    $default  reduce using rule 20 (expr)


State 123

   16 expr: expr . '+' expr
   16     | expr '+' expr .
   17     | expr . '-' expr
   18     | expr . '*' expr
   19     | expr . '/' expr
   20     | expr . '%' expr
   21     | expr . '>' expr
   22     | expr . '<' expr
   23     | expr . GREATEREQUAL expr
   24     | expr . LESSEQUAL expr
   25     | expr . EQUAL expr
   26     | expr . NOTEQUAL expr
   27     | expr . AND expr
   28     | expr . OR expr

    AND           shift, and go to state 70
    OR            shift, and go to state 71
    GREATEREQUAL  shift, and go to state 72
    LESSEQUAL     shift, and go to state 73
    EQUAL         shift, and go to state 74
    NOTEQUAL      shift, and go to state 75
    '>'           shift, and go to state 81
    '<'           shift, and go to state 82

    $default  reduce using rule 16 (expr)


State 124

   16 expr: expr . '+' expr
   17     | expr . '-' expr
   17     | expr '-' expr .
   18     | expr . '*' expr
   19     | expr . '/' expr
   20     | expr . '%' expr
   21     | expr . '>' expr
   22     | expr . '<' expr
   23     | expr . GREATEREQUAL expr
   24     | expr . LESSEQUAL expr
   25     | expr . EQUAL expr
   26     | expr . NOTEQUAL expr
   27     | expr . AND expr
   28     | expr . OR expr

    AND           shift, and go to state 70
    OR            shift, and go to state 71
    GREATEREQUAL  shift, and go to state 72
    LESSEQUAL     shift, and go to state 73
    EQUAL         shift, and go to state 74
    NOTEQUAL      shift, and go to state 75
    '>'           shift, and go to state 81
    '<'           shift, and go to state 82

    $default  reduce using rule 17 (expr)


State 125

   16 expr: expr . '+' expr
   17     | expr . '-' expr
   18     | expr . '*' expr
   19     | expr . '/' expr
   20     | expr . '%' expr
   21     | expr . '>' expr
   21     | expr '>' expr .
   22     | expr . '<' expr
   23     | expr . GREATEREQUAL expr
   24     | expr . LESSEQUAL expr
   25     | expr . EQUAL expr
   26     | expr . NOTEQUAL expr
   27     | expr . AND expr
   28     | expr . OR expr

    AND       shift, and go to state 70
    OR        shift, and go to state 71
    EQUAL     shift, and go to state 74
    NOTEQUAL  shift, and go to state 75

    GREATEREQUAL  error (nonassociative)
    LESSEQUAL     error (nonassociative)
    '>'           error (nonassociative)
    '<'           error (nonassociative)

    $default  reduce using rule 21 (expr)


State 126

   16 expr: expr . '+' expr
   17     | expr . '-' expr
   18     | expr . '*' expr
   19     | expr . '/' expr
   20     | expr . '%' expr
   21     | expr . '>' expr
   22     | expr . '<' expr
   22     | expr '<' expr .
   23     | expr . GREATEREQUAL expr
   24     | expr . LESSEQUAL expr
   25     | expr . EQUAL expr
   26     | expr . NOTEQUAL expr
   27     | expr . AND expr
   28     | expr . OR expr

    AND       shift, and go to state 70
    OR        shift, and go to state 71
    EQUAL     shift, and go to state 74
    NOTEQUAL  shift, and go to state 75

    GREATEREQUAL  error (nonassociative)
    LESSEQUAL     error (nonassociative)
    '>'           error (nonassociative)
    '<'           error (nonassociative)

    $default  reduce using rule 22 (expr)


State 127

   58 methodcall: DOUPLEDOT ID . '(' elist ')'

    '('  shift, and go to state 146


State 128

   57 normcall: '(' elist . ')'

    ')'  shift, and go to state 147


State 129

   16 expr: expr . '+' expr
   17     | expr . '-' expr
   18     | expr . '*' expr
   19     | expr . '/' expr
   20     | expr . '%' expr
   21     | expr . '>' expr
   22     | expr . '<' expr
   23     | expr . GREATEREQUAL expr
   24     | expr . LESSEQUAL expr
   25     | expr . EQUAL expr
   26     | expr . NOTEQUAL expr
   27     | expr . AND expr
   28     | expr . OR expr
   49 member: lvalue '[' expr . ']'

    AND           shift, and go to state 70
    OR            shift, and go to state 71
    GREATEREQUAL  shift, and go to state 72
    LESSEQUAL     shift, and go to state 73
    EQUAL         shift, and go to state 74
    NOTEQUAL      shift, and go to state 75
    ']'           shift, and go to state 148
    '*'           shift, and go to state 76
    '/'           shift, and go to state 77
    '%'           shift, and go to state 78
    '+'           shift, and go to state 79
    '-'           shift, and go to state 80
    '>'           shift, and go to state 81
    '<'           shift, and go to state 82


State 130

   48 member: lvalue '.' ID .

    $default  reduce using rule 48 (member)


State 131

   16 expr: expr . '+' expr
   17     | expr . '-' expr
   18     | expr . '*' expr
   19     | expr . '/' expr
   20     | expr . '%' expr
   21     | expr . '>' expr
   22     | expr . '<' expr
   23     | expr . GREATEREQUAL expr
   24     | expr . LESSEQUAL expr
   25     | expr . EQUAL expr
   26     | expr . NOTEQUAL expr
   27     | expr . AND expr
   28     | expr . OR expr
   38 assignexpr: lvalue '=' expr .

    $default  reduce using rule 38 (assignexpr)


State 132

   52 call: call '(' elist . ')'

    ')'  shift, and go to state 149


State 133

   51 member: call '.' ID . $@1 call '[' expr ']'

    $default  reduce using rule 50 ($@1)

    $@1  go to state 150


State 134

   54 call: '(' funcdef ')' . '(' elist ')'

    '('  shift, and go to state 142


State 135

   71 funcdef: FUNCTION ID '(' idlist . ')' block

    ')'  shift, and go to state 151


State 136

   81 idlist1: ',' . ID idlist1

    ID  shift, and go to state 152


State 137

   79 idlist: ID idlist1 .

    $default  reduce using rule 79 (idlist)


State 138

   72 funcdef: FUNCTION '(' idlist ')' . block

    '{'  shift, and go to state 23

    block  go to state 153


State 139

   82 ifstmt: IF '(' expr ')' . stmt ifstmt1

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    CONTINUE    shift, and go to state 5
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    FUNCTION    shift, and go to state 11
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    IF          shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    RETURN      shift, and go to state 18
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21
    ';'         shift, and go to state 22
    '{'         shift, and go to state 23

    stmt        go to state 154
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    funcdef     go to state 36
    const       go to state 37
    ifstmt      go to state 38
    whilestmt   go to state 39
    forstmt     go to state 40
    returnstmt  go to state 41


State 140

   85 whilestmt: WHILE '(' expr ')' . stmt

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    CONTINUE    shift, and go to state 5
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    FUNCTION    shift, and go to state 11
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    IF          shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    RETURN      shift, and go to state 18
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21
    ';'         shift, and go to state 22
    '{'         shift, and go to state 23

    stmt        go to state 155
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    funcdef     go to state 36
    const       go to state 37
    ifstmt      go to state 38
    whilestmt   go to state 39
    forstmt     go to state 40
    returnstmt  go to state 41


State 141

   86 forstmt: FOR '(' elist ';' . expr ';' elist ')' stmt

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    expr        go to state 156
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 142

   54 call: '(' funcdef ')' '(' . elist ')'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    $default  reduce using rule 59 (elist)

    expr        go to state 61
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 157
    objectdef   go to state 34
    const       go to state 37


State 143

   68 indexedelem: '{' expr ':' . expr '}'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    expr        go to state 158
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 144

   16 expr: expr . '+' expr
   17     | expr . '-' expr
   18     | expr . '*' expr
   19     | expr . '/' expr
   20     | expr . '%' expr
   21     | expr . '>' expr
   22     | expr . '<' expr
   23     | expr . GREATEREQUAL expr
   24     | expr . LESSEQUAL expr
   25     | expr . EQUAL expr
   26     | expr . NOTEQUAL expr
   27     | expr . AND expr
   28     | expr . OR expr
   62 elist1: ',' expr . elist1

    AND           shift, and go to state 70
    OR            shift, and go to state 71
    GREATEREQUAL  shift, and go to state 72
    LESSEQUAL     shift, and go to state 73
    EQUAL         shift, and go to state 74
    NOTEQUAL      shift, and go to state 75
    '*'           shift, and go to state 76
    '/'           shift, and go to state 77
    '%'           shift, and go to state 78
    '+'           shift, and go to state 79
    '-'           shift, and go to state 80
    '>'           shift, and go to state 81
    '<'           shift, and go to state 82
    ','           shift, and go to state 107

    $default  reduce using rule 61 (elist1)

    elist1  go to state 159


State 145

   66 more: ',' indexedelem . more

    ','  shift, and go to state 111

    $default  reduce using rule 67 (more)

    more  go to state 160


State 146

   58 methodcall: DOUPLEDOT ID '(' . elist ')'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    $default  reduce using rule 59 (elist)

    expr        go to state 61
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 161
    objectdef   go to state 34
    const       go to state 37


State 147

   57 normcall: '(' elist ')' .

    $default  reduce using rule 57 (normcall)


State 148

   49 member: lvalue '[' expr ']' .

    $default  reduce using rule 49 (member)


State 149

   52 call: call '(' elist ')' .

    $default  reduce using rule 52 (call)


State 150

   51 member: call '.' ID $@1 . call '[' expr ']'

    ID       shift, and go to state 1
    LOCAL    shift, and go to state 9
    SCOPEOP  shift, and go to state 10
    '('      shift, and go to state 45

    lvalue  go to state 162
    member  go to state 32
    call    go to state 163


State 151

   71 funcdef: FUNCTION ID '(' idlist ')' . block

    '{'  shift, and go to state 23

    block  go to state 164


State 152

   81 idlist1: ',' ID . idlist1

    ','  shift, and go to state 136

    $default  reduce using rule 80 (idlist1)

    idlist1  go to state 165


State 153

   72 funcdef: FUNCTION '(' idlist ')' block .

    $default  reduce using rule 72 (funcdef)


State 154

   82 ifstmt: IF '(' expr ')' stmt . ifstmt1

    ELSE  shift, and go to state 166

    ELSE      [reduce using rule 83 (ifstmt1)]
    $default  reduce using rule 83 (ifstmt1)

    ifstmt1  go to state 167


State 155

   85 whilestmt: WHILE '(' expr ')' stmt .

    $default  reduce using rule 85 (whilestmt)


State 156

   16 expr: expr . '+' expr
   17     | expr . '-' expr
   18     | expr . '*' expr
   19     | expr . '/' expr
   20     | expr . '%' expr
   21     | expr . '>' expr
   22     | expr . '<' expr
   23     | expr . GREATEREQUAL expr
   24     | expr . LESSEQUAL expr
   25     | expr . EQUAL expr
   26     | expr . NOTEQUAL expr
   27     | expr . AND expr
   28     | expr . OR expr
   86 forstmt: FOR '(' elist ';' expr . ';' elist ')' stmt

    AND           shift, and go to state 70
    OR            shift, and go to state 71
    GREATEREQUAL  shift, and go to state 72
    LESSEQUAL     shift, and go to state 73
    EQUAL         shift, and go to state 74
    NOTEQUAL      shift, and go to state 75
    '*'           shift, and go to state 76
    '/'           shift, and go to state 77
    '%'           shift, and go to state 78
    '+'           shift, and go to state 79
    '-'           shift, and go to state 80
    '>'           shift, and go to state 81
    '<'           shift, and go to state 82
    ';'           shift, and go to state 168


State 157

   54 call: '(' funcdef ')' '(' elist . ')'

    ')'  shift, and go to state 169


State 158

   16 expr: expr . '+' expr
   17     | expr . '-' expr
   18     | expr . '*' expr
   19     | expr . '/' expr
   20     | expr . '%' expr
   21     | expr . '>' expr
   22     | expr . '<' expr
   23     | expr . GREATEREQUAL expr
   24     | expr . LESSEQUAL expr
   25     | expr . EQUAL expr
   26     | expr . NOTEQUAL expr
   27     | expr . AND expr
   28     | expr . OR expr
   68 indexedelem: '{' expr ':' expr . '}'

    AND           shift, and go to state 70
    OR            shift, and go to state 71
    GREATEREQUAL  shift, and go to state 72
    LESSEQUAL     shift, and go to state 73
    EQUAL         shift, and go to state 74
    NOTEQUAL      shift, and go to state 75
    '*'           shift, and go to state 76
    '/'           shift, and go to state 77
    '%'           shift, and go to state 78
    '+'           shift, and go to state 79
    '-'           shift, and go to state 80
    '>'           shift, and go to state 81
    '<'           shift, and go to state 82
    '}'           shift, and go to state 170


State 159

   62 elist1: ',' expr elist1 .

    $default  reduce using rule 62 (elist1)


State 160

   66 more: ',' indexedelem more .

    $default  reduce using rule 66 (more)


State 161

   58 methodcall: DOUPLEDOT ID '(' elist . ')'

    ')'  shift, and go to state 171


State 162

   48 member: lvalue . '.' ID
   49       | lvalue . '[' expr ']'
   53 call: lvalue . callsuffix

    DOUPLEDOT  shift, and go to state 86
    '('        shift, and go to state 87
    '['        shift, and go to state 88
    '.'        shift, and go to state 89

    callsuffix  go to state 91
    normcall    go to state 92
    methodcall  go to state 93


State 163

   51 member: call . '.' ID $@1 call '[' expr ']'
   51       | call '.' ID $@1 call . '[' expr ']'
   52 call: call . '(' elist ')'

    '('  shift, and go to state 94
    '['  shift, and go to state 172
    '.'  shift, and go to state 95


State 164

   71 funcdef: FUNCTION ID '(' idlist ')' block .

    $default  reduce using rule 71 (funcdef)


State 165

   81 idlist1: ',' ID idlist1 .

    $default  reduce using rule 81 (idlist1)


State 166

   84 ifstmt1: ELSE . stmt

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    CONTINUE    shift, and go to state 5
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    FUNCTION    shift, and go to state 11
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    IF          shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    RETURN      shift, and go to state 18
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21
    ';'         shift, and go to state 22
    '{'         shift, and go to state 23

    stmt        go to state 173
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    funcdef     go to state 36
    const       go to state 37
    ifstmt      go to state 38
    whilestmt   go to state 39
    forstmt     go to state 40
    returnstmt  go to state 41


State 167

   82 ifstmt: IF '(' expr ')' stmt ifstmt1 .

    $default  reduce using rule 82 (ifstmt)


State 168

   86 forstmt: FOR '(' elist ';' expr ';' . elist ')' stmt

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    $default  reduce using rule 59 (elist)

    expr        go to state 61
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 174
    objectdef   go to state 34
    const       go to state 37


State 169

   54 call: '(' funcdef ')' '(' elist ')' .

    $default  reduce using rule 54 (call)


State 170

   68 indexedelem: '{' expr ':' expr '}' .

    $default  reduce using rule 68 (indexedelem)


State 171

   58 methodcall: DOUPLEDOT ID '(' elist ')' .

    $default  reduce using rule 58 (methodcall)


State 172

   51 member: call '.' ID $@1 call '[' . expr ']'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    expr        go to state 175
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 173

   84 ifstmt1: ELSE stmt .

    $default  reduce using rule 84 (ifstmt1)


State 174

   86 forstmt: FOR '(' elist ';' expr ';' elist . ')' stmt

    ')'  shift, and go to state 176


State 175

   16 expr: expr . '+' expr
   17     | expr . '-' expr
   18     | expr . '*' expr
   19     | expr . '/' expr
   20     | expr . '%' expr
   21     | expr . '>' expr
   22     | expr . '<' expr
   23     | expr . GREATEREQUAL expr
   24     | expr . LESSEQUAL expr
   25     | expr . EQUAL expr
   26     | expr . NOTEQUAL expr
   27     | expr . AND expr
   28     | expr . OR expr
   51 member: call '.' ID $@1 call '[' expr . ']'

    AND           shift, and go to state 70
    OR            shift, and go to state 71
    GREATEREQUAL  shift, and go to state 72
    LESSEQUAL     shift, and go to state 73
    EQUAL         shift, and go to state 74
    NOTEQUAL      shift, and go to state 75
    ']'           shift, and go to state 177
    '*'           shift, and go to state 76
    '/'           shift, and go to state 77
    '%'           shift, and go to state 78
    '+'           shift, and go to state 79
    '-'           shift, and go to state 80
    '>'           shift, and go to state 81
    '<'           shift, and go to state 82


State 176

   86 forstmt: FOR '(' elist ';' expr ';' elist ')' . stmt

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    CONTINUE    shift, and go to state 5
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    FUNCTION    shift, and go to state 11
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    IF          shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    RETURN      shift, and go to state 18
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21
    ';'         shift, and go to state 22
    '{'         shift, and go to state 23

    stmt        go to state 178
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    funcdef     go to state 36
    const       go to state 37
    ifstmt      go to state 38
    whilestmt   go to state 39
    forstmt     go to state 40
    returnstmt  go to state 41


State 177

   51 member: call '.' ID $@1 call '[' expr ']' .

    $default  reduce using rule 51 (member)


State 178

   86 forstmt: FOR '(' elist ';' expr ';' elist ')' stmt .

    $default  reduce using rule 86 (forstmt)
