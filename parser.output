Terminals unused in grammar

   DOUBLEDOT


State 155 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: stmt1
    2        | %empty

    3 stmt1: stmt1 stmt
    4      | stmt

    5 stmt: expr ';'
    6     | ifstmt
    7     | whilestmt
    8     | forstmt
    9     | returnstmt
   10     | BREAK ';'
   11     | CONTINUE ';'

   12 $@1: %empty

   13 $@2: %empty

   14 stmt: $@1 block $@2
   15     | funcdef
   16     | ';'

   17 expr: assignexpr
   18     | expr '+' expr
   19     | expr '-' expr
   20     | expr '*' expr
   21     | expr '/' expr
   22     | expr '%' expr
   23     | expr '>' expr
   24     | expr '<' expr
   25     | expr GREATEREQUAL expr
   26     | expr LESSEQUAL expr
   27     | expr EQUAL expr
   28     | expr NOTEQUAL expr
   29     | expr AND expr
   30     | expr OR expr
   31     | term

   32 term: '(' expr ')'
   33     | '-' expr
   34     | NOT expr
   35     | PLUSPLUS lvalue
   36     | lvalue PLUSPLUS
   37     | MINUSMINUS lvalue
   38     | lvalue MINUSMINUS
   39     | primary

   40 assignexpr: lvalue '=' expr

   41 primary: lvalue
   42        | call
   43        | objectdef
   44        | '(' funcdef ')'
   45        | const

   46 lvalue: ID
   47       | LOCAL ID
   48       | SCOPEOP ID
   49       | member

   50 member: lvalue '.' ID
   51       | lvalue '[' expr ']'

   52 $@3: %empty

   53 member: call '.' ID $@3 call '[' expr ']'

   54 call: call '(' elist ')'
   55     | lvalue callsuffix
   56     | '(' funcdef ')' '(' elist ')'

   57 callsuffix: normcall
   58           | methodcall

   59 normcall: '(' elist ')'

   60 methodcall: DOUPLEDOT ID '(' elist ')'

   61 elist: %empty
   62      | expr elist1

   63 elist1: %empty
   64       | ',' expr elist1

   65 objectdef: '[' elist ']'
   66          | '[' indexed ']'

   67 indexed: indexedelem more

   68 more: ',' indexedelem more
   69     | %empty

   70 indexedelem: '{' expr ':' expr '}'

   71 $@4: %empty

   72 $@5: %empty

   73 block: '{' $@4 stmt1 '}' $@5
   74      | '{' '}'

   75 $@6: %empty

   76 $@7: %empty

   77 $@8: %empty

   78 funcdef: FUNCTION ID '(' $@6 idlist ')' $@7 block $@8

   79 $@9: %empty

   80 $@10: %empty

   81 funcdef: FUNCTION '(' $@9 idlist ')' $@10 block

   82 const: NUMBER
   83      | STRING
   84      | NIL
   85      | TRUE
   86      | FALSE

   87 idlist: %empty
   88       | ID idlist1

   89 idlist1: %empty
   90        | ',' ID idlist1

   91 ifstmt: IF '(' expr ')' stmt ifstmt1

   92 ifstmt1: %empty
   93        | ELSE stmt

   94 whilestmt: WHILE '(' expr ')' stmt

   95 forstmt: FOR '(' elist ';' expr ';' elist ')' stmt

   96 returnstmt: RETURN ';'
   97           | RETURN expr ';'


Terminals, with rules where they appear

$end (0) 0
'%' (37) 22
'(' (40) 32 44 54 56 59 60 78 81 91 94 95
')' (41) 32 44 54 56 59 60 78 81 91 94 95
'*' (42) 20
'+' (43) 18
',' (44) 64 68 90
'-' (45) 19 33
'.' (46) 50 53
'/' (47) 21
':' (58) 70
';' (59) 5 10 11 16 95 96 97
'<' (60) 24
'=' (61) 40
'>' (62) 23
'[' (91) 51 53 65 66
']' (93) 51 53 65 66
'{' (123) 70 73 74
'}' (125) 70 73 74
error (256)
ID (258) 46 47 48 50 53 60 78 88 90
NUMBER (259) 82
STRING (260) 83
BREAK (261) 10
CONTINUE (262) 11
AND (263) 29
OR (264) 30
NOT (265) 34
GREATEREQUAL (266) 25
LESSEQUAL (267) 26
EQUAL (268) 27
NOTEQUAL (269) 28
PLUSPLUS (270) 35 36
MINUSMINUS (271) 37 38
LOCAL (272) 47
SCOPEOP (273) 48
DOUPLEDOT (274) 60
FUNCTION (275) 78 81
NIL (276) 84
TRUE (277) 85
FALSE (278) 86
IF (279) 91
ELSE (280) 93
WHILE (281) 94
FOR (282) 95
RETURN (283) 96 97
DOUBLEDOT (284)
UMINUS (285)


Nonterminals, with rules where they appear

$accept (49)
    on left: 0
program (50)
    on left: 1 2, on right: 0
stmt1 (51)
    on left: 3 4, on right: 1 3 73
stmt (52)
    on left: 5 6 7 8 9 10 11 14 15 16, on right: 3 4 91 93 94 95
$@1 (53)
    on left: 12, on right: 14
$@2 (54)
    on left: 13, on right: 14
expr (55)
    on left: 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31, on right:
    5 18 19 20 21 22 23 24 25 26 27 28 29 30 32 33 34 40 51 53 62 64
    70 91 94 95 97
term (56)
    on left: 32 33 34 35 36 37 38 39, on right: 31
assignexpr (57)
    on left: 40, on right: 17
primary (58)
    on left: 41 42 43 44 45, on right: 39
lvalue (59)
    on left: 46 47 48 49, on right: 35 36 37 38 40 41 50 51 55
member (60)
    on left: 50 51 53, on right: 49
$@3 (61)
    on left: 52, on right: 53
call (62)
    on left: 54 55 56, on right: 42 53 54
callsuffix (63)
    on left: 57 58, on right: 55
normcall (64)
    on left: 59, on right: 57
methodcall (65)
    on left: 60, on right: 58
elist (66)
    on left: 61 62, on right: 54 56 59 60 65 95
elist1 (67)
    on left: 63 64, on right: 62 64
objectdef (68)
    on left: 65 66, on right: 43
indexed (69)
    on left: 67, on right: 66
more (70)
    on left: 68 69, on right: 67 68
indexedelem (71)
    on left: 70, on right: 67 68
block (72)
    on left: 73 74, on right: 14 78 81
$@4 (73)
    on left: 71, on right: 73
$@5 (74)
    on left: 72, on right: 73
funcdef (75)
    on left: 78 81, on right: 15 44 56
$@6 (76)
    on left: 75, on right: 78
$@7 (77)
    on left: 76, on right: 78
$@8 (78)
    on left: 77, on right: 78
$@9 (79)
    on left: 79, on right: 81
$@10 (80)
    on left: 80, on right: 81
const (81)
    on left: 82 83 84 85 86, on right: 45
idlist (82)
    on left: 87 88, on right: 78 81
idlist1 (83)
    on left: 89 90, on right: 88 90
ifstmt (84)
    on left: 91, on right: 6
ifstmt1 (85)
    on left: 92 93, on right: 91
whilestmt (86)
    on left: 94, on right: 7
forstmt (87)
    on left: 95, on right: 8
returnstmt (88)
    on left: 96 97, on right: 9


State 0

    0 $accept: . program $end

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    CONTINUE    shift, and go to state 5
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    FUNCTION    shift, and go to state 11
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    IF          shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    RETURN      shift, and go to state 18
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21
    ';'         shift, and go to state 22

    '{'       reduce using rule 12 ($@1)
    $default  reduce using rule 2 (program)

    program     go to state 23
    stmt1       go to state 24
    stmt        go to state 25
    $@1         go to state 26
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    funcdef     go to state 35
    const       go to state 36
    ifstmt      go to state 37
    whilestmt   go to state 38
    forstmt     go to state 39
    returnstmt  go to state 40


State 1

   46 lvalue: ID .

    $default  reduce using rule 46 (lvalue)


State 2

   82 const: NUMBER .

    $default  reduce using rule 82 (const)


State 3

   83 const: STRING .

    $default  reduce using rule 83 (const)


State 4

   10 stmt: BREAK . ';'

    ';'  shift, and go to state 41


State 5

   11 stmt: CONTINUE . ';'

    ';'  shift, and go to state 42


State 6

   34 term: NOT . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    expr        go to state 43
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 36


State 7

   35 term: PLUSPLUS . lvalue

    ID       shift, and go to state 1
    LOCAL    shift, and go to state 9
    SCOPEOP  shift, and go to state 10
    '('      shift, and go to state 44

    lvalue  go to state 45
    member  go to state 32
    call    go to state 46


State 8

   37 term: MINUSMINUS . lvalue

    ID       shift, and go to state 1
    LOCAL    shift, and go to state 9
    SCOPEOP  shift, and go to state 10
    '('      shift, and go to state 44

    lvalue  go to state 47
    member  go to state 32
    call    go to state 46


State 9

   47 lvalue: LOCAL . ID

    ID  shift, and go to state 48


State 10

   48 lvalue: SCOPEOP . ID

    ID  shift, and go to state 49


State 11

   78 funcdef: FUNCTION . ID '(' $@6 idlist ')' $@7 block $@8
   81        | FUNCTION . '(' $@9 idlist ')' $@10 block

    ID   shift, and go to state 50
    '('  shift, and go to state 51


State 12

   84 const: NIL .

    $default  reduce using rule 84 (const)


State 13

   85 const: TRUE .

    $default  reduce using rule 85 (const)


State 14

   86 const: FALSE .

    $default  reduce using rule 86 (const)


State 15

   91 ifstmt: IF . '(' expr ')' stmt ifstmt1

    '('  shift, and go to state 52


State 16

   94 whilestmt: WHILE . '(' expr ')' stmt

    '('  shift, and go to state 53


State 17

   95 forstmt: FOR . '(' elist ';' expr ';' elist ')' stmt

    '('  shift, and go to state 54


State 18

   96 returnstmt: RETURN . ';'
   97           | RETURN . expr ';'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21
    ';'         shift, and go to state 55

    expr        go to state 56
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 36


State 19

   32 term: '(' . expr ')'
   44 primary: '(' . funcdef ')'
   56 call: '(' . funcdef ')' '(' elist ')'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    FUNCTION    shift, and go to state 11
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    expr        go to state 57
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    funcdef     go to state 58
    const       go to state 36


State 20

   65 objectdef: '[' . elist ']'
   66          | '[' . indexed ']'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21
    '{'         shift, and go to state 59

    $default  reduce using rule 61 (elist)

    expr         go to state 60
    term         go to state 28
    assignexpr   go to state 29
    primary      go to state 30
    lvalue       go to state 31
    member       go to state 32
    call         go to state 33
    elist        go to state 61
    objectdef    go to state 34
    indexed      go to state 62
    indexedelem  go to state 63
    const        go to state 36


State 21

   33 term: '-' . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    expr        go to state 64
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 36


State 22

   16 stmt: ';' .

    $default  reduce using rule 16 (stmt)


State 23

    0 $accept: program . $end

    $end  shift, and go to state 65


State 24

    1 program: stmt1 .
    3 stmt1: stmt1 . stmt

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    CONTINUE    shift, and go to state 5
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    FUNCTION    shift, and go to state 11
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    IF          shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    RETURN      shift, and go to state 18
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21
    ';'         shift, and go to state 22

    '{'       reduce using rule 12 ($@1)
    $default  reduce using rule 1 (program)

    stmt        go to state 66
    $@1         go to state 26
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    funcdef     go to state 35
    const       go to state 36
    ifstmt      go to state 37
    whilestmt   go to state 38
    forstmt     go to state 39
    returnstmt  go to state 40


State 25

    4 stmt1: stmt .

    $default  reduce using rule 4 (stmt1)


State 26

   14 stmt: $@1 . block $@2

    '{'  shift, and go to state 67

    block  go to state 68


State 27

    5 stmt: expr . ';'
   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr

    AND           shift, and go to state 69
    OR            shift, and go to state 70
    GREATEREQUAL  shift, and go to state 71
    LESSEQUAL     shift, and go to state 72
    EQUAL         shift, and go to state 73
    NOTEQUAL      shift, and go to state 74
    '*'           shift, and go to state 75
    '/'           shift, and go to state 76
    '%'           shift, and go to state 77
    '+'           shift, and go to state 78
    '-'           shift, and go to state 79
    '>'           shift, and go to state 80
    '<'           shift, and go to state 81
    ';'           shift, and go to state 82


State 28

   31 expr: term .

    $default  reduce using rule 31 (expr)


State 29

   17 expr: assignexpr .

    $default  reduce using rule 17 (expr)


State 30

   39 term: primary .

    $default  reduce using rule 39 (term)


State 31

   36 term: lvalue . PLUSPLUS
   38     | lvalue . MINUSMINUS
   40 assignexpr: lvalue . '=' expr
   41 primary: lvalue .
   50 member: lvalue . '.' ID
   51       | lvalue . '[' expr ']'
   55 call: lvalue . callsuffix

    PLUSPLUS    shift, and go to state 83
    MINUSMINUS  shift, and go to state 84
    DOUPLEDOT   shift, and go to state 85
    '('         shift, and go to state 86
    '['         shift, and go to state 87
    '.'         shift, and go to state 88
    '='         shift, and go to state 89

    $default  reduce using rule 41 (primary)

    callsuffix  go to state 90
    normcall    go to state 91
    methodcall  go to state 92


State 32

   49 lvalue: member .

    $default  reduce using rule 49 (lvalue)


State 33

   42 primary: call .
   53 member: call . '.' ID $@3 call '[' expr ']'
   54 call: call . '(' elist ')'

    '('  shift, and go to state 93
    '.'  shift, and go to state 94

    $default  reduce using rule 42 (primary)


State 34

   43 primary: objectdef .

    $default  reduce using rule 43 (primary)


State 35

   15 stmt: funcdef .

    $default  reduce using rule 15 (stmt)


State 36

   45 primary: const .

    $default  reduce using rule 45 (primary)


State 37

    6 stmt: ifstmt .

    $default  reduce using rule 6 (stmt)


State 38

    7 stmt: whilestmt .

    $default  reduce using rule 7 (stmt)


State 39

    8 stmt: forstmt .

    $default  reduce using rule 8 (stmt)


State 40

    9 stmt: returnstmt .

    $default  reduce using rule 9 (stmt)


State 41

   10 stmt: BREAK ';' .

    $default  reduce using rule 10 (stmt)


State 42

   11 stmt: CONTINUE ';' .

    $default  reduce using rule 11 (stmt)


State 43

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr
   34 term: NOT expr .

    AND           shift, and go to state 69
    OR            shift, and go to state 70
    GREATEREQUAL  shift, and go to state 71
    LESSEQUAL     shift, and go to state 72
    EQUAL         shift, and go to state 73
    NOTEQUAL      shift, and go to state 74
    '*'           shift, and go to state 75
    '/'           shift, and go to state 76
    '%'           shift, and go to state 77
    '+'           shift, and go to state 78
    '-'           shift, and go to state 79
    '>'           shift, and go to state 80
    '<'           shift, and go to state 81

    $default  reduce using rule 34 (term)


State 44

   56 call: '(' . funcdef ')' '(' elist ')'

    FUNCTION  shift, and go to state 11

    funcdef  go to state 95


State 45

   35 term: PLUSPLUS lvalue .
   50 member: lvalue . '.' ID
   51       | lvalue . '[' expr ']'
   55 call: lvalue . callsuffix

    DOUPLEDOT  shift, and go to state 85
    '('        shift, and go to state 86
    '['        shift, and go to state 87
    '.'        shift, and go to state 88

    $default  reduce using rule 35 (term)

    callsuffix  go to state 90
    normcall    go to state 91
    methodcall  go to state 92


State 46

   53 member: call . '.' ID $@3 call '[' expr ']'
   54 call: call . '(' elist ')'

    '('  shift, and go to state 93
    '.'  shift, and go to state 94


State 47

   37 term: MINUSMINUS lvalue .
   50 member: lvalue . '.' ID
   51       | lvalue . '[' expr ']'
   55 call: lvalue . callsuffix

    DOUPLEDOT  shift, and go to state 85
    '('        shift, and go to state 86
    '['        shift, and go to state 87
    '.'        shift, and go to state 88

    $default  reduce using rule 37 (term)

    callsuffix  go to state 90
    normcall    go to state 91
    methodcall  go to state 92


State 48

   47 lvalue: LOCAL ID .

    $default  reduce using rule 47 (lvalue)


State 49

   48 lvalue: SCOPEOP ID .

    $default  reduce using rule 48 (lvalue)


State 50

   78 funcdef: FUNCTION ID . '(' $@6 idlist ')' $@7 block $@8

    '('  shift, and go to state 96


State 51

   81 funcdef: FUNCTION '(' . $@9 idlist ')' $@10 block

    $default  reduce using rule 79 ($@9)

    $@9  go to state 97


State 52

   91 ifstmt: IF '(' . expr ')' stmt ifstmt1

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    expr        go to state 98
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 36


State 53

   94 whilestmt: WHILE '(' . expr ')' stmt

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    expr        go to state 99
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 36


State 54

   95 forstmt: FOR '(' . elist ';' expr ';' elist ')' stmt

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    $default  reduce using rule 61 (elist)

    expr        go to state 60
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 100
    objectdef   go to state 34
    const       go to state 36


State 55

   96 returnstmt: RETURN ';' .

    $default  reduce using rule 96 (returnstmt)


State 56

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr
   97 returnstmt: RETURN expr . ';'

    AND           shift, and go to state 69
    OR            shift, and go to state 70
    GREATEREQUAL  shift, and go to state 71
    LESSEQUAL     shift, and go to state 72
    EQUAL         shift, and go to state 73
    NOTEQUAL      shift, and go to state 74
    '*'           shift, and go to state 75
    '/'           shift, and go to state 76
    '%'           shift, and go to state 77
    '+'           shift, and go to state 78
    '-'           shift, and go to state 79
    '>'           shift, and go to state 80
    '<'           shift, and go to state 81
    ';'           shift, and go to state 101


State 57

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr
   32 term: '(' expr . ')'

    AND           shift, and go to state 69
    OR            shift, and go to state 70
    GREATEREQUAL  shift, and go to state 71
    LESSEQUAL     shift, and go to state 72
    EQUAL         shift, and go to state 73
    NOTEQUAL      shift, and go to state 74
    ')'           shift, and go to state 102
    '*'           shift, and go to state 75
    '/'           shift, and go to state 76
    '%'           shift, and go to state 77
    '+'           shift, and go to state 78
    '-'           shift, and go to state 79
    '>'           shift, and go to state 80
    '<'           shift, and go to state 81


State 58

   44 primary: '(' funcdef . ')'
   56 call: '(' funcdef . ')' '(' elist ')'

    ')'  shift, and go to state 103


State 59

   70 indexedelem: '{' . expr ':' expr '}'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    expr        go to state 104
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 36


State 60

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr
   62 elist: expr . elist1

    AND           shift, and go to state 69
    OR            shift, and go to state 70
    GREATEREQUAL  shift, and go to state 71
    LESSEQUAL     shift, and go to state 72
    EQUAL         shift, and go to state 73
    NOTEQUAL      shift, and go to state 74
    '*'           shift, and go to state 75
    '/'           shift, and go to state 76
    '%'           shift, and go to state 77
    '+'           shift, and go to state 78
    '-'           shift, and go to state 79
    '>'           shift, and go to state 80
    '<'           shift, and go to state 81
    ','           shift, and go to state 105

    $default  reduce using rule 63 (elist1)

    elist1  go to state 106


State 61

   65 objectdef: '[' elist . ']'

    ']'  shift, and go to state 107


State 62

   66 objectdef: '[' indexed . ']'

    ']'  shift, and go to state 108


State 63

   67 indexed: indexedelem . more

    ','  shift, and go to state 109

    $default  reduce using rule 69 (more)

    more  go to state 110


State 64

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr
   33 term: '-' expr .

    AND           shift, and go to state 69
    OR            shift, and go to state 70
    GREATEREQUAL  shift, and go to state 71
    LESSEQUAL     shift, and go to state 72
    EQUAL         shift, and go to state 73
    NOTEQUAL      shift, and go to state 74
    '*'           shift, and go to state 75
    '/'           shift, and go to state 76
    '%'           shift, and go to state 77
    '+'           shift, and go to state 78
    '-'           shift, and go to state 79
    '>'           shift, and go to state 80
    '<'           shift, and go to state 81

    $default  reduce using rule 33 (term)


State 65

    0 $accept: program $end .

    $default  accept


State 66

    3 stmt1: stmt1 stmt .

    $default  reduce using rule 3 (stmt1)


State 67

   73 block: '{' . $@4 stmt1 '}' $@5
   74      | '{' . '}'

    '}'  shift, and go to state 111

    $default  reduce using rule 71 ($@4)

    $@4  go to state 112


State 68

   14 stmt: $@1 block . $@2

    $default  reduce using rule 13 ($@2)

    $@2  go to state 113


State 69

   29 expr: expr AND . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    expr        go to state 114
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 36


State 70

   30 expr: expr OR . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    expr        go to state 115
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 36


State 71

   25 expr: expr GREATEREQUAL . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    expr        go to state 116
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 36


State 72

   26 expr: expr LESSEQUAL . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    expr        go to state 117
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 36


State 73

   27 expr: expr EQUAL . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    expr        go to state 118
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 36


State 74

   28 expr: expr NOTEQUAL . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    expr        go to state 119
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 36


State 75

   20 expr: expr '*' . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    expr        go to state 120
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 36


State 76

   21 expr: expr '/' . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    expr        go to state 121
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 36


State 77

   22 expr: expr '%' . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    expr        go to state 122
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 36


State 78

   18 expr: expr '+' . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    expr        go to state 123
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 36


State 79

   19 expr: expr '-' . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    expr        go to state 124
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 36


State 80

   23 expr: expr '>' . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    expr        go to state 125
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 36


State 81

   24 expr: expr '<' . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    expr        go to state 126
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 36


State 82

    5 stmt: expr ';' .

    $default  reduce using rule 5 (stmt)


State 83

   36 term: lvalue PLUSPLUS .

    $default  reduce using rule 36 (term)


State 84

   38 term: lvalue MINUSMINUS .

    $default  reduce using rule 38 (term)


State 85

   60 methodcall: DOUPLEDOT . ID '(' elist ')'

    ID  shift, and go to state 127


State 86

   59 normcall: '(' . elist ')'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    $default  reduce using rule 61 (elist)

    expr        go to state 60
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 128
    objectdef   go to state 34
    const       go to state 36


State 87

   51 member: lvalue '[' . expr ']'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    expr        go to state 129
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 36


State 88

   50 member: lvalue '.' . ID

    ID  shift, and go to state 130


State 89

   40 assignexpr: lvalue '=' . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    expr        go to state 131
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 36


State 90

   55 call: lvalue callsuffix .

    $default  reduce using rule 55 (call)


State 91

   57 callsuffix: normcall .

    $default  reduce using rule 57 (callsuffix)


State 92

   58 callsuffix: methodcall .

    $default  reduce using rule 58 (callsuffix)


State 93

   54 call: call '(' . elist ')'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    $default  reduce using rule 61 (elist)

    expr        go to state 60
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 132
    objectdef   go to state 34
    const       go to state 36


State 94

   53 member: call '.' . ID $@3 call '[' expr ']'

    ID  shift, and go to state 133


State 95

   56 call: '(' funcdef . ')' '(' elist ')'

    ')'  shift, and go to state 134


State 96

   78 funcdef: FUNCTION ID '(' . $@6 idlist ')' $@7 block $@8

    $default  reduce using rule 75 ($@6)

    $@6  go to state 135


State 97

   81 funcdef: FUNCTION '(' $@9 . idlist ')' $@10 block

    ID  shift, and go to state 136

    $default  reduce using rule 87 (idlist)

    idlist  go to state 137


State 98

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr
   91 ifstmt: IF '(' expr . ')' stmt ifstmt1

    AND           shift, and go to state 69
    OR            shift, and go to state 70
    GREATEREQUAL  shift, and go to state 71
    LESSEQUAL     shift, and go to state 72
    EQUAL         shift, and go to state 73
    NOTEQUAL      shift, and go to state 74
    ')'           shift, and go to state 138
    '*'           shift, and go to state 75
    '/'           shift, and go to state 76
    '%'           shift, and go to state 77
    '+'           shift, and go to state 78
    '-'           shift, and go to state 79
    '>'           shift, and go to state 80
    '<'           shift, and go to state 81


State 99

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr
   94 whilestmt: WHILE '(' expr . ')' stmt

    AND           shift, and go to state 69
    OR            shift, and go to state 70
    GREATEREQUAL  shift, and go to state 71
    LESSEQUAL     shift, and go to state 72
    EQUAL         shift, and go to state 73
    NOTEQUAL      shift, and go to state 74
    ')'           shift, and go to state 139
    '*'           shift, and go to state 75
    '/'           shift, and go to state 76
    '%'           shift, and go to state 77
    '+'           shift, and go to state 78
    '-'           shift, and go to state 79
    '>'           shift, and go to state 80
    '<'           shift, and go to state 81


State 100

   95 forstmt: FOR '(' elist . ';' expr ';' elist ')' stmt

    ';'  shift, and go to state 140


State 101

   97 returnstmt: RETURN expr ';' .

    $default  reduce using rule 97 (returnstmt)


State 102

   32 term: '(' expr ')' .

    $default  reduce using rule 32 (term)


State 103

   44 primary: '(' funcdef ')' .
   56 call: '(' funcdef ')' . '(' elist ')'

    '('  shift, and go to state 141

    $default  reduce using rule 44 (primary)


State 104

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr
   70 indexedelem: '{' expr . ':' expr '}'

    AND           shift, and go to state 69
    OR            shift, and go to state 70
    GREATEREQUAL  shift, and go to state 71
    LESSEQUAL     shift, and go to state 72
    EQUAL         shift, and go to state 73
    NOTEQUAL      shift, and go to state 74
    '*'           shift, and go to state 75
    '/'           shift, and go to state 76
    '%'           shift, and go to state 77
    '+'           shift, and go to state 78
    '-'           shift, and go to state 79
    '>'           shift, and go to state 80
    '<'           shift, and go to state 81
    ':'           shift, and go to state 142


State 105

   64 elist1: ',' . expr elist1

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    expr        go to state 143
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 36


State 106

   62 elist: expr elist1 .

    $default  reduce using rule 62 (elist)


State 107

   65 objectdef: '[' elist ']' .

    $default  reduce using rule 65 (objectdef)


State 108

   66 objectdef: '[' indexed ']' .

    $default  reduce using rule 66 (objectdef)


State 109

   68 more: ',' . indexedelem more

    '{'  shift, and go to state 59

    indexedelem  go to state 144


State 110

   67 indexed: indexedelem more .

    $default  reduce using rule 67 (indexed)


State 111

   74 block: '{' '}' .

    $default  reduce using rule 74 (block)


State 112

   73 block: '{' $@4 . stmt1 '}' $@5

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    CONTINUE    shift, and go to state 5
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    FUNCTION    shift, and go to state 11
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    IF          shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    RETURN      shift, and go to state 18
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21
    ';'         shift, and go to state 22

    $default  reduce using rule 12 ($@1)

    stmt1       go to state 145
    stmt        go to state 25
    $@1         go to state 26
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    funcdef     go to state 35
    const       go to state 36
    ifstmt      go to state 37
    whilestmt   go to state 38
    forstmt     go to state 39
    returnstmt  go to state 40


State 113

   14 stmt: $@1 block $@2 .

    $default  reduce using rule 14 (stmt)


State 114

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   29     | expr . AND expr
   29     | expr AND expr .
   30     | expr . OR expr

    OR  shift, and go to state 70

    $default  reduce using rule 29 (expr)


State 115

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr
   30     | expr OR expr .

    $default  reduce using rule 30 (expr)


State 116

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   25     | expr GREATEREQUAL expr .
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr

    AND       shift, and go to state 69
    OR        shift, and go to state 70
    EQUAL     shift, and go to state 73
    NOTEQUAL  shift, and go to state 74

    GREATEREQUAL  error (nonassociative)
    LESSEQUAL     error (nonassociative)
    '>'           error (nonassociative)
    '<'           error (nonassociative)

    $default  reduce using rule 25 (expr)


State 117

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   26     | expr LESSEQUAL expr .
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr

    AND       shift, and go to state 69
    OR        shift, and go to state 70
    EQUAL     shift, and go to state 73
    NOTEQUAL  shift, and go to state 74

    GREATEREQUAL  error (nonassociative)
    LESSEQUAL     error (nonassociative)
    '>'           error (nonassociative)
    '<'           error (nonassociative)

    $default  reduce using rule 26 (expr)


State 118

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   27     | expr EQUAL expr .
   28     | expr . NOTEQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr

    AND  shift, and go to state 69
    OR   shift, and go to state 70

    EQUAL     error (nonassociative)
    NOTEQUAL  error (nonassociative)

    $default  reduce using rule 27 (expr)


State 119

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   28     | expr NOTEQUAL expr .
   29     | expr . AND expr
   30     | expr . OR expr

    AND  shift, and go to state 69
    OR   shift, and go to state 70

    EQUAL     error (nonassociative)
    NOTEQUAL  error (nonassociative)

    $default  reduce using rule 28 (expr)


State 120

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   20     | expr '*' expr .
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr

    AND           shift, and go to state 69
    OR            shift, and go to state 70
    GREATEREQUAL  shift, and go to state 71
    LESSEQUAL     shift, and go to state 72
    EQUAL         shift, and go to state 73
    NOTEQUAL      shift, and go to state 74
    '+'           shift, and go to state 78
    '-'           shift, and go to state 79
    '>'           shift, and go to state 80
    '<'           shift, and go to state 81

    $default  reduce using rule 20 (expr)


State 121

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   21     | expr '/' expr .
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr

    AND           shift, and go to state 69
    OR            shift, and go to state 70
    GREATEREQUAL  shift, and go to state 71
    LESSEQUAL     shift, and go to state 72
    EQUAL         shift, and go to state 73
    NOTEQUAL      shift, and go to state 74
    '+'           shift, and go to state 78
    '-'           shift, and go to state 79
    '>'           shift, and go to state 80
    '<'           shift, and go to state 81

    $default  reduce using rule 21 (expr)


State 122

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   22     | expr '%' expr .
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr

    AND           shift, and go to state 69
    OR            shift, and go to state 70
    GREATEREQUAL  shift, and go to state 71
    LESSEQUAL     shift, and go to state 72
    EQUAL         shift, and go to state 73
    NOTEQUAL      shift, and go to state 74
    '+'           shift, and go to state 78
    '-'           shift, and go to state 79
    '>'           shift, and go to state 80
    '<'           shift, and go to state 81

    $default  reduce using rule 22 (expr)


State 123

   18 expr: expr . '+' expr
   18     | expr '+' expr .
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr

    AND           shift, and go to state 69
    OR            shift, and go to state 70
    GREATEREQUAL  shift, and go to state 71
    LESSEQUAL     shift, and go to state 72
    EQUAL         shift, and go to state 73
    NOTEQUAL      shift, and go to state 74
    '>'           shift, and go to state 80
    '<'           shift, and go to state 81

    $default  reduce using rule 18 (expr)


State 124

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   19     | expr '-' expr .
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr

    AND           shift, and go to state 69
    OR            shift, and go to state 70
    GREATEREQUAL  shift, and go to state 71
    LESSEQUAL     shift, and go to state 72
    EQUAL         shift, and go to state 73
    NOTEQUAL      shift, and go to state 74
    '>'           shift, and go to state 80
    '<'           shift, and go to state 81

    $default  reduce using rule 19 (expr)


State 125

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   23     | expr '>' expr .
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr

    AND       shift, and go to state 69
    OR        shift, and go to state 70
    EQUAL     shift, and go to state 73
    NOTEQUAL  shift, and go to state 74

    GREATEREQUAL  error (nonassociative)
    LESSEQUAL     error (nonassociative)
    '>'           error (nonassociative)
    '<'           error (nonassociative)

    $default  reduce using rule 23 (expr)


State 126

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   24     | expr '<' expr .
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr

    AND       shift, and go to state 69
    OR        shift, and go to state 70
    EQUAL     shift, and go to state 73
    NOTEQUAL  shift, and go to state 74

    GREATEREQUAL  error (nonassociative)
    LESSEQUAL     error (nonassociative)
    '>'           error (nonassociative)
    '<'           error (nonassociative)

    $default  reduce using rule 24 (expr)


State 127

   60 methodcall: DOUPLEDOT ID . '(' elist ')'

    '('  shift, and go to state 146


State 128

   59 normcall: '(' elist . ')'

    ')'  shift, and go to state 147


State 129

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr
   51 member: lvalue '[' expr . ']'

    AND           shift, and go to state 69
    OR            shift, and go to state 70
    GREATEREQUAL  shift, and go to state 71
    LESSEQUAL     shift, and go to state 72
    EQUAL         shift, and go to state 73
    NOTEQUAL      shift, and go to state 74
    ']'           shift, and go to state 148
    '*'           shift, and go to state 75
    '/'           shift, and go to state 76
    '%'           shift, and go to state 77
    '+'           shift, and go to state 78
    '-'           shift, and go to state 79
    '>'           shift, and go to state 80
    '<'           shift, and go to state 81


State 130

   50 member: lvalue '.' ID .

    $default  reduce using rule 50 (member)


State 131

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr
   40 assignexpr: lvalue '=' expr .

    $default  reduce using rule 40 (assignexpr)


State 132

   54 call: call '(' elist . ')'

    ')'  shift, and go to state 149


State 133

   53 member: call '.' ID . $@3 call '[' expr ']'

    $default  reduce using rule 52 ($@3)

    $@3  go to state 150


State 134

   56 call: '(' funcdef ')' . '(' elist ')'

    '('  shift, and go to state 141


State 135

   78 funcdef: FUNCTION ID '(' $@6 . idlist ')' $@7 block $@8

    ID  shift, and go to state 136

    $default  reduce using rule 87 (idlist)

    idlist  go to state 151


State 136

   88 idlist: ID . idlist1

    ','  shift, and go to state 152

    $default  reduce using rule 89 (idlist1)

    idlist1  go to state 153


State 137

   81 funcdef: FUNCTION '(' $@9 idlist . ')' $@10 block

    ')'  shift, and go to state 154


State 138

   91 ifstmt: IF '(' expr ')' . stmt ifstmt1

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    CONTINUE    shift, and go to state 5
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    FUNCTION    shift, and go to state 11
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    IF          shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    RETURN      shift, and go to state 18
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21
    ';'         shift, and go to state 22

    $default  reduce using rule 12 ($@1)

    stmt        go to state 155
    $@1         go to state 26
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    funcdef     go to state 35
    const       go to state 36
    ifstmt      go to state 37
    whilestmt   go to state 38
    forstmt     go to state 39
    returnstmt  go to state 40


State 139

   94 whilestmt: WHILE '(' expr ')' . stmt

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    CONTINUE    shift, and go to state 5
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    FUNCTION    shift, and go to state 11
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    IF          shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    RETURN      shift, and go to state 18
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21
    ';'         shift, and go to state 22

    $default  reduce using rule 12 ($@1)

    stmt        go to state 156
    $@1         go to state 26
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    funcdef     go to state 35
    const       go to state 36
    ifstmt      go to state 37
    whilestmt   go to state 38
    forstmt     go to state 39
    returnstmt  go to state 40


State 140

   95 forstmt: FOR '(' elist ';' . expr ';' elist ')' stmt

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    expr        go to state 157
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 36


State 141

   56 call: '(' funcdef ')' '(' . elist ')'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    $default  reduce using rule 61 (elist)

    expr        go to state 60
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 158
    objectdef   go to state 34
    const       go to state 36


State 142

   70 indexedelem: '{' expr ':' . expr '}'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    expr        go to state 159
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 36


State 143

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr
   64 elist1: ',' expr . elist1

    AND           shift, and go to state 69
    OR            shift, and go to state 70
    GREATEREQUAL  shift, and go to state 71
    LESSEQUAL     shift, and go to state 72
    EQUAL         shift, and go to state 73
    NOTEQUAL      shift, and go to state 74
    '*'           shift, and go to state 75
    '/'           shift, and go to state 76
    '%'           shift, and go to state 77
    '+'           shift, and go to state 78
    '-'           shift, and go to state 79
    '>'           shift, and go to state 80
    '<'           shift, and go to state 81
    ','           shift, and go to state 105

    $default  reduce using rule 63 (elist1)

    elist1  go to state 160


State 144

   68 more: ',' indexedelem . more

    ','  shift, and go to state 109

    $default  reduce using rule 69 (more)

    more  go to state 161


State 145

    3 stmt1: stmt1 . stmt
   73 block: '{' $@4 stmt1 . '}' $@5

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    CONTINUE    shift, and go to state 5
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    FUNCTION    shift, and go to state 11
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    IF          shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    RETURN      shift, and go to state 18
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21
    ';'         shift, and go to state 22
    '}'         shift, and go to state 162

    $default  reduce using rule 12 ($@1)

    stmt        go to state 66
    $@1         go to state 26
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    funcdef     go to state 35
    const       go to state 36
    ifstmt      go to state 37
    whilestmt   go to state 38
    forstmt     go to state 39
    returnstmt  go to state 40


State 146

   60 methodcall: DOUPLEDOT ID '(' . elist ')'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    $default  reduce using rule 61 (elist)

    expr        go to state 60
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 163
    objectdef   go to state 34
    const       go to state 36


State 147

   59 normcall: '(' elist ')' .

    $default  reduce using rule 59 (normcall)


State 148

   51 member: lvalue '[' expr ']' .

    $default  reduce using rule 51 (member)


State 149

   54 call: call '(' elist ')' .

    $default  reduce using rule 54 (call)


State 150

   53 member: call '.' ID $@3 . call '[' expr ']'

    ID       shift, and go to state 1
    LOCAL    shift, and go to state 9
    SCOPEOP  shift, and go to state 10
    '('      shift, and go to state 44

    lvalue  go to state 164
    member  go to state 32
    call    go to state 165


State 151

   78 funcdef: FUNCTION ID '(' $@6 idlist . ')' $@7 block $@8

    ')'  shift, and go to state 166


State 152

   90 idlist1: ',' . ID idlist1

    ID  shift, and go to state 167


State 153

   88 idlist: ID idlist1 .

    $default  reduce using rule 88 (idlist)


State 154

   81 funcdef: FUNCTION '(' $@9 idlist ')' . $@10 block

    $default  reduce using rule 80 ($@10)

    $@10  go to state 168


State 155

   91 ifstmt: IF '(' expr ')' stmt . ifstmt1

    ELSE  shift, and go to state 169

    ELSE      [reduce using rule 92 (ifstmt1)]
    $default  reduce using rule 92 (ifstmt1)

    ifstmt1  go to state 170


State 156

   94 whilestmt: WHILE '(' expr ')' stmt .

    $default  reduce using rule 94 (whilestmt)


State 157

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr
   95 forstmt: FOR '(' elist ';' expr . ';' elist ')' stmt

    AND           shift, and go to state 69
    OR            shift, and go to state 70
    GREATEREQUAL  shift, and go to state 71
    LESSEQUAL     shift, and go to state 72
    EQUAL         shift, and go to state 73
    NOTEQUAL      shift, and go to state 74
    '*'           shift, and go to state 75
    '/'           shift, and go to state 76
    '%'           shift, and go to state 77
    '+'           shift, and go to state 78
    '-'           shift, and go to state 79
    '>'           shift, and go to state 80
    '<'           shift, and go to state 81
    ';'           shift, and go to state 171


State 158

   56 call: '(' funcdef ')' '(' elist . ')'

    ')'  shift, and go to state 172


State 159

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr
   70 indexedelem: '{' expr ':' expr . '}'

    AND           shift, and go to state 69
    OR            shift, and go to state 70
    GREATEREQUAL  shift, and go to state 71
    LESSEQUAL     shift, and go to state 72
    EQUAL         shift, and go to state 73
    NOTEQUAL      shift, and go to state 74
    '*'           shift, and go to state 75
    '/'           shift, and go to state 76
    '%'           shift, and go to state 77
    '+'           shift, and go to state 78
    '-'           shift, and go to state 79
    '>'           shift, and go to state 80
    '<'           shift, and go to state 81
    '}'           shift, and go to state 173


State 160

   64 elist1: ',' expr elist1 .

    $default  reduce using rule 64 (elist1)


State 161

   68 more: ',' indexedelem more .

    $default  reduce using rule 68 (more)


State 162

   73 block: '{' $@4 stmt1 '}' . $@5

    $default  reduce using rule 72 ($@5)

    $@5  go to state 174


State 163

   60 methodcall: DOUPLEDOT ID '(' elist . ')'

    ')'  shift, and go to state 175


State 164

   50 member: lvalue . '.' ID
   51       | lvalue . '[' expr ']'
   55 call: lvalue . callsuffix

    DOUPLEDOT  shift, and go to state 85
    '('        shift, and go to state 86
    '['        shift, and go to state 87
    '.'        shift, and go to state 88

    callsuffix  go to state 90
    normcall    go to state 91
    methodcall  go to state 92


State 165

   53 member: call . '.' ID $@3 call '[' expr ']'
   53       | call '.' ID $@3 call . '[' expr ']'
   54 call: call . '(' elist ')'

    '('  shift, and go to state 93
    '['  shift, and go to state 176
    '.'  shift, and go to state 94


State 166

   78 funcdef: FUNCTION ID '(' $@6 idlist ')' . $@7 block $@8

    $default  reduce using rule 76 ($@7)

    $@7  go to state 177


State 167

   90 idlist1: ',' ID . idlist1

    ','  shift, and go to state 152

    $default  reduce using rule 89 (idlist1)

    idlist1  go to state 178


State 168

   81 funcdef: FUNCTION '(' $@9 idlist ')' $@10 . block

    '{'  shift, and go to state 67

    block  go to state 179


State 169

   93 ifstmt1: ELSE . stmt

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    CONTINUE    shift, and go to state 5
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    FUNCTION    shift, and go to state 11
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    IF          shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    RETURN      shift, and go to state 18
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21
    ';'         shift, and go to state 22

    $default  reduce using rule 12 ($@1)

    stmt        go to state 180
    $@1         go to state 26
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    funcdef     go to state 35
    const       go to state 36
    ifstmt      go to state 37
    whilestmt   go to state 38
    forstmt     go to state 39
    returnstmt  go to state 40


State 170

   91 ifstmt: IF '(' expr ')' stmt ifstmt1 .

    $default  reduce using rule 91 (ifstmt)


State 171

   95 forstmt: FOR '(' elist ';' expr ';' . elist ')' stmt

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    $default  reduce using rule 61 (elist)

    expr        go to state 60
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 181
    objectdef   go to state 34
    const       go to state 36


State 172

   56 call: '(' funcdef ')' '(' elist ')' .

    $default  reduce using rule 56 (call)


State 173

   70 indexedelem: '{' expr ':' expr '}' .

    $default  reduce using rule 70 (indexedelem)


State 174

   73 block: '{' $@4 stmt1 '}' $@5 .

    $default  reduce using rule 73 (block)


State 175

   60 methodcall: DOUPLEDOT ID '(' elist ')' .

    $default  reduce using rule 60 (methodcall)


State 176

   53 member: call '.' ID $@3 call '[' . expr ']'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    expr        go to state 182
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 36


State 177

   78 funcdef: FUNCTION ID '(' $@6 idlist ')' $@7 . block $@8

    '{'  shift, and go to state 67

    block  go to state 183


State 178

   90 idlist1: ',' ID idlist1 .

    $default  reduce using rule 90 (idlist1)


State 179

   81 funcdef: FUNCTION '(' $@9 idlist ')' $@10 block .

    $default  reduce using rule 81 (funcdef)


State 180

   93 ifstmt1: ELSE stmt .

    $default  reduce using rule 93 (ifstmt1)


State 181

   95 forstmt: FOR '(' elist ';' expr ';' elist . ')' stmt

    ')'  shift, and go to state 184


State 182

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr
   53 member: call '.' ID $@3 call '[' expr . ']'

    AND           shift, and go to state 69
    OR            shift, and go to state 70
    GREATEREQUAL  shift, and go to state 71
    LESSEQUAL     shift, and go to state 72
    EQUAL         shift, and go to state 73
    NOTEQUAL      shift, and go to state 74
    ']'           shift, and go to state 185
    '*'           shift, and go to state 75
    '/'           shift, and go to state 76
    '%'           shift, and go to state 77
    '+'           shift, and go to state 78
    '-'           shift, and go to state 79
    '>'           shift, and go to state 80
    '<'           shift, and go to state 81


State 183

   78 funcdef: FUNCTION ID '(' $@6 idlist ')' $@7 block . $@8

    $default  reduce using rule 77 ($@8)

    $@8  go to state 186


State 184

   95 forstmt: FOR '(' elist ';' expr ';' elist ')' . stmt

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    CONTINUE    shift, and go to state 5
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    FUNCTION    shift, and go to state 11
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    IF          shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    RETURN      shift, and go to state 18
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21
    ';'         shift, and go to state 22

    $default  reduce using rule 12 ($@1)

    stmt        go to state 187
    $@1         go to state 26
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    funcdef     go to state 35
    const       go to state 36
    ifstmt      go to state 37
    whilestmt   go to state 38
    forstmt     go to state 39
    returnstmt  go to state 40


State 185

   53 member: call '.' ID $@3 call '[' expr ']' .

    $default  reduce using rule 53 (member)


State 186

   78 funcdef: FUNCTION ID '(' $@6 idlist ')' $@7 block $@8 .

    $default  reduce using rule 78 (funcdef)


State 187

   95 forstmt: FOR '(' elist ';' expr ';' elist ')' stmt .

    $default  reduce using rule 95 (forstmt)
