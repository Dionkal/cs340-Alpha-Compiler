Terminals unused in grammar

   DOUBLEDOT


State 102 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: stmt1
    2        | %empty

    3 stmt1: stmt1 stmt
    4      | stmt

    5 stmt: expr ';'
    6     | ifstmt
    7     | whilestmt
    8     | forstmt
    9     | returnstmt
   10     | BREAK ';'
   11     | CONTINUE ';'

   12 $@1: %empty

   13 $@2: %empty

   14 stmt: $@1 block $@2
   15     | funcdef
   16     | ';'

   17 expr: assignexpr
   18     | expr '+' expr
   19     | expr '-' expr
   20     | expr '*' expr
   21     | expr '/' expr
   22     | expr '%' expr
   23     | expr '>' expr
   24     | expr '<' expr
   25     | expr GREATEREQUAL expr
   26     | expr LESSEQUAL expr
   27     | expr EQUAL expr
   28     | expr NOTEQUAL expr
   29     | expr AND expr
   30     | expr OR expr
   31     | term

   32 term: '(' expr ')'
   33     | '-' expr
   34     | NOT expr
   35     | PLUSPLUS lvalue
   36     | lvalue PLUSPLUS
   37     | MINUSMINUS lvalue
   38     | lvalue MINUSMINUS
   39     | primary

   40 assignexpr: lvalue '=' expr

   41 primary: lvalue
   42        | call
   43        | objectdef
   44        | '(' funcdef ')'
   45        | const

   46 lvalue: ID
   47       | LOCAL ID
   48       | SCOPEOP ID
   49       | member

   50 member: lvalue '.' ID
   51       | lvalue '[' expr ']'
   52       | call '.' ID
   53       | call '[' expr ']'

   54 call: call '(' elist ')'
   55     | lvalue callsuffix
   56     | '(' funcdef ')' '(' elist ')'

   57 callsuffix: normcall
   58           | methodcall

   59 normcall: '(' elist ')'

   60 methodcall: DOUPLEDOT ID '(' elist ')'

   61 elist: %empty
   62      | expr elist1

   63 elist1: %empty
   64       | ',' expr elist1
   65       | error expr elist1

   66 objectdef: '[' elist ']'
   67          | '[' indexed ']'

   68 indexed: indexedelem more

   69 more: ',' indexedelem more
   70     | %empty

   71 indexedelem: '{' expr ':' expr '}'

   72 $@3: %empty

   73 $@4: %empty

   74 block: '{' $@3 stmt1 '}' $@4

   75 $@5: %empty

   76 $@6: %empty

   77 block: '{' $@5 '}' $@6
   78      | error stmt1 '}'
   79      | error '}'

   80 funcdef: funcprefix funcargs funcblockstart funcbody funcblockend

   81 funcname: ID
   82         | %empty

   83 funcprefix: FUNCTION funcname

   84 funcargs: '(' idlist ')'

   85 funcblockstart: %empty

   86 funcbody: block

   87 funcblockend: %empty

   88 const: NUMBER
   89      | STRING
   90      | NIL
   91      | TRUE
   92      | FALSE

   93 idlist: %empty
   94       | ID idlist1

   95 idlist1: %empty
   96        | ',' ID idlist1

   97 ifstmt: ifprefix stmt elseprefix stmt
   98       | ifprefix stmt

   99 ifprefix: IF '(' expr ')'

  100 elseprefix: ELSE

  101 whilestmt: whilestart whilesecond loopstmt

  102 whilestart: WHILE

  103 whilesecond: '(' expr ')'

  104 forstmt: forprefix N1 elist ')' N2 loopstmt N3

  105 forprefix: FOR '(' elist ';' M expr ';'

  106 N1: %empty

  107 N2: %empty

  108 N3: %empty

  109 M: %empty

  110 loopstmt: loopstart stmt loopend

  111 loopstart: %empty

  112 loopend: %empty

  113 returnstmt: RETURN ';'
  114           | RETURN expr ';'


Terminals, with rules where they appear

$end (0) 0
'%' (37) 22
'(' (40) 32 44 54 56 59 60 84 99 103 105
')' (41) 32 44 54 56 59 60 84 99 103 104
'*' (42) 20
'+' (43) 18
',' (44) 64 69 96
'-' (45) 19 33
'.' (46) 50 52
'/' (47) 21
':' (58) 71
';' (59) 5 10 11 16 105 113 114
'<' (60) 24
'=' (61) 40
'>' (62) 23
'[' (91) 51 53 66 67
']' (93) 51 53 66 67
'{' (123) 71 74 77
'}' (125) 71 74 77 78 79
error (256) 65 78 79
ID (258) 46 47 48 50 52 60 81 94 96
NUMBER (259) 88
STRING (260) 89
BREAK (261) 10
CONTINUE (262) 11
AND (263) 29
OR (264) 30
NOT (265) 34
GREATEREQUAL (266) 25
LESSEQUAL (267) 26
EQUAL (268) 27
NOTEQUAL (269) 28
PLUSPLUS (270) 35 36
MINUSMINUS (271) 37 38
LOCAL (272) 47
SCOPEOP (273) 48
DOUPLEDOT (274) 60
FUNCTION (275) 83
NIL (276) 90
TRUE (277) 91
FALSE (278) 92
IF (279) 99
ELSE (280) 100
WHILE (281) 102
FOR (282) 105
RETURN (283) 113 114
UMINUS (284)
DOUBLEDOT (285)


Nonterminals, with rules where they appear

$accept (49)
    on left: 0
program (50)
    on left: 1 2, on right: 0
stmt1 (51)
    on left: 3 4, on right: 1 3 74 78
stmt (52)
    on left: 5 6 7 8 9 10 11 14 15 16, on right: 3 4 97 98 110
$@1 (53)
    on left: 12, on right: 14
$@2 (54)
    on left: 13, on right: 14
expr (55)
    on left: 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31, on right:
    5 18 19 20 21 22 23 24 25 26 27 28 29 30 32 33 34 40 51 53 62 64
    65 71 99 103 105 114
term (56)
    on left: 32 33 34 35 36 37 38 39, on right: 31
assignexpr (57)
    on left: 40, on right: 17
primary (58)
    on left: 41 42 43 44 45, on right: 39
lvalue (59)
    on left: 46 47 48 49, on right: 35 36 37 38 40 41 50 51 55
member (60)
    on left: 50 51 52 53, on right: 49
call (61)
    on left: 54 55 56, on right: 42 52 53 54
callsuffix (62)
    on left: 57 58, on right: 55
normcall (63)
    on left: 59, on right: 57
methodcall (64)
    on left: 60, on right: 58
elist (65)
    on left: 61 62, on right: 54 56 59 60 66 104 105
elist1 (66)
    on left: 63 64 65, on right: 62 64 65
objectdef (67)
    on left: 66 67, on right: 43
indexed (68)
    on left: 68, on right: 67
more (69)
    on left: 69 70, on right: 68 69
indexedelem (70)
    on left: 71, on right: 68 69
block (71)
    on left: 74 77 78 79, on right: 14 86
$@3 (72)
    on left: 72, on right: 74
$@4 (73)
    on left: 73, on right: 74
$@5 (74)
    on left: 75, on right: 77
$@6 (75)
    on left: 76, on right: 77
funcdef (76)
    on left: 80, on right: 15 44 56
funcname (77)
    on left: 81 82, on right: 83
funcprefix (78)
    on left: 83, on right: 80
funcargs (79)
    on left: 84, on right: 80
funcblockstart (80)
    on left: 85, on right: 80
funcbody (81)
    on left: 86, on right: 80
funcblockend (82)
    on left: 87, on right: 80
const (83)
    on left: 88 89 90 91 92, on right: 45
idlist (84)
    on left: 93 94, on right: 84
idlist1 (85)
    on left: 95 96, on right: 94 96
ifstmt (86)
    on left: 97 98, on right: 6
ifprefix (87)
    on left: 99, on right: 97 98
elseprefix (88)
    on left: 100, on right: 97
whilestmt (89)
    on left: 101, on right: 7
whilestart (90)
    on left: 102, on right: 101
whilesecond (91)
    on left: 103, on right: 101
forstmt (92)
    on left: 104, on right: 8
forprefix (93)
    on left: 105, on right: 104
N1 (94)
    on left: 106, on right: 104
N2 (95)
    on left: 107, on right: 104
N3 (96)
    on left: 108, on right: 104
M (97)
    on left: 109, on right: 105
loopstmt (98)
    on left: 110, on right: 101 104
loopstart (99)
    on left: 111, on right: 110
loopend (100)
    on left: 112, on right: 110
returnstmt (101)
    on left: 113 114, on right: 9


State 0

    0 $accept: . program $end

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    CONTINUE    shift, and go to state 5
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    FUNCTION    shift, and go to state 11
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    IF          shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    RETURN      shift, and go to state 18
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21
    ';'         shift, and go to state 22

    $end      reduce using rule 2 (program)
    $default  reduce using rule 12 ($@1)

    program     go to state 23
    stmt1       go to state 24
    stmt        go to state 25
    $@1         go to state 26
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    funcdef     go to state 35
    funcprefix  go to state 36
    const       go to state 37
    ifstmt      go to state 38
    ifprefix    go to state 39
    whilestmt   go to state 40
    whilestart  go to state 41
    forstmt     go to state 42
    forprefix   go to state 43
    returnstmt  go to state 44


State 1

   46 lvalue: ID .

    $default  reduce using rule 46 (lvalue)


State 2

   88 const: NUMBER .

    $default  reduce using rule 88 (const)


State 3

   89 const: STRING .

    $default  reduce using rule 89 (const)


State 4

   10 stmt: BREAK . ';'

    ';'  shift, and go to state 45


State 5

   11 stmt: CONTINUE . ';'

    ';'  shift, and go to state 46


State 6

   34 term: NOT . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    expr        go to state 47
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 7

   35 term: PLUSPLUS . lvalue

    ID       shift, and go to state 1
    LOCAL    shift, and go to state 9
    SCOPEOP  shift, and go to state 10
    '('      shift, and go to state 48

    lvalue  go to state 49
    member  go to state 32
    call    go to state 50


State 8

   37 term: MINUSMINUS . lvalue

    ID       shift, and go to state 1
    LOCAL    shift, and go to state 9
    SCOPEOP  shift, and go to state 10
    '('      shift, and go to state 48

    lvalue  go to state 51
    member  go to state 32
    call    go to state 50


State 9

   47 lvalue: LOCAL . ID

    ID  shift, and go to state 52


State 10

   48 lvalue: SCOPEOP . ID

    ID  shift, and go to state 53


State 11

   83 funcprefix: FUNCTION . funcname

    ID  shift, and go to state 54

    $default  reduce using rule 82 (funcname)

    funcname  go to state 55


State 12

   90 const: NIL .

    $default  reduce using rule 90 (const)


State 13

   91 const: TRUE .

    $default  reduce using rule 91 (const)


State 14

   92 const: FALSE .

    $default  reduce using rule 92 (const)


State 15

   99 ifprefix: IF . '(' expr ')'

    '('  shift, and go to state 56


State 16

  102 whilestart: WHILE .

    $default  reduce using rule 102 (whilestart)


State 17

  105 forprefix: FOR . '(' elist ';' M expr ';'

    '('  shift, and go to state 57


State 18

  113 returnstmt: RETURN . ';'
  114           | RETURN . expr ';'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21
    ';'         shift, and go to state 58

    expr        go to state 59
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 19

   33 term: '-' . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    expr        go to state 60
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 20

   66 objectdef: '[' . elist ']'
   67          | '[' . indexed ']'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21
    '{'         shift, and go to state 61

    $default  reduce using rule 61 (elist)

    expr         go to state 62
    term         go to state 28
    assignexpr   go to state 29
    primary      go to state 30
    lvalue       go to state 31
    member       go to state 32
    call         go to state 33
    elist        go to state 63
    objectdef    go to state 34
    indexed      go to state 64
    indexedelem  go to state 65
    const        go to state 37


State 21

   32 term: '(' . expr ')'
   44 primary: '(' . funcdef ')'
   56 call: '(' . funcdef ')' '(' elist ')'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    FUNCTION    shift, and go to state 11
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    expr        go to state 66
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    funcdef     go to state 67
    funcprefix  go to state 36
    const       go to state 37


State 22

   16 stmt: ';' .

    $default  reduce using rule 16 (stmt)


State 23

    0 $accept: program . $end

    $end  shift, and go to state 68


State 24

    1 program: stmt1 .
    3 stmt1: stmt1 . stmt

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    CONTINUE    shift, and go to state 5
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    FUNCTION    shift, and go to state 11
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    IF          shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    RETURN      shift, and go to state 18
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21
    ';'         shift, and go to state 22

    $end      reduce using rule 1 (program)
    $default  reduce using rule 12 ($@1)

    stmt        go to state 69
    $@1         go to state 26
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    funcdef     go to state 35
    funcprefix  go to state 36
    const       go to state 37
    ifstmt      go to state 38
    ifprefix    go to state 39
    whilestmt   go to state 40
    whilestart  go to state 41
    forstmt     go to state 42
    forprefix   go to state 43
    returnstmt  go to state 44


State 25

    4 stmt1: stmt .

    $default  reduce using rule 4 (stmt1)


State 26

   14 stmt: $@1 . block $@2

    error  shift, and go to state 70
    '{'    shift, and go to state 71

    block  go to state 72


State 27

    5 stmt: expr . ';'
   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr

    AND           shift, and go to state 73
    OR            shift, and go to state 74
    GREATEREQUAL  shift, and go to state 75
    LESSEQUAL     shift, and go to state 76
    EQUAL         shift, and go to state 77
    NOTEQUAL      shift, and go to state 78
    '>'           shift, and go to state 79
    '<'           shift, and go to state 80
    '+'           shift, and go to state 81
    '-'           shift, and go to state 82
    '*'           shift, and go to state 83
    '/'           shift, and go to state 84
    '%'           shift, and go to state 85
    ';'           shift, and go to state 86


State 28

   31 expr: term .

    $default  reduce using rule 31 (expr)


State 29

   17 expr: assignexpr .

    $default  reduce using rule 17 (expr)


State 30

   39 term: primary .

    $default  reduce using rule 39 (term)


State 31

   36 term: lvalue . PLUSPLUS
   38     | lvalue . MINUSMINUS
   40 assignexpr: lvalue . '=' expr
   41 primary: lvalue .
   50 member: lvalue . '.' ID
   51       | lvalue . '[' expr ']'
   55 call: lvalue . callsuffix

    PLUSPLUS    shift, and go to state 87
    MINUSMINUS  shift, and go to state 88
    DOUPLEDOT   shift, and go to state 89
    '='         shift, and go to state 90
    '.'         shift, and go to state 91
    '['         shift, and go to state 92
    '('         shift, and go to state 93

    $default  reduce using rule 41 (primary)

    callsuffix  go to state 94
    normcall    go to state 95
    methodcall  go to state 96


State 32

   49 lvalue: member .

    $default  reduce using rule 49 (lvalue)


State 33

   42 primary: call .
   52 member: call . '.' ID
   53       | call . '[' expr ']'
   54 call: call . '(' elist ')'

    '.'  shift, and go to state 97
    '['  shift, and go to state 98
    '('  shift, and go to state 99

    $default  reduce using rule 42 (primary)


State 34

   43 primary: objectdef .

    $default  reduce using rule 43 (primary)


State 35

   15 stmt: funcdef .

    $default  reduce using rule 15 (stmt)


State 36

   80 funcdef: funcprefix . funcargs funcblockstart funcbody funcblockend

    '('  shift, and go to state 100

    funcargs  go to state 101


State 37

   45 primary: const .

    $default  reduce using rule 45 (primary)


State 38

    6 stmt: ifstmt .

    $default  reduce using rule 6 (stmt)


State 39

   97 ifstmt: ifprefix . stmt elseprefix stmt
   98       | ifprefix . stmt

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    CONTINUE    shift, and go to state 5
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    FUNCTION    shift, and go to state 11
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    IF          shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    RETURN      shift, and go to state 18
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21
    ';'         shift, and go to state 22

    $default  reduce using rule 12 ($@1)

    stmt        go to state 102
    $@1         go to state 26
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    funcdef     go to state 35
    funcprefix  go to state 36
    const       go to state 37
    ifstmt      go to state 38
    ifprefix    go to state 39
    whilestmt   go to state 40
    whilestart  go to state 41
    forstmt     go to state 42
    forprefix   go to state 43
    returnstmt  go to state 44


State 40

    7 stmt: whilestmt .

    $default  reduce using rule 7 (stmt)


State 41

  101 whilestmt: whilestart . whilesecond loopstmt

    '('  shift, and go to state 103

    whilesecond  go to state 104


State 42

    8 stmt: forstmt .

    $default  reduce using rule 8 (stmt)


State 43

  104 forstmt: forprefix . N1 elist ')' N2 loopstmt N3

    $default  reduce using rule 106 (N1)

    N1  go to state 105


State 44

    9 stmt: returnstmt .

    $default  reduce using rule 9 (stmt)


State 45

   10 stmt: BREAK ';' .

    $default  reduce using rule 10 (stmt)


State 46

   11 stmt: CONTINUE ';' .

    $default  reduce using rule 11 (stmt)


State 47

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr
   34 term: NOT expr .

    $default  reduce using rule 34 (term)


State 48

   56 call: '(' . funcdef ')' '(' elist ')'

    FUNCTION  shift, and go to state 11

    funcdef     go to state 106
    funcprefix  go to state 36


State 49

   35 term: PLUSPLUS lvalue .
   50 member: lvalue . '.' ID
   51       | lvalue . '[' expr ']'
   55 call: lvalue . callsuffix

    DOUPLEDOT  shift, and go to state 89
    '.'        shift, and go to state 91
    '['        shift, and go to state 92
    '('        shift, and go to state 93

    $default  reduce using rule 35 (term)

    callsuffix  go to state 94
    normcall    go to state 95
    methodcall  go to state 96


State 50

   52 member: call . '.' ID
   53       | call . '[' expr ']'
   54 call: call . '(' elist ')'

    '.'  shift, and go to state 97
    '['  shift, and go to state 98
    '('  shift, and go to state 99


State 51

   37 term: MINUSMINUS lvalue .
   50 member: lvalue . '.' ID
   51       | lvalue . '[' expr ']'
   55 call: lvalue . callsuffix

    DOUPLEDOT  shift, and go to state 89
    '.'        shift, and go to state 91
    '['        shift, and go to state 92
    '('        shift, and go to state 93

    $default  reduce using rule 37 (term)

    callsuffix  go to state 94
    normcall    go to state 95
    methodcall  go to state 96


State 52

   47 lvalue: LOCAL ID .

    $default  reduce using rule 47 (lvalue)


State 53

   48 lvalue: SCOPEOP ID .

    $default  reduce using rule 48 (lvalue)


State 54

   81 funcname: ID .

    $default  reduce using rule 81 (funcname)


State 55

   83 funcprefix: FUNCTION funcname .

    $default  reduce using rule 83 (funcprefix)


State 56

   99 ifprefix: IF '(' . expr ')'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    expr        go to state 107
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 57

  105 forprefix: FOR '(' . elist ';' M expr ';'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    $default  reduce using rule 61 (elist)

    expr        go to state 62
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 108
    objectdef   go to state 34
    const       go to state 37


State 58

  113 returnstmt: RETURN ';' .

    $default  reduce using rule 113 (returnstmt)


State 59

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr
  114 returnstmt: RETURN expr . ';'

    AND           shift, and go to state 73
    OR            shift, and go to state 74
    GREATEREQUAL  shift, and go to state 75
    LESSEQUAL     shift, and go to state 76
    EQUAL         shift, and go to state 77
    NOTEQUAL      shift, and go to state 78
    '>'           shift, and go to state 79
    '<'           shift, and go to state 80
    '+'           shift, and go to state 81
    '-'           shift, and go to state 82
    '*'           shift, and go to state 83
    '/'           shift, and go to state 84
    '%'           shift, and go to state 85
    ';'           shift, and go to state 109


State 60

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr
   33 term: '-' expr .

    $default  reduce using rule 33 (term)


State 61

   71 indexedelem: '{' . expr ':' expr '}'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    expr        go to state 110
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 62

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr
   62 elist: expr . elist1

    error         shift, and go to state 111
    AND           shift, and go to state 73
    OR            shift, and go to state 74
    GREATEREQUAL  shift, and go to state 75
    LESSEQUAL     shift, and go to state 76
    EQUAL         shift, and go to state 77
    NOTEQUAL      shift, and go to state 78
    '>'           shift, and go to state 79
    '<'           shift, and go to state 80
    '+'           shift, and go to state 81
    '-'           shift, and go to state 82
    '*'           shift, and go to state 83
    '/'           shift, and go to state 84
    '%'           shift, and go to state 85
    ','           shift, and go to state 112

    ']'  reduce using rule 63 (elist1)
    ')'  reduce using rule 63 (elist1)
    ';'  reduce using rule 63 (elist1)

    elist1  go to state 113


State 63

   66 objectdef: '[' elist . ']'

    ']'  shift, and go to state 114


State 64

   67 objectdef: '[' indexed . ']'

    ']'  shift, and go to state 115


State 65

   68 indexed: indexedelem . more

    ','  shift, and go to state 116

    $default  reduce using rule 70 (more)

    more  go to state 117


State 66

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr
   32 term: '(' expr . ')'

    AND           shift, and go to state 73
    OR            shift, and go to state 74
    GREATEREQUAL  shift, and go to state 75
    LESSEQUAL     shift, and go to state 76
    EQUAL         shift, and go to state 77
    NOTEQUAL      shift, and go to state 78
    '>'           shift, and go to state 79
    '<'           shift, and go to state 80
    '+'           shift, and go to state 81
    '-'           shift, and go to state 82
    '*'           shift, and go to state 83
    '/'           shift, and go to state 84
    '%'           shift, and go to state 85
    ')'           shift, and go to state 118


State 67

   44 primary: '(' funcdef . ')'
   56 call: '(' funcdef . ')' '(' elist ')'

    ')'  shift, and go to state 119


State 68

    0 $accept: program $end .

    $default  accept


State 69

    3 stmt1: stmt1 stmt .

    $default  reduce using rule 3 (stmt1)


State 70

   78 block: error . stmt1 '}'
   79      | error . '}'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    CONTINUE    shift, and go to state 5
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    FUNCTION    shift, and go to state 11
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    IF          shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    RETURN      shift, and go to state 18
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21
    ';'         shift, and go to state 22
    '}'         shift, and go to state 120

    $default  reduce using rule 12 ($@1)

    stmt1       go to state 121
    stmt        go to state 25
    $@1         go to state 26
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    funcdef     go to state 35
    funcprefix  go to state 36
    const       go to state 37
    ifstmt      go to state 38
    ifprefix    go to state 39
    whilestmt   go to state 40
    whilestart  go to state 41
    forstmt     go to state 42
    forprefix   go to state 43
    returnstmt  go to state 44


State 71

   74 block: '{' . $@3 stmt1 '}' $@4
   77      | '{' . $@5 '}' $@6

    '}'       reduce using rule 75 ($@5)
    $default  reduce using rule 72 ($@3)

    $@3  go to state 122
    $@5  go to state 123


State 72

   14 stmt: $@1 block . $@2

    $default  reduce using rule 13 ($@2)

    $@2  go to state 124


State 73

   29 expr: expr AND . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    expr        go to state 125
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 74

   30 expr: expr OR . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    expr        go to state 126
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 75

   25 expr: expr GREATEREQUAL . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    expr        go to state 127
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 76

   26 expr: expr LESSEQUAL . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    expr        go to state 128
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 77

   27 expr: expr EQUAL . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    expr        go to state 129
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 78

   28 expr: expr NOTEQUAL . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    expr        go to state 130
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 79

   23 expr: expr '>' . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    expr        go to state 131
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 80

   24 expr: expr '<' . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    expr        go to state 132
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 81

   18 expr: expr '+' . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    expr        go to state 133
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 82

   19 expr: expr '-' . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    expr        go to state 134
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 83

   20 expr: expr '*' . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    expr        go to state 135
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 84

   21 expr: expr '/' . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    expr        go to state 136
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 85

   22 expr: expr '%' . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    expr        go to state 137
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 86

    5 stmt: expr ';' .

    $default  reduce using rule 5 (stmt)


State 87

   36 term: lvalue PLUSPLUS .

    $default  reduce using rule 36 (term)


State 88

   38 term: lvalue MINUSMINUS .

    $default  reduce using rule 38 (term)


State 89

   60 methodcall: DOUPLEDOT . ID '(' elist ')'

    ID  shift, and go to state 138


State 90

   40 assignexpr: lvalue '=' . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    expr        go to state 139
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 91

   50 member: lvalue '.' . ID

    ID  shift, and go to state 140


State 92

   51 member: lvalue '[' . expr ']'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    expr        go to state 141
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 93

   59 normcall: '(' . elist ')'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    $default  reduce using rule 61 (elist)

    expr        go to state 62
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 142
    objectdef   go to state 34
    const       go to state 37


State 94

   55 call: lvalue callsuffix .

    $default  reduce using rule 55 (call)


State 95

   57 callsuffix: normcall .

    $default  reduce using rule 57 (callsuffix)


State 96

   58 callsuffix: methodcall .

    $default  reduce using rule 58 (callsuffix)


State 97

   52 member: call '.' . ID

    ID  shift, and go to state 143


State 98

   53 member: call '[' . expr ']'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    expr        go to state 144
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 99

   54 call: call '(' . elist ')'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    $default  reduce using rule 61 (elist)

    expr        go to state 62
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 145
    objectdef   go to state 34
    const       go to state 37


State 100

   84 funcargs: '(' . idlist ')'

    ID  shift, and go to state 146

    $default  reduce using rule 93 (idlist)

    idlist  go to state 147


State 101

   80 funcdef: funcprefix funcargs . funcblockstart funcbody funcblockend

    $default  reduce using rule 85 (funcblockstart)

    funcblockstart  go to state 148


State 102

   97 ifstmt: ifprefix stmt . elseprefix stmt
   98       | ifprefix stmt .

    ELSE  shift, and go to state 149

    ELSE      [reduce using rule 98 (ifstmt)]
    $default  reduce using rule 98 (ifstmt)

    elseprefix  go to state 150


State 103

  103 whilesecond: '(' . expr ')'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    expr        go to state 151
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 104

  101 whilestmt: whilestart whilesecond . loopstmt

    $default  reduce using rule 111 (loopstart)

    loopstmt   go to state 152
    loopstart  go to state 153


State 105

  104 forstmt: forprefix N1 . elist ')' N2 loopstmt N3

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    $default  reduce using rule 61 (elist)

    expr        go to state 62
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 154
    objectdef   go to state 34
    const       go to state 37


State 106

   56 call: '(' funcdef . ')' '(' elist ')'

    ')'  shift, and go to state 155


State 107

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr
   99 ifprefix: IF '(' expr . ')'

    AND           shift, and go to state 73
    OR            shift, and go to state 74
    GREATEREQUAL  shift, and go to state 75
    LESSEQUAL     shift, and go to state 76
    EQUAL         shift, and go to state 77
    NOTEQUAL      shift, and go to state 78
    '>'           shift, and go to state 79
    '<'           shift, and go to state 80
    '+'           shift, and go to state 81
    '-'           shift, and go to state 82
    '*'           shift, and go to state 83
    '/'           shift, and go to state 84
    '%'           shift, and go to state 85
    ')'           shift, and go to state 156


State 108

  105 forprefix: FOR '(' elist . ';' M expr ';'

    ';'  shift, and go to state 157


State 109

  114 returnstmt: RETURN expr ';' .

    $default  reduce using rule 114 (returnstmt)


State 110

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr
   71 indexedelem: '{' expr . ':' expr '}'

    AND           shift, and go to state 73
    OR            shift, and go to state 74
    GREATEREQUAL  shift, and go to state 75
    LESSEQUAL     shift, and go to state 76
    EQUAL         shift, and go to state 77
    NOTEQUAL      shift, and go to state 78
    '>'           shift, and go to state 79
    '<'           shift, and go to state 80
    '+'           shift, and go to state 81
    '-'           shift, and go to state 82
    '*'           shift, and go to state 83
    '/'           shift, and go to state 84
    '%'           shift, and go to state 85
    ':'           shift, and go to state 158


State 111

   65 elist1: error . expr elist1

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    expr        go to state 159
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 112

   64 elist1: ',' . expr elist1

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    expr        go to state 160
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 113

   62 elist: expr elist1 .

    $default  reduce using rule 62 (elist)


State 114

   66 objectdef: '[' elist ']' .

    $default  reduce using rule 66 (objectdef)


State 115

   67 objectdef: '[' indexed ']' .

    $default  reduce using rule 67 (objectdef)


State 116

   69 more: ',' . indexedelem more

    '{'  shift, and go to state 61

    indexedelem  go to state 161


State 117

   68 indexed: indexedelem more .

    $default  reduce using rule 68 (indexed)


State 118

   32 term: '(' expr ')' .

    $default  reduce using rule 32 (term)


State 119

   44 primary: '(' funcdef ')' .
   56 call: '(' funcdef ')' . '(' elist ')'

    '('  shift, and go to state 162

    $default  reduce using rule 44 (primary)


State 120

   79 block: error '}' .

    $default  reduce using rule 79 (block)


State 121

    3 stmt1: stmt1 . stmt
   78 block: error stmt1 . '}'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    CONTINUE    shift, and go to state 5
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    FUNCTION    shift, and go to state 11
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    IF          shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    RETURN      shift, and go to state 18
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21
    ';'         shift, and go to state 22
    '}'         shift, and go to state 163

    $default  reduce using rule 12 ($@1)

    stmt        go to state 69
    $@1         go to state 26
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    funcdef     go to state 35
    funcprefix  go to state 36
    const       go to state 37
    ifstmt      go to state 38
    ifprefix    go to state 39
    whilestmt   go to state 40
    whilestart  go to state 41
    forstmt     go to state 42
    forprefix   go to state 43
    returnstmt  go to state 44


State 122

   74 block: '{' $@3 . stmt1 '}' $@4

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    CONTINUE    shift, and go to state 5
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    FUNCTION    shift, and go to state 11
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    IF          shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    RETURN      shift, and go to state 18
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21
    ';'         shift, and go to state 22

    $default  reduce using rule 12 ($@1)

    stmt1       go to state 164
    stmt        go to state 25
    $@1         go to state 26
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    funcdef     go to state 35
    funcprefix  go to state 36
    const       go to state 37
    ifstmt      go to state 38
    ifprefix    go to state 39
    whilestmt   go to state 40
    whilestart  go to state 41
    forstmt     go to state 42
    forprefix   go to state 43
    returnstmt  go to state 44


State 123

   77 block: '{' $@5 . '}' $@6

    '}'  shift, and go to state 165


State 124

   14 stmt: $@1 block $@2 .

    $default  reduce using rule 14 (stmt)


State 125

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   29     | expr . AND expr
   29     | expr AND expr .
   30     | expr . OR expr

    GREATEREQUAL  shift, and go to state 75
    LESSEQUAL     shift, and go to state 76
    EQUAL         shift, and go to state 77
    NOTEQUAL      shift, and go to state 78
    '>'           shift, and go to state 79
    '<'           shift, and go to state 80
    '+'           shift, and go to state 81
    '-'           shift, and go to state 82
    '*'           shift, and go to state 83
    '/'           shift, and go to state 84
    '%'           shift, and go to state 85

    $default  reduce using rule 29 (expr)


State 126

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr
   30     | expr OR expr .

    AND           shift, and go to state 73
    GREATEREQUAL  shift, and go to state 75
    LESSEQUAL     shift, and go to state 76
    EQUAL         shift, and go to state 77
    NOTEQUAL      shift, and go to state 78
    '>'           shift, and go to state 79
    '<'           shift, and go to state 80
    '+'           shift, and go to state 81
    '-'           shift, and go to state 82
    '*'           shift, and go to state 83
    '/'           shift, and go to state 84
    '%'           shift, and go to state 85

    $default  reduce using rule 30 (expr)


State 127

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   25     | expr GREATEREQUAL expr .
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr

    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85

    GREATEREQUAL  error (nonassociative)
    LESSEQUAL     error (nonassociative)
    '>'           error (nonassociative)
    '<'           error (nonassociative)

    $default  reduce using rule 25 (expr)


State 128

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   26     | expr LESSEQUAL expr .
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr

    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85

    GREATEREQUAL  error (nonassociative)
    LESSEQUAL     error (nonassociative)
    '>'           error (nonassociative)
    '<'           error (nonassociative)

    $default  reduce using rule 26 (expr)


State 129

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   27     | expr EQUAL expr .
   28     | expr . NOTEQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr

    GREATEREQUAL  shift, and go to state 75
    LESSEQUAL     shift, and go to state 76
    '>'           shift, and go to state 79
    '<'           shift, and go to state 80
    '+'           shift, and go to state 81
    '-'           shift, and go to state 82
    '*'           shift, and go to state 83
    '/'           shift, and go to state 84
    '%'           shift, and go to state 85

    EQUAL     error (nonassociative)
    NOTEQUAL  error (nonassociative)

    $default  reduce using rule 27 (expr)


State 130

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   28     | expr NOTEQUAL expr .
   29     | expr . AND expr
   30     | expr . OR expr

    GREATEREQUAL  shift, and go to state 75
    LESSEQUAL     shift, and go to state 76
    '>'           shift, and go to state 79
    '<'           shift, and go to state 80
    '+'           shift, and go to state 81
    '-'           shift, and go to state 82
    '*'           shift, and go to state 83
    '/'           shift, and go to state 84
    '%'           shift, and go to state 85

    EQUAL     error (nonassociative)
    NOTEQUAL  error (nonassociative)

    $default  reduce using rule 28 (expr)


State 131

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   23     | expr '>' expr .
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr

    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85

    GREATEREQUAL  error (nonassociative)
    LESSEQUAL     error (nonassociative)
    '>'           error (nonassociative)
    '<'           error (nonassociative)

    $default  reduce using rule 23 (expr)


State 132

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   24     | expr '<' expr .
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr

    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85

    GREATEREQUAL  error (nonassociative)
    LESSEQUAL     error (nonassociative)
    '>'           error (nonassociative)
    '<'           error (nonassociative)

    $default  reduce using rule 24 (expr)


State 133

   18 expr: expr . '+' expr
   18     | expr '+' expr .
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr

    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85

    $default  reduce using rule 18 (expr)


State 134

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   19     | expr '-' expr .
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr

    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85

    $default  reduce using rule 19 (expr)


State 135

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   20     | expr '*' expr .
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr

    $default  reduce using rule 20 (expr)


State 136

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   21     | expr '/' expr .
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr

    $default  reduce using rule 21 (expr)


State 137

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   22     | expr '%' expr .
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr

    $default  reduce using rule 22 (expr)


State 138

   60 methodcall: DOUPLEDOT ID . '(' elist ')'

    '('  shift, and go to state 166


State 139

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr
   40 assignexpr: lvalue '=' expr .

    AND           shift, and go to state 73
    OR            shift, and go to state 74
    GREATEREQUAL  shift, and go to state 75
    LESSEQUAL     shift, and go to state 76
    EQUAL         shift, and go to state 77
    NOTEQUAL      shift, and go to state 78
    '>'           shift, and go to state 79
    '<'           shift, and go to state 80
    '+'           shift, and go to state 81
    '-'           shift, and go to state 82
    '*'           shift, and go to state 83
    '/'           shift, and go to state 84
    '%'           shift, and go to state 85

    $default  reduce using rule 40 (assignexpr)


State 140

   50 member: lvalue '.' ID .

    $default  reduce using rule 50 (member)


State 141

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr
   51 member: lvalue '[' expr . ']'

    AND           shift, and go to state 73
    OR            shift, and go to state 74
    GREATEREQUAL  shift, and go to state 75
    LESSEQUAL     shift, and go to state 76
    EQUAL         shift, and go to state 77
    NOTEQUAL      shift, and go to state 78
    '>'           shift, and go to state 79
    '<'           shift, and go to state 80
    '+'           shift, and go to state 81
    '-'           shift, and go to state 82
    '*'           shift, and go to state 83
    '/'           shift, and go to state 84
    '%'           shift, and go to state 85
    ']'           shift, and go to state 167


State 142

   59 normcall: '(' elist . ')'

    ')'  shift, and go to state 168


State 143

   52 member: call '.' ID .

    $default  reduce using rule 52 (member)


State 144

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr
   53 member: call '[' expr . ']'

    AND           shift, and go to state 73
    OR            shift, and go to state 74
    GREATEREQUAL  shift, and go to state 75
    LESSEQUAL     shift, and go to state 76
    EQUAL         shift, and go to state 77
    NOTEQUAL      shift, and go to state 78
    '>'           shift, and go to state 79
    '<'           shift, and go to state 80
    '+'           shift, and go to state 81
    '-'           shift, and go to state 82
    '*'           shift, and go to state 83
    '/'           shift, and go to state 84
    '%'           shift, and go to state 85
    ']'           shift, and go to state 169


State 145

   54 call: call '(' elist . ')'

    ')'  shift, and go to state 170


State 146

   94 idlist: ID . idlist1

    ','  shift, and go to state 171

    $default  reduce using rule 95 (idlist1)

    idlist1  go to state 172


State 147

   84 funcargs: '(' idlist . ')'

    ')'  shift, and go to state 173


State 148

   80 funcdef: funcprefix funcargs funcblockstart . funcbody funcblockend

    error  shift, and go to state 70
    '{'    shift, and go to state 71

    block     go to state 174
    funcbody  go to state 175


State 149

  100 elseprefix: ELSE .

    $default  reduce using rule 100 (elseprefix)


State 150

   97 ifstmt: ifprefix stmt elseprefix . stmt

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    CONTINUE    shift, and go to state 5
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    FUNCTION    shift, and go to state 11
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    IF          shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    RETURN      shift, and go to state 18
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21
    ';'         shift, and go to state 22

    $default  reduce using rule 12 ($@1)

    stmt        go to state 176
    $@1         go to state 26
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    funcdef     go to state 35
    funcprefix  go to state 36
    const       go to state 37
    ifstmt      go to state 38
    ifprefix    go to state 39
    whilestmt   go to state 40
    whilestart  go to state 41
    forstmt     go to state 42
    forprefix   go to state 43
    returnstmt  go to state 44


State 151

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr
  103 whilesecond: '(' expr . ')'

    AND           shift, and go to state 73
    OR            shift, and go to state 74
    GREATEREQUAL  shift, and go to state 75
    LESSEQUAL     shift, and go to state 76
    EQUAL         shift, and go to state 77
    NOTEQUAL      shift, and go to state 78
    '>'           shift, and go to state 79
    '<'           shift, and go to state 80
    '+'           shift, and go to state 81
    '-'           shift, and go to state 82
    '*'           shift, and go to state 83
    '/'           shift, and go to state 84
    '%'           shift, and go to state 85
    ')'           shift, and go to state 177


State 152

  101 whilestmt: whilestart whilesecond loopstmt .

    $default  reduce using rule 101 (whilestmt)


State 153

  110 loopstmt: loopstart . stmt loopend

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    CONTINUE    shift, and go to state 5
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    FUNCTION    shift, and go to state 11
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    IF          shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    RETURN      shift, and go to state 18
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21
    ';'         shift, and go to state 22

    $default  reduce using rule 12 ($@1)

    stmt        go to state 178
    $@1         go to state 26
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    funcdef     go to state 35
    funcprefix  go to state 36
    const       go to state 37
    ifstmt      go to state 38
    ifprefix    go to state 39
    whilestmt   go to state 40
    whilestart  go to state 41
    forstmt     go to state 42
    forprefix   go to state 43
    returnstmt  go to state 44


State 154

  104 forstmt: forprefix N1 elist . ')' N2 loopstmt N3

    ')'  shift, and go to state 179


State 155

   56 call: '(' funcdef ')' . '(' elist ')'

    '('  shift, and go to state 162


State 156

   99 ifprefix: IF '(' expr ')' .

    $default  reduce using rule 99 (ifprefix)


State 157

  105 forprefix: FOR '(' elist ';' . M expr ';'

    $default  reduce using rule 109 (M)

    M  go to state 180


State 158

   71 indexedelem: '{' expr ':' . expr '}'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    expr        go to state 181
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 159

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr
   65 elist1: error expr . elist1

    error         shift, and go to state 111
    AND           shift, and go to state 73
    OR            shift, and go to state 74
    GREATEREQUAL  shift, and go to state 75
    LESSEQUAL     shift, and go to state 76
    EQUAL         shift, and go to state 77
    NOTEQUAL      shift, and go to state 78
    '>'           shift, and go to state 79
    '<'           shift, and go to state 80
    '+'           shift, and go to state 81
    '-'           shift, and go to state 82
    '*'           shift, and go to state 83
    '/'           shift, and go to state 84
    '%'           shift, and go to state 85
    ','           shift, and go to state 112

    ']'  reduce using rule 63 (elist1)
    ')'  reduce using rule 63 (elist1)
    ';'  reduce using rule 63 (elist1)

    elist1  go to state 182


State 160

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr
   64 elist1: ',' expr . elist1

    error         shift, and go to state 111
    AND           shift, and go to state 73
    OR            shift, and go to state 74
    GREATEREQUAL  shift, and go to state 75
    LESSEQUAL     shift, and go to state 76
    EQUAL         shift, and go to state 77
    NOTEQUAL      shift, and go to state 78
    '>'           shift, and go to state 79
    '<'           shift, and go to state 80
    '+'           shift, and go to state 81
    '-'           shift, and go to state 82
    '*'           shift, and go to state 83
    '/'           shift, and go to state 84
    '%'           shift, and go to state 85
    ','           shift, and go to state 112

    ']'  reduce using rule 63 (elist1)
    ')'  reduce using rule 63 (elist1)
    ';'  reduce using rule 63 (elist1)

    elist1  go to state 183


State 161

   69 more: ',' indexedelem . more

    ','  shift, and go to state 116

    $default  reduce using rule 70 (more)

    more  go to state 184


State 162

   56 call: '(' funcdef ')' '(' . elist ')'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    $default  reduce using rule 61 (elist)

    expr        go to state 62
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 185
    objectdef   go to state 34
    const       go to state 37


State 163

   78 block: error stmt1 '}' .

    $default  reduce using rule 78 (block)


State 164

    3 stmt1: stmt1 . stmt
   74 block: '{' $@3 stmt1 . '}' $@4

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    CONTINUE    shift, and go to state 5
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    FUNCTION    shift, and go to state 11
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    IF          shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    RETURN      shift, and go to state 18
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21
    ';'         shift, and go to state 22
    '}'         shift, and go to state 186

    $default  reduce using rule 12 ($@1)

    stmt        go to state 69
    $@1         go to state 26
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    funcdef     go to state 35
    funcprefix  go to state 36
    const       go to state 37
    ifstmt      go to state 38
    ifprefix    go to state 39
    whilestmt   go to state 40
    whilestart  go to state 41
    forstmt     go to state 42
    forprefix   go to state 43
    returnstmt  go to state 44


State 165

   77 block: '{' $@5 '}' . $@6

    $default  reduce using rule 76 ($@6)

    $@6  go to state 187


State 166

   60 methodcall: DOUPLEDOT ID '(' . elist ')'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    $default  reduce using rule 61 (elist)

    expr        go to state 62
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 188
    objectdef   go to state 34
    const       go to state 37


State 167

   51 member: lvalue '[' expr ']' .

    $default  reduce using rule 51 (member)


State 168

   59 normcall: '(' elist ')' .

    $default  reduce using rule 59 (normcall)


State 169

   53 member: call '[' expr ']' .

    $default  reduce using rule 53 (member)


State 170

   54 call: call '(' elist ')' .

    $default  reduce using rule 54 (call)


State 171

   96 idlist1: ',' . ID idlist1

    ID  shift, and go to state 189


State 172

   94 idlist: ID idlist1 .

    $default  reduce using rule 94 (idlist)


State 173

   84 funcargs: '(' idlist ')' .

    $default  reduce using rule 84 (funcargs)


State 174

   86 funcbody: block .

    $default  reduce using rule 86 (funcbody)


State 175

   80 funcdef: funcprefix funcargs funcblockstart funcbody . funcblockend

    $default  reduce using rule 87 (funcblockend)

    funcblockend  go to state 190


State 176

   97 ifstmt: ifprefix stmt elseprefix stmt .

    $default  reduce using rule 97 (ifstmt)


State 177

  103 whilesecond: '(' expr ')' .

    $default  reduce using rule 103 (whilesecond)


State 178

  110 loopstmt: loopstart stmt . loopend

    $default  reduce using rule 112 (loopend)

    loopend  go to state 191


State 179

  104 forstmt: forprefix N1 elist ')' . N2 loopstmt N3

    $default  reduce using rule 107 (N2)

    N2  go to state 192


State 180

  105 forprefix: FOR '(' elist ';' M . expr ';'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    expr        go to state 193
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 181

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr
   71 indexedelem: '{' expr ':' expr . '}'

    AND           shift, and go to state 73
    OR            shift, and go to state 74
    GREATEREQUAL  shift, and go to state 75
    LESSEQUAL     shift, and go to state 76
    EQUAL         shift, and go to state 77
    NOTEQUAL      shift, and go to state 78
    '>'           shift, and go to state 79
    '<'           shift, and go to state 80
    '+'           shift, and go to state 81
    '-'           shift, and go to state 82
    '*'           shift, and go to state 83
    '/'           shift, and go to state 84
    '%'           shift, and go to state 85
    '}'           shift, and go to state 194


State 182

   65 elist1: error expr elist1 .

    $default  reduce using rule 65 (elist1)


State 183

   64 elist1: ',' expr elist1 .

    $default  reduce using rule 64 (elist1)


State 184

   69 more: ',' indexedelem more .

    $default  reduce using rule 69 (more)


State 185

   56 call: '(' funcdef ')' '(' elist . ')'

    ')'  shift, and go to state 195


State 186

   74 block: '{' $@3 stmt1 '}' . $@4

    $default  reduce using rule 73 ($@4)

    $@4  go to state 196


State 187

   77 block: '{' $@5 '}' $@6 .

    $default  reduce using rule 77 (block)


State 188

   60 methodcall: DOUPLEDOT ID '(' elist . ')'

    ')'  shift, and go to state 197


State 189

   96 idlist1: ',' ID . idlist1

    ','  shift, and go to state 171

    $default  reduce using rule 95 (idlist1)

    idlist1  go to state 198


State 190

   80 funcdef: funcprefix funcargs funcblockstart funcbody funcblockend .

    $default  reduce using rule 80 (funcdef)


State 191

  110 loopstmt: loopstart stmt loopend .

    $default  reduce using rule 110 (loopstmt)


State 192

  104 forstmt: forprefix N1 elist ')' N2 . loopstmt N3

    $default  reduce using rule 111 (loopstart)

    loopstmt   go to state 199
    loopstart  go to state 153


State 193

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr
  105 forprefix: FOR '(' elist ';' M expr . ';'

    AND           shift, and go to state 73
    OR            shift, and go to state 74
    GREATEREQUAL  shift, and go to state 75
    LESSEQUAL     shift, and go to state 76
    EQUAL         shift, and go to state 77
    NOTEQUAL      shift, and go to state 78
    '>'           shift, and go to state 79
    '<'           shift, and go to state 80
    '+'           shift, and go to state 81
    '-'           shift, and go to state 82
    '*'           shift, and go to state 83
    '/'           shift, and go to state 84
    '%'           shift, and go to state 85
    ';'           shift, and go to state 200


State 194

   71 indexedelem: '{' expr ':' expr '}' .

    $default  reduce using rule 71 (indexedelem)


State 195

   56 call: '(' funcdef ')' '(' elist ')' .

    $default  reduce using rule 56 (call)


State 196

   74 block: '{' $@3 stmt1 '}' $@4 .

    $default  reduce using rule 74 (block)


State 197

   60 methodcall: DOUPLEDOT ID '(' elist ')' .

    $default  reduce using rule 60 (methodcall)


State 198

   96 idlist1: ',' ID idlist1 .

    $default  reduce using rule 96 (idlist1)


State 199

  104 forstmt: forprefix N1 elist ')' N2 loopstmt . N3

    $default  reduce using rule 108 (N3)

    N3  go to state 201


State 200

  105 forprefix: FOR '(' elist ';' M expr ';' .

    $default  reduce using rule 105 (forprefix)


State 201

  104 forstmt: forprefix N1 elist ')' N2 loopstmt N3 .

    $default  reduce using rule 104 (forstmt)
