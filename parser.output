Terminals unused in grammar

   DOUBLEDOT


State 102 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: stmt1
    2        | %empty

    3 stmt1: stmt1 stmt
    4      | stmt

    5 stmt: expr ';'
    6     | ifstmt
    7     | whilestmt
    8     | forstmt
    9     | returnstmt
   10     | BREAK ';'
   11     | CONTINUE ';'

   12 $@1: %empty

   13 $@2: %empty

   14 stmt: $@1 block $@2
   15     | funcdef
   16     | ';'

   17 expr: assignexpr
   18     | expr '+' expr
   19     | expr '-' expr
   20     | expr '*' expr
   21     | expr '/' expr
   22     | expr '%' expr
   23     | expr '>' expr
   24     | expr '<' expr
   25     | expr GREATEREQUAL expr
   26     | expr LESSEQUAL expr
   27     | expr EQUAL expr
   28     | expr NOTEQUAL expr

   29 $@3: %empty

   30 expr: expr AND $@3 logicalTemp expr

   31 $@4: %empty

   32 expr: expr OR $@4 logicalTemp expr
   33     | term

   34 logicalTemp: %empty

   35 term: '(' expr ')'
   36     | '-' expr
   37     | NOT expr
   38     | PLUSPLUS lvalue
   39     | lvalue PLUSPLUS
   40     | MINUSMINUS lvalue
   41     | lvalue MINUSMINUS
   42     | primary

   43 assignexpr: lvalue '=' expr

   44 primary: lvalue
   45        | call
   46        | objectdef
   47        | '(' funcdef ')'
   48        | const

   49 lvalue: ID
   50       | LOCAL ID
   51       | SCOPEOP ID
   52       | member

   53 member: lvalue '.' ID
   54       | lvalue '[' expr ']'
   55       | call '.' ID
   56       | call '[' expr ']'

   57 call: call '(' elist ')'
   58     | lvalue callsuffix
   59     | '(' funcdef ')' '(' elist ')'

   60 callsuffix: normcall
   61           | methodcall

   62 normcall: '(' elist ')'

   63 methodcall: DOUPLEDOT ID '(' elist ')'

   64 elist: %empty
   65      | expr elist1

   66 elist1: %empty
   67       | ',' expr elist1
   68       | error expr elist1

   69 objectdef: '[' elist ']'
   70          | '[' indexed ']'

   71 indexed: indexedelem more

   72 more: ',' indexedelem more
   73     | %empty

   74 indexedelem: '{' expr ':' expr '}'

   75 $@5: %empty

   76 $@6: %empty

   77 block: '{' $@5 stmt1 '}' $@6

   78 $@7: %empty

   79 $@8: %empty

   80 block: '{' $@7 '}' $@8
   81      | error stmt1 '}'
   82      | error '}'

   83 funcdef: funcprefix funcargs funcblockstart funcbody funcblockend

   84 funcname: ID
   85         | %empty

   86 funcprefix: FUNCTION funcname

   87 funcargs: '(' idlist ')'

   88 funcblockstart: %empty

   89 funcbody: block

   90 funcblockend: %empty

   91 const: NUMBER
   92      | STRING
   93      | NIL
   94      | TRUE
   95      | FALSE

   96 idlist: %empty
   97       | ID idlist1

   98 idlist1: %empty
   99        | ',' ID idlist1

  100 ifstmt: ifprefix stmt elseprefix stmt
  101       | ifprefix stmt

  102 ifprefix: IF '(' expr ')'

  103 elseprefix: ELSE

  104 whilestmt: whilestart whilesecond loopstmt

  105 whilestart: WHILE

  106 whilesecond: '(' expr ')'

  107 forstmt: forprefix N1 elist ')' N2 loopstmt N3

  108 forprefix: FOR '(' elist ';' M expr ';'

  109 N1: %empty

  110 N2: %empty

  111 N3: %empty

  112 M: %empty

  113 loopstmt: loopstart stmt loopend

  114 loopstart: %empty

  115 loopend: %empty

  116 returnstmt: RETURN ';'
  117           | RETURN expr ';'


Terminals, with rules where they appear

$end (0) 0
'%' (37) 22
'(' (40) 35 47 57 59 62 63 87 102 106 108
')' (41) 35 47 57 59 62 63 87 102 106 107
'*' (42) 20
'+' (43) 18
',' (44) 67 72 99
'-' (45) 19 36
'.' (46) 53 55
'/' (47) 21
':' (58) 74
';' (59) 5 10 11 16 108 116 117
'<' (60) 24
'=' (61) 43
'>' (62) 23
'[' (91) 54 56 69 70
']' (93) 54 56 69 70
'{' (123) 74 77 80
'}' (125) 74 77 80 81 82
error (256) 68 81 82
ID (258) 49 50 51 53 55 63 84 97 99
NUMBER (259) 91
STRING (260) 92
BREAK (261) 10
CONTINUE (262) 11
AND (263) 30
OR (264) 32
NOT (265) 37
GREATEREQUAL (266) 25
LESSEQUAL (267) 26
EQUAL (268) 27
NOTEQUAL (269) 28
PLUSPLUS (270) 38 39
MINUSMINUS (271) 40 41
LOCAL (272) 50
SCOPEOP (273) 51
DOUPLEDOT (274) 63
FUNCTION (275) 86
NIL (276) 93
TRUE (277) 94
FALSE (278) 95
IF (279) 102
ELSE (280) 103
WHILE (281) 105
FOR (282) 108
RETURN (283) 116 117
UMINUS (284)
DOUBLEDOT (285)


Nonterminals, with rules where they appear

$accept (49)
    on left: 0
program (50)
    on left: 1 2, on right: 0
stmt1 (51)
    on left: 3 4, on right: 1 3 77 81
stmt (52)
    on left: 5 6 7 8 9 10 11 14 15 16, on right: 3 4 100 101 113
$@1 (53)
    on left: 12, on right: 14
$@2 (54)
    on left: 13, on right: 14
expr (55)
    on left: 17 18 19 20 21 22 23 24 25 26 27 28 30 32 33, on right:
    5 18 19 20 21 22 23 24 25 26 27 28 30 32 35 36 37 43 54 56 65 67
    68 74 102 106 108 117
$@3 (56)
    on left: 29, on right: 30
$@4 (57)
    on left: 31, on right: 32
logicalTemp (58)
    on left: 34, on right: 30 32
term (59)
    on left: 35 36 37 38 39 40 41 42, on right: 33
assignexpr (60)
    on left: 43, on right: 17
primary (61)
    on left: 44 45 46 47 48, on right: 42
lvalue (62)
    on left: 49 50 51 52, on right: 38 39 40 41 43 44 53 54 58
member (63)
    on left: 53 54 55 56, on right: 52
call (64)
    on left: 57 58 59, on right: 45 55 56 57
callsuffix (65)
    on left: 60 61, on right: 58
normcall (66)
    on left: 62, on right: 60
methodcall (67)
    on left: 63, on right: 61
elist (68)
    on left: 64 65, on right: 57 59 62 63 69 107 108
elist1 (69)
    on left: 66 67 68, on right: 65 67 68
objectdef (70)
    on left: 69 70, on right: 46
indexed (71)
    on left: 71, on right: 70
more (72)
    on left: 72 73, on right: 71 72
indexedelem (73)
    on left: 74, on right: 71 72
block (74)
    on left: 77 80 81 82, on right: 14 89
$@5 (75)
    on left: 75, on right: 77
$@6 (76)
    on left: 76, on right: 77
$@7 (77)
    on left: 78, on right: 80
$@8 (78)
    on left: 79, on right: 80
funcdef (79)
    on left: 83, on right: 15 47 59
funcname (80)
    on left: 84 85, on right: 86
funcprefix (81)
    on left: 86, on right: 83
funcargs (82)
    on left: 87, on right: 83
funcblockstart (83)
    on left: 88, on right: 83
funcbody (84)
    on left: 89, on right: 83
funcblockend (85)
    on left: 90, on right: 83
const (86)
    on left: 91 92 93 94 95, on right: 48
idlist (87)
    on left: 96 97, on right: 87
idlist1 (88)
    on left: 98 99, on right: 97 99
ifstmt (89)
    on left: 100 101, on right: 6
ifprefix (90)
    on left: 102, on right: 100 101
elseprefix (91)
    on left: 103, on right: 100
whilestmt (92)
    on left: 104, on right: 7
whilestart (93)
    on left: 105, on right: 104
whilesecond (94)
    on left: 106, on right: 104
forstmt (95)
    on left: 107, on right: 8
forprefix (96)
    on left: 108, on right: 107
N1 (97)
    on left: 109, on right: 107
N2 (98)
    on left: 110, on right: 107
N3 (99)
    on left: 111, on right: 107
M (100)
    on left: 112, on right: 108
loopstmt (101)
    on left: 113, on right: 104 107
loopstart (102)
    on left: 114, on right: 113
loopend (103)
    on left: 115, on right: 113
returnstmt (104)
    on left: 116 117, on right: 9


State 0

    0 $accept: . program $end

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    CONTINUE    shift, and go to state 5
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    FUNCTION    shift, and go to state 11
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    IF          shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    RETURN      shift, and go to state 18
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21
    ';'         shift, and go to state 22

    $end      reduce using rule 2 (program)
    $default  reduce using rule 12 ($@1)

    program     go to state 23
    stmt1       go to state 24
    stmt        go to state 25
    $@1         go to state 26
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    funcdef     go to state 35
    funcprefix  go to state 36
    const       go to state 37
    ifstmt      go to state 38
    ifprefix    go to state 39
    whilestmt   go to state 40
    whilestart  go to state 41
    forstmt     go to state 42
    forprefix   go to state 43
    returnstmt  go to state 44


State 1

   49 lvalue: ID .

    $default  reduce using rule 49 (lvalue)


State 2

   91 const: NUMBER .

    $default  reduce using rule 91 (const)


State 3

   92 const: STRING .

    $default  reduce using rule 92 (const)


State 4

   10 stmt: BREAK . ';'

    ';'  shift, and go to state 45


State 5

   11 stmt: CONTINUE . ';'

    ';'  shift, and go to state 46


State 6

   37 term: NOT . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    expr        go to state 47
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 7

   38 term: PLUSPLUS . lvalue

    ID       shift, and go to state 1
    LOCAL    shift, and go to state 9
    SCOPEOP  shift, and go to state 10
    '('      shift, and go to state 48

    lvalue  go to state 49
    member  go to state 32
    call    go to state 50


State 8

   40 term: MINUSMINUS . lvalue

    ID       shift, and go to state 1
    LOCAL    shift, and go to state 9
    SCOPEOP  shift, and go to state 10
    '('      shift, and go to state 48

    lvalue  go to state 51
    member  go to state 32
    call    go to state 50


State 9

   50 lvalue: LOCAL . ID

    ID  shift, and go to state 52


State 10

   51 lvalue: SCOPEOP . ID

    ID  shift, and go to state 53


State 11

   86 funcprefix: FUNCTION . funcname

    ID  shift, and go to state 54

    $default  reduce using rule 85 (funcname)

    funcname  go to state 55


State 12

   93 const: NIL .

    $default  reduce using rule 93 (const)


State 13

   94 const: TRUE .

    $default  reduce using rule 94 (const)


State 14

   95 const: FALSE .

    $default  reduce using rule 95 (const)


State 15

  102 ifprefix: IF . '(' expr ')'

    '('  shift, and go to state 56


State 16

  105 whilestart: WHILE .

    $default  reduce using rule 105 (whilestart)


State 17

  108 forprefix: FOR . '(' elist ';' M expr ';'

    '('  shift, and go to state 57


State 18

  116 returnstmt: RETURN . ';'
  117           | RETURN . expr ';'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21
    ';'         shift, and go to state 58

    expr        go to state 59
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 19

   36 term: '-' . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    expr        go to state 60
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 20

   69 objectdef: '[' . elist ']'
   70          | '[' . indexed ']'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21
    '{'         shift, and go to state 61

    $default  reduce using rule 64 (elist)

    expr         go to state 62
    term         go to state 28
    assignexpr   go to state 29
    primary      go to state 30
    lvalue       go to state 31
    member       go to state 32
    call         go to state 33
    elist        go to state 63
    objectdef    go to state 34
    indexed      go to state 64
    indexedelem  go to state 65
    const        go to state 37


State 21

   35 term: '(' . expr ')'
   47 primary: '(' . funcdef ')'
   59 call: '(' . funcdef ')' '(' elist ')'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    FUNCTION    shift, and go to state 11
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    expr        go to state 66
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    funcdef     go to state 67
    funcprefix  go to state 36
    const       go to state 37


State 22

   16 stmt: ';' .

    $default  reduce using rule 16 (stmt)


State 23

    0 $accept: program . $end

    $end  shift, and go to state 68


State 24

    1 program: stmt1 .
    3 stmt1: stmt1 . stmt

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    CONTINUE    shift, and go to state 5
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    FUNCTION    shift, and go to state 11
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    IF          shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    RETURN      shift, and go to state 18
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21
    ';'         shift, and go to state 22

    $end      reduce using rule 1 (program)
    $default  reduce using rule 12 ($@1)

    stmt        go to state 69
    $@1         go to state 26
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    funcdef     go to state 35
    funcprefix  go to state 36
    const       go to state 37
    ifstmt      go to state 38
    ifprefix    go to state 39
    whilestmt   go to state 40
    whilestart  go to state 41
    forstmt     go to state 42
    forprefix   go to state 43
    returnstmt  go to state 44


State 25

    4 stmt1: stmt .

    $default  reduce using rule 4 (stmt1)


State 26

   14 stmt: $@1 . block $@2

    error  shift, and go to state 70
    '{'    shift, and go to state 71

    block  go to state 72


State 27

    5 stmt: expr . ';'
   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   30     | expr . AND $@3 logicalTemp expr
   32     | expr . OR $@4 logicalTemp expr

    AND           shift, and go to state 73
    OR            shift, and go to state 74
    GREATEREQUAL  shift, and go to state 75
    LESSEQUAL     shift, and go to state 76
    EQUAL         shift, and go to state 77
    NOTEQUAL      shift, and go to state 78
    '>'           shift, and go to state 79
    '<'           shift, and go to state 80
    '+'           shift, and go to state 81
    '-'           shift, and go to state 82
    '*'           shift, and go to state 83
    '/'           shift, and go to state 84
    '%'           shift, and go to state 85
    ';'           shift, and go to state 86


State 28

   33 expr: term .

    $default  reduce using rule 33 (expr)


State 29

   17 expr: assignexpr .

    $default  reduce using rule 17 (expr)


State 30

   42 term: primary .

    $default  reduce using rule 42 (term)


State 31

   39 term: lvalue . PLUSPLUS
   41     | lvalue . MINUSMINUS
   43 assignexpr: lvalue . '=' expr
   44 primary: lvalue .
   53 member: lvalue . '.' ID
   54       | lvalue . '[' expr ']'
   58 call: lvalue . callsuffix

    PLUSPLUS    shift, and go to state 87
    MINUSMINUS  shift, and go to state 88
    DOUPLEDOT   shift, and go to state 89
    '='         shift, and go to state 90
    '.'         shift, and go to state 91
    '['         shift, and go to state 92
    '('         shift, and go to state 93

    $default  reduce using rule 44 (primary)

    callsuffix  go to state 94
    normcall    go to state 95
    methodcall  go to state 96


State 32

   52 lvalue: member .

    $default  reduce using rule 52 (lvalue)


State 33

   45 primary: call .
   55 member: call . '.' ID
   56       | call . '[' expr ']'
   57 call: call . '(' elist ')'

    '.'  shift, and go to state 97
    '['  shift, and go to state 98
    '('  shift, and go to state 99

    $default  reduce using rule 45 (primary)


State 34

   46 primary: objectdef .

    $default  reduce using rule 46 (primary)


State 35

   15 stmt: funcdef .

    $default  reduce using rule 15 (stmt)


State 36

   83 funcdef: funcprefix . funcargs funcblockstart funcbody funcblockend

    '('  shift, and go to state 100

    funcargs  go to state 101


State 37

   48 primary: const .

    $default  reduce using rule 48 (primary)


State 38

    6 stmt: ifstmt .

    $default  reduce using rule 6 (stmt)


State 39

  100 ifstmt: ifprefix . stmt elseprefix stmt
  101       | ifprefix . stmt

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    CONTINUE    shift, and go to state 5
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    FUNCTION    shift, and go to state 11
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    IF          shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    RETURN      shift, and go to state 18
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21
    ';'         shift, and go to state 22

    $default  reduce using rule 12 ($@1)

    stmt        go to state 102
    $@1         go to state 26
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    funcdef     go to state 35
    funcprefix  go to state 36
    const       go to state 37
    ifstmt      go to state 38
    ifprefix    go to state 39
    whilestmt   go to state 40
    whilestart  go to state 41
    forstmt     go to state 42
    forprefix   go to state 43
    returnstmt  go to state 44


State 40

    7 stmt: whilestmt .

    $default  reduce using rule 7 (stmt)


State 41

  104 whilestmt: whilestart . whilesecond loopstmt

    '('  shift, and go to state 103

    whilesecond  go to state 104


State 42

    8 stmt: forstmt .

    $default  reduce using rule 8 (stmt)


State 43

  107 forstmt: forprefix . N1 elist ')' N2 loopstmt N3

    $default  reduce using rule 109 (N1)

    N1  go to state 105


State 44

    9 stmt: returnstmt .

    $default  reduce using rule 9 (stmt)


State 45

   10 stmt: BREAK ';' .

    $default  reduce using rule 10 (stmt)


State 46

   11 stmt: CONTINUE ';' .

    $default  reduce using rule 11 (stmt)


State 47

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   30     | expr . AND $@3 logicalTemp expr
   32     | expr . OR $@4 logicalTemp expr
   37 term: NOT expr .

    $default  reduce using rule 37 (term)


State 48

   59 call: '(' . funcdef ')' '(' elist ')'

    FUNCTION  shift, and go to state 11

    funcdef     go to state 106
    funcprefix  go to state 36


State 49

   38 term: PLUSPLUS lvalue .
   53 member: lvalue . '.' ID
   54       | lvalue . '[' expr ']'
   58 call: lvalue . callsuffix

    DOUPLEDOT  shift, and go to state 89
    '.'        shift, and go to state 91
    '['        shift, and go to state 92
    '('        shift, and go to state 93

    $default  reduce using rule 38 (term)

    callsuffix  go to state 94
    normcall    go to state 95
    methodcall  go to state 96


State 50

   55 member: call . '.' ID
   56       | call . '[' expr ']'
   57 call: call . '(' elist ')'

    '.'  shift, and go to state 97
    '['  shift, and go to state 98
    '('  shift, and go to state 99


State 51

   40 term: MINUSMINUS lvalue .
   53 member: lvalue . '.' ID
   54       | lvalue . '[' expr ']'
   58 call: lvalue . callsuffix

    DOUPLEDOT  shift, and go to state 89
    '.'        shift, and go to state 91
    '['        shift, and go to state 92
    '('        shift, and go to state 93

    $default  reduce using rule 40 (term)

    callsuffix  go to state 94
    normcall    go to state 95
    methodcall  go to state 96


State 52

   50 lvalue: LOCAL ID .

    $default  reduce using rule 50 (lvalue)


State 53

   51 lvalue: SCOPEOP ID .

    $default  reduce using rule 51 (lvalue)


State 54

   84 funcname: ID .

    $default  reduce using rule 84 (funcname)


State 55

   86 funcprefix: FUNCTION funcname .

    $default  reduce using rule 86 (funcprefix)


State 56

  102 ifprefix: IF '(' . expr ')'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    expr        go to state 107
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 57

  108 forprefix: FOR '(' . elist ';' M expr ';'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    $default  reduce using rule 64 (elist)

    expr        go to state 62
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 108
    objectdef   go to state 34
    const       go to state 37


State 58

  116 returnstmt: RETURN ';' .

    $default  reduce using rule 116 (returnstmt)


State 59

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   30     | expr . AND $@3 logicalTemp expr
   32     | expr . OR $@4 logicalTemp expr
  117 returnstmt: RETURN expr . ';'

    AND           shift, and go to state 73
    OR            shift, and go to state 74
    GREATEREQUAL  shift, and go to state 75
    LESSEQUAL     shift, and go to state 76
    EQUAL         shift, and go to state 77
    NOTEQUAL      shift, and go to state 78
    '>'           shift, and go to state 79
    '<'           shift, and go to state 80
    '+'           shift, and go to state 81
    '-'           shift, and go to state 82
    '*'           shift, and go to state 83
    '/'           shift, and go to state 84
    '%'           shift, and go to state 85
    ';'           shift, and go to state 109


State 60

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   30     | expr . AND $@3 logicalTemp expr
   32     | expr . OR $@4 logicalTemp expr
   36 term: '-' expr .

    $default  reduce using rule 36 (term)


State 61

   74 indexedelem: '{' . expr ':' expr '}'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    expr        go to state 110
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 62

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   30     | expr . AND $@3 logicalTemp expr
   32     | expr . OR $@4 logicalTemp expr
   65 elist: expr . elist1

    error         shift, and go to state 111
    AND           shift, and go to state 73
    OR            shift, and go to state 74
    GREATEREQUAL  shift, and go to state 75
    LESSEQUAL     shift, and go to state 76
    EQUAL         shift, and go to state 77
    NOTEQUAL      shift, and go to state 78
    '>'           shift, and go to state 79
    '<'           shift, and go to state 80
    '+'           shift, and go to state 81
    '-'           shift, and go to state 82
    '*'           shift, and go to state 83
    '/'           shift, and go to state 84
    '%'           shift, and go to state 85
    ','           shift, and go to state 112

    ']'  reduce using rule 66 (elist1)
    ')'  reduce using rule 66 (elist1)
    ';'  reduce using rule 66 (elist1)

    elist1  go to state 113


State 63

   69 objectdef: '[' elist . ']'

    ']'  shift, and go to state 114


State 64

   70 objectdef: '[' indexed . ']'

    ']'  shift, and go to state 115


State 65

   71 indexed: indexedelem . more

    ','  shift, and go to state 116

    $default  reduce using rule 73 (more)

    more  go to state 117


State 66

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   30     | expr . AND $@3 logicalTemp expr
   32     | expr . OR $@4 logicalTemp expr
   35 term: '(' expr . ')'

    AND           shift, and go to state 73
    OR            shift, and go to state 74
    GREATEREQUAL  shift, and go to state 75
    LESSEQUAL     shift, and go to state 76
    EQUAL         shift, and go to state 77
    NOTEQUAL      shift, and go to state 78
    '>'           shift, and go to state 79
    '<'           shift, and go to state 80
    '+'           shift, and go to state 81
    '-'           shift, and go to state 82
    '*'           shift, and go to state 83
    '/'           shift, and go to state 84
    '%'           shift, and go to state 85
    ')'           shift, and go to state 118


State 67

   47 primary: '(' funcdef . ')'
   59 call: '(' funcdef . ')' '(' elist ')'

    ')'  shift, and go to state 119


State 68

    0 $accept: program $end .

    $default  accept


State 69

    3 stmt1: stmt1 stmt .

    $default  reduce using rule 3 (stmt1)


State 70

   81 block: error . stmt1 '}'
   82      | error . '}'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    CONTINUE    shift, and go to state 5
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    FUNCTION    shift, and go to state 11
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    IF          shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    RETURN      shift, and go to state 18
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21
    ';'         shift, and go to state 22
    '}'         shift, and go to state 120

    $default  reduce using rule 12 ($@1)

    stmt1       go to state 121
    stmt        go to state 25
    $@1         go to state 26
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    funcdef     go to state 35
    funcprefix  go to state 36
    const       go to state 37
    ifstmt      go to state 38
    ifprefix    go to state 39
    whilestmt   go to state 40
    whilestart  go to state 41
    forstmt     go to state 42
    forprefix   go to state 43
    returnstmt  go to state 44


State 71

   77 block: '{' . $@5 stmt1 '}' $@6
   80      | '{' . $@7 '}' $@8

    '}'       reduce using rule 78 ($@7)
    $default  reduce using rule 75 ($@5)

    $@5  go to state 122
    $@7  go to state 123


State 72

   14 stmt: $@1 block . $@2

    $default  reduce using rule 13 ($@2)

    $@2  go to state 124


State 73

   30 expr: expr AND . $@3 logicalTemp expr

    $default  reduce using rule 29 ($@3)

    $@3  go to state 125


State 74

   32 expr: expr OR . $@4 logicalTemp expr

    $default  reduce using rule 31 ($@4)

    $@4  go to state 126


State 75

   25 expr: expr GREATEREQUAL . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    expr        go to state 127
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 76

   26 expr: expr LESSEQUAL . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    expr        go to state 128
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 77

   27 expr: expr EQUAL . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    expr        go to state 129
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 78

   28 expr: expr NOTEQUAL . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    expr        go to state 130
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 79

   23 expr: expr '>' . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    expr        go to state 131
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 80

   24 expr: expr '<' . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    expr        go to state 132
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 81

   18 expr: expr '+' . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    expr        go to state 133
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 82

   19 expr: expr '-' . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    expr        go to state 134
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 83

   20 expr: expr '*' . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    expr        go to state 135
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 84

   21 expr: expr '/' . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    expr        go to state 136
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 85

   22 expr: expr '%' . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    expr        go to state 137
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 86

    5 stmt: expr ';' .

    $default  reduce using rule 5 (stmt)


State 87

   39 term: lvalue PLUSPLUS .

    $default  reduce using rule 39 (term)


State 88

   41 term: lvalue MINUSMINUS .

    $default  reduce using rule 41 (term)


State 89

   63 methodcall: DOUPLEDOT . ID '(' elist ')'

    ID  shift, and go to state 138


State 90

   43 assignexpr: lvalue '=' . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    expr        go to state 139
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 91

   53 member: lvalue '.' . ID

    ID  shift, and go to state 140


State 92

   54 member: lvalue '[' . expr ']'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    expr        go to state 141
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 93

   62 normcall: '(' . elist ')'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    $default  reduce using rule 64 (elist)

    expr        go to state 62
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 142
    objectdef   go to state 34
    const       go to state 37


State 94

   58 call: lvalue callsuffix .

    $default  reduce using rule 58 (call)


State 95

   60 callsuffix: normcall .

    $default  reduce using rule 60 (callsuffix)


State 96

   61 callsuffix: methodcall .

    $default  reduce using rule 61 (callsuffix)


State 97

   55 member: call '.' . ID

    ID  shift, and go to state 143


State 98

   56 member: call '[' . expr ']'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    expr        go to state 144
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 99

   57 call: call '(' . elist ')'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    $default  reduce using rule 64 (elist)

    expr        go to state 62
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 145
    objectdef   go to state 34
    const       go to state 37


State 100

   87 funcargs: '(' . idlist ')'

    ID  shift, and go to state 146

    $default  reduce using rule 96 (idlist)

    idlist  go to state 147


State 101

   83 funcdef: funcprefix funcargs . funcblockstart funcbody funcblockend

    $default  reduce using rule 88 (funcblockstart)

    funcblockstart  go to state 148


State 102

  100 ifstmt: ifprefix stmt . elseprefix stmt
  101       | ifprefix stmt .

    ELSE  shift, and go to state 149

    ELSE      [reduce using rule 101 (ifstmt)]
    $default  reduce using rule 101 (ifstmt)

    elseprefix  go to state 150


State 103

  106 whilesecond: '(' . expr ')'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    expr        go to state 151
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 104

  104 whilestmt: whilestart whilesecond . loopstmt

    $default  reduce using rule 114 (loopstart)

    loopstmt   go to state 152
    loopstart  go to state 153


State 105

  107 forstmt: forprefix N1 . elist ')' N2 loopstmt N3

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    $default  reduce using rule 64 (elist)

    expr        go to state 62
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 154
    objectdef   go to state 34
    const       go to state 37


State 106

   59 call: '(' funcdef . ')' '(' elist ')'

    ')'  shift, and go to state 155


State 107

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   30     | expr . AND $@3 logicalTemp expr
   32     | expr . OR $@4 logicalTemp expr
  102 ifprefix: IF '(' expr . ')'

    AND           shift, and go to state 73
    OR            shift, and go to state 74
    GREATEREQUAL  shift, and go to state 75
    LESSEQUAL     shift, and go to state 76
    EQUAL         shift, and go to state 77
    NOTEQUAL      shift, and go to state 78
    '>'           shift, and go to state 79
    '<'           shift, and go to state 80
    '+'           shift, and go to state 81
    '-'           shift, and go to state 82
    '*'           shift, and go to state 83
    '/'           shift, and go to state 84
    '%'           shift, and go to state 85
    ')'           shift, and go to state 156


State 108

  108 forprefix: FOR '(' elist . ';' M expr ';'

    ';'  shift, and go to state 157


State 109

  117 returnstmt: RETURN expr ';' .

    $default  reduce using rule 117 (returnstmt)


State 110

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   30     | expr . AND $@3 logicalTemp expr
   32     | expr . OR $@4 logicalTemp expr
   74 indexedelem: '{' expr . ':' expr '}'

    AND           shift, and go to state 73
    OR            shift, and go to state 74
    GREATEREQUAL  shift, and go to state 75
    LESSEQUAL     shift, and go to state 76
    EQUAL         shift, and go to state 77
    NOTEQUAL      shift, and go to state 78
    '>'           shift, and go to state 79
    '<'           shift, and go to state 80
    '+'           shift, and go to state 81
    '-'           shift, and go to state 82
    '*'           shift, and go to state 83
    '/'           shift, and go to state 84
    '%'           shift, and go to state 85
    ':'           shift, and go to state 158


State 111

   68 elist1: error . expr elist1

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    expr        go to state 159
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 112

   67 elist1: ',' . expr elist1

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    expr        go to state 160
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 113

   65 elist: expr elist1 .

    $default  reduce using rule 65 (elist)


State 114

   69 objectdef: '[' elist ']' .

    $default  reduce using rule 69 (objectdef)


State 115

   70 objectdef: '[' indexed ']' .

    $default  reduce using rule 70 (objectdef)


State 116

   72 more: ',' . indexedelem more

    '{'  shift, and go to state 61

    indexedelem  go to state 161


State 117

   71 indexed: indexedelem more .

    $default  reduce using rule 71 (indexed)


State 118

   35 term: '(' expr ')' .

    $default  reduce using rule 35 (term)


State 119

   47 primary: '(' funcdef ')' .
   59 call: '(' funcdef ')' . '(' elist ')'

    '('  shift, and go to state 162

    $default  reduce using rule 47 (primary)


State 120

   82 block: error '}' .

    $default  reduce using rule 82 (block)


State 121

    3 stmt1: stmt1 . stmt
   81 block: error stmt1 . '}'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    CONTINUE    shift, and go to state 5
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    FUNCTION    shift, and go to state 11
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    IF          shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    RETURN      shift, and go to state 18
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21
    ';'         shift, and go to state 22
    '}'         shift, and go to state 163

    $default  reduce using rule 12 ($@1)

    stmt        go to state 69
    $@1         go to state 26
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    funcdef     go to state 35
    funcprefix  go to state 36
    const       go to state 37
    ifstmt      go to state 38
    ifprefix    go to state 39
    whilestmt   go to state 40
    whilestart  go to state 41
    forstmt     go to state 42
    forprefix   go to state 43
    returnstmt  go to state 44


State 122

   77 block: '{' $@5 . stmt1 '}' $@6

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    CONTINUE    shift, and go to state 5
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    FUNCTION    shift, and go to state 11
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    IF          shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    RETURN      shift, and go to state 18
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21
    ';'         shift, and go to state 22

    $default  reduce using rule 12 ($@1)

    stmt1       go to state 164
    stmt        go to state 25
    $@1         go to state 26
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    funcdef     go to state 35
    funcprefix  go to state 36
    const       go to state 37
    ifstmt      go to state 38
    ifprefix    go to state 39
    whilestmt   go to state 40
    whilestart  go to state 41
    forstmt     go to state 42
    forprefix   go to state 43
    returnstmt  go to state 44


State 123

   80 block: '{' $@7 . '}' $@8

    '}'  shift, and go to state 165


State 124

   14 stmt: $@1 block $@2 .

    $default  reduce using rule 14 (stmt)


State 125

   30 expr: expr AND $@3 . logicalTemp expr

    $default  reduce using rule 34 (logicalTemp)

    logicalTemp  go to state 166


State 126

   32 expr: expr OR $@4 . logicalTemp expr

    $default  reduce using rule 34 (logicalTemp)

    logicalTemp  go to state 167


State 127

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   25     | expr GREATEREQUAL expr .
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   30     | expr . AND $@3 logicalTemp expr
   32     | expr . OR $@4 logicalTemp expr

    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85

    GREATEREQUAL  error (nonassociative)
    LESSEQUAL     error (nonassociative)
    '>'           error (nonassociative)
    '<'           error (nonassociative)

    $default  reduce using rule 25 (expr)


State 128

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   26     | expr LESSEQUAL expr .
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   30     | expr . AND $@3 logicalTemp expr
   32     | expr . OR $@4 logicalTemp expr

    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85

    GREATEREQUAL  error (nonassociative)
    LESSEQUAL     error (nonassociative)
    '>'           error (nonassociative)
    '<'           error (nonassociative)

    $default  reduce using rule 26 (expr)


State 129

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   27     | expr EQUAL expr .
   28     | expr . NOTEQUAL expr
   30     | expr . AND $@3 logicalTemp expr
   32     | expr . OR $@4 logicalTemp expr

    GREATEREQUAL  shift, and go to state 75
    LESSEQUAL     shift, and go to state 76
    '>'           shift, and go to state 79
    '<'           shift, and go to state 80
    '+'           shift, and go to state 81
    '-'           shift, and go to state 82
    '*'           shift, and go to state 83
    '/'           shift, and go to state 84
    '%'           shift, and go to state 85

    EQUAL     error (nonassociative)
    NOTEQUAL  error (nonassociative)

    $default  reduce using rule 27 (expr)


State 130

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   28     | expr NOTEQUAL expr .
   30     | expr . AND $@3 logicalTemp expr
   32     | expr . OR $@4 logicalTemp expr

    GREATEREQUAL  shift, and go to state 75
    LESSEQUAL     shift, and go to state 76
    '>'           shift, and go to state 79
    '<'           shift, and go to state 80
    '+'           shift, and go to state 81
    '-'           shift, and go to state 82
    '*'           shift, and go to state 83
    '/'           shift, and go to state 84
    '%'           shift, and go to state 85

    EQUAL     error (nonassociative)
    NOTEQUAL  error (nonassociative)

    $default  reduce using rule 28 (expr)


State 131

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   23     | expr '>' expr .
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   30     | expr . AND $@3 logicalTemp expr
   32     | expr . OR $@4 logicalTemp expr

    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85

    GREATEREQUAL  error (nonassociative)
    LESSEQUAL     error (nonassociative)
    '>'           error (nonassociative)
    '<'           error (nonassociative)

    $default  reduce using rule 23 (expr)


State 132

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   24     | expr '<' expr .
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   30     | expr . AND $@3 logicalTemp expr
   32     | expr . OR $@4 logicalTemp expr

    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85

    GREATEREQUAL  error (nonassociative)
    LESSEQUAL     error (nonassociative)
    '>'           error (nonassociative)
    '<'           error (nonassociative)

    $default  reduce using rule 24 (expr)


State 133

   18 expr: expr . '+' expr
   18     | expr '+' expr .
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   30     | expr . AND $@3 logicalTemp expr
   32     | expr . OR $@4 logicalTemp expr

    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85

    $default  reduce using rule 18 (expr)


State 134

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   19     | expr '-' expr .
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   30     | expr . AND $@3 logicalTemp expr
   32     | expr . OR $@4 logicalTemp expr

    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85

    $default  reduce using rule 19 (expr)


State 135

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   20     | expr '*' expr .
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   30     | expr . AND $@3 logicalTemp expr
   32     | expr . OR $@4 logicalTemp expr

    $default  reduce using rule 20 (expr)


State 136

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   21     | expr '/' expr .
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   30     | expr . AND $@3 logicalTemp expr
   32     | expr . OR $@4 logicalTemp expr

    $default  reduce using rule 21 (expr)


State 137

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   22     | expr '%' expr .
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   30     | expr . AND $@3 logicalTemp expr
   32     | expr . OR $@4 logicalTemp expr

    $default  reduce using rule 22 (expr)


State 138

   63 methodcall: DOUPLEDOT ID . '(' elist ')'

    '('  shift, and go to state 168


State 139

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   30     | expr . AND $@3 logicalTemp expr
   32     | expr . OR $@4 logicalTemp expr
   43 assignexpr: lvalue '=' expr .

    AND           shift, and go to state 73
    OR            shift, and go to state 74
    GREATEREQUAL  shift, and go to state 75
    LESSEQUAL     shift, and go to state 76
    EQUAL         shift, and go to state 77
    NOTEQUAL      shift, and go to state 78
    '>'           shift, and go to state 79
    '<'           shift, and go to state 80
    '+'           shift, and go to state 81
    '-'           shift, and go to state 82
    '*'           shift, and go to state 83
    '/'           shift, and go to state 84
    '%'           shift, and go to state 85

    $default  reduce using rule 43 (assignexpr)


State 140

   53 member: lvalue '.' ID .

    $default  reduce using rule 53 (member)


State 141

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   30     | expr . AND $@3 logicalTemp expr
   32     | expr . OR $@4 logicalTemp expr
   54 member: lvalue '[' expr . ']'

    AND           shift, and go to state 73
    OR            shift, and go to state 74
    GREATEREQUAL  shift, and go to state 75
    LESSEQUAL     shift, and go to state 76
    EQUAL         shift, and go to state 77
    NOTEQUAL      shift, and go to state 78
    '>'           shift, and go to state 79
    '<'           shift, and go to state 80
    '+'           shift, and go to state 81
    '-'           shift, and go to state 82
    '*'           shift, and go to state 83
    '/'           shift, and go to state 84
    '%'           shift, and go to state 85
    ']'           shift, and go to state 169


State 142

   62 normcall: '(' elist . ')'

    ')'  shift, and go to state 170


State 143

   55 member: call '.' ID .

    $default  reduce using rule 55 (member)


State 144

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   30     | expr . AND $@3 logicalTemp expr
   32     | expr . OR $@4 logicalTemp expr
   56 member: call '[' expr . ']'

    AND           shift, and go to state 73
    OR            shift, and go to state 74
    GREATEREQUAL  shift, and go to state 75
    LESSEQUAL     shift, and go to state 76
    EQUAL         shift, and go to state 77
    NOTEQUAL      shift, and go to state 78
    '>'           shift, and go to state 79
    '<'           shift, and go to state 80
    '+'           shift, and go to state 81
    '-'           shift, and go to state 82
    '*'           shift, and go to state 83
    '/'           shift, and go to state 84
    '%'           shift, and go to state 85
    ']'           shift, and go to state 171


State 145

   57 call: call '(' elist . ')'

    ')'  shift, and go to state 172


State 146

   97 idlist: ID . idlist1

    ','  shift, and go to state 173

    $default  reduce using rule 98 (idlist1)

    idlist1  go to state 174


State 147

   87 funcargs: '(' idlist . ')'

    ')'  shift, and go to state 175


State 148

   83 funcdef: funcprefix funcargs funcblockstart . funcbody funcblockend

    error  shift, and go to state 70
    '{'    shift, and go to state 71

    block     go to state 176
    funcbody  go to state 177


State 149

  103 elseprefix: ELSE .

    $default  reduce using rule 103 (elseprefix)


State 150

  100 ifstmt: ifprefix stmt elseprefix . stmt

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    CONTINUE    shift, and go to state 5
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    FUNCTION    shift, and go to state 11
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    IF          shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    RETURN      shift, and go to state 18
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21
    ';'         shift, and go to state 22

    $default  reduce using rule 12 ($@1)

    stmt        go to state 178
    $@1         go to state 26
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    funcdef     go to state 35
    funcprefix  go to state 36
    const       go to state 37
    ifstmt      go to state 38
    ifprefix    go to state 39
    whilestmt   go to state 40
    whilestart  go to state 41
    forstmt     go to state 42
    forprefix   go to state 43
    returnstmt  go to state 44


State 151

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   30     | expr . AND $@3 logicalTemp expr
   32     | expr . OR $@4 logicalTemp expr
  106 whilesecond: '(' expr . ')'

    AND           shift, and go to state 73
    OR            shift, and go to state 74
    GREATEREQUAL  shift, and go to state 75
    LESSEQUAL     shift, and go to state 76
    EQUAL         shift, and go to state 77
    NOTEQUAL      shift, and go to state 78
    '>'           shift, and go to state 79
    '<'           shift, and go to state 80
    '+'           shift, and go to state 81
    '-'           shift, and go to state 82
    '*'           shift, and go to state 83
    '/'           shift, and go to state 84
    '%'           shift, and go to state 85
    ')'           shift, and go to state 179


State 152

  104 whilestmt: whilestart whilesecond loopstmt .

    $default  reduce using rule 104 (whilestmt)


State 153

  113 loopstmt: loopstart . stmt loopend

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    CONTINUE    shift, and go to state 5
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    FUNCTION    shift, and go to state 11
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    IF          shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    RETURN      shift, and go to state 18
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21
    ';'         shift, and go to state 22

    $default  reduce using rule 12 ($@1)

    stmt        go to state 180
    $@1         go to state 26
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    funcdef     go to state 35
    funcprefix  go to state 36
    const       go to state 37
    ifstmt      go to state 38
    ifprefix    go to state 39
    whilestmt   go to state 40
    whilestart  go to state 41
    forstmt     go to state 42
    forprefix   go to state 43
    returnstmt  go to state 44


State 154

  107 forstmt: forprefix N1 elist . ')' N2 loopstmt N3

    ')'  shift, and go to state 181


State 155

   59 call: '(' funcdef ')' . '(' elist ')'

    '('  shift, and go to state 162


State 156

  102 ifprefix: IF '(' expr ')' .

    $default  reduce using rule 102 (ifprefix)


State 157

  108 forprefix: FOR '(' elist ';' . M expr ';'

    $default  reduce using rule 112 (M)

    M  go to state 182


State 158

   74 indexedelem: '{' expr ':' . expr '}'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    expr        go to state 183
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 159

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   30     | expr . AND $@3 logicalTemp expr
   32     | expr . OR $@4 logicalTemp expr
   68 elist1: error expr . elist1

    error         shift, and go to state 111
    AND           shift, and go to state 73
    OR            shift, and go to state 74
    GREATEREQUAL  shift, and go to state 75
    LESSEQUAL     shift, and go to state 76
    EQUAL         shift, and go to state 77
    NOTEQUAL      shift, and go to state 78
    '>'           shift, and go to state 79
    '<'           shift, and go to state 80
    '+'           shift, and go to state 81
    '-'           shift, and go to state 82
    '*'           shift, and go to state 83
    '/'           shift, and go to state 84
    '%'           shift, and go to state 85
    ','           shift, and go to state 112

    ']'  reduce using rule 66 (elist1)
    ')'  reduce using rule 66 (elist1)
    ';'  reduce using rule 66 (elist1)

    elist1  go to state 184


State 160

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   30     | expr . AND $@3 logicalTemp expr
   32     | expr . OR $@4 logicalTemp expr
   67 elist1: ',' expr . elist1

    error         shift, and go to state 111
    AND           shift, and go to state 73
    OR            shift, and go to state 74
    GREATEREQUAL  shift, and go to state 75
    LESSEQUAL     shift, and go to state 76
    EQUAL         shift, and go to state 77
    NOTEQUAL      shift, and go to state 78
    '>'           shift, and go to state 79
    '<'           shift, and go to state 80
    '+'           shift, and go to state 81
    '-'           shift, and go to state 82
    '*'           shift, and go to state 83
    '/'           shift, and go to state 84
    '%'           shift, and go to state 85
    ','           shift, and go to state 112

    ']'  reduce using rule 66 (elist1)
    ')'  reduce using rule 66 (elist1)
    ';'  reduce using rule 66 (elist1)

    elist1  go to state 185


State 161

   72 more: ',' indexedelem . more

    ','  shift, and go to state 116

    $default  reduce using rule 73 (more)

    more  go to state 186


State 162

   59 call: '(' funcdef ')' '(' . elist ')'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    $default  reduce using rule 64 (elist)

    expr        go to state 62
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 187
    objectdef   go to state 34
    const       go to state 37


State 163

   81 block: error stmt1 '}' .

    $default  reduce using rule 81 (block)


State 164

    3 stmt1: stmt1 . stmt
   77 block: '{' $@5 stmt1 . '}' $@6

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    CONTINUE    shift, and go to state 5
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    FUNCTION    shift, and go to state 11
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    IF          shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    RETURN      shift, and go to state 18
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21
    ';'         shift, and go to state 22
    '}'         shift, and go to state 188

    $default  reduce using rule 12 ($@1)

    stmt        go to state 69
    $@1         go to state 26
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    funcdef     go to state 35
    funcprefix  go to state 36
    const       go to state 37
    ifstmt      go to state 38
    ifprefix    go to state 39
    whilestmt   go to state 40
    whilestart  go to state 41
    forstmt     go to state 42
    forprefix   go to state 43
    returnstmt  go to state 44


State 165

   80 block: '{' $@7 '}' . $@8

    $default  reduce using rule 79 ($@8)

    $@8  go to state 189


State 166

   30 expr: expr AND $@3 logicalTemp . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    expr        go to state 190
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 167

   32 expr: expr OR $@4 logicalTemp . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    expr        go to state 191
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 168

   63 methodcall: DOUPLEDOT ID '(' . elist ')'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    $default  reduce using rule 64 (elist)

    expr        go to state 62
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 192
    objectdef   go to state 34
    const       go to state 37


State 169

   54 member: lvalue '[' expr ']' .

    $default  reduce using rule 54 (member)


State 170

   62 normcall: '(' elist ')' .

    $default  reduce using rule 62 (normcall)


State 171

   56 member: call '[' expr ']' .

    $default  reduce using rule 56 (member)


State 172

   57 call: call '(' elist ')' .

    $default  reduce using rule 57 (call)


State 173

   99 idlist1: ',' . ID idlist1

    ID  shift, and go to state 193


State 174

   97 idlist: ID idlist1 .

    $default  reduce using rule 97 (idlist)


State 175

   87 funcargs: '(' idlist ')' .

    $default  reduce using rule 87 (funcargs)


State 176

   89 funcbody: block .

    $default  reduce using rule 89 (funcbody)


State 177

   83 funcdef: funcprefix funcargs funcblockstart funcbody . funcblockend

    $default  reduce using rule 90 (funcblockend)

    funcblockend  go to state 194


State 178

  100 ifstmt: ifprefix stmt elseprefix stmt .

    $default  reduce using rule 100 (ifstmt)


State 179

  106 whilesecond: '(' expr ')' .

    $default  reduce using rule 106 (whilesecond)


State 180

  113 loopstmt: loopstart stmt . loopend

    $default  reduce using rule 115 (loopend)

    loopend  go to state 195


State 181

  107 forstmt: forprefix N1 elist ')' . N2 loopstmt N3

    $default  reduce using rule 110 (N2)

    N2  go to state 196


State 182

  108 forprefix: FOR '(' elist ';' M . expr ';'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    expr        go to state 197
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 183

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   30     | expr . AND $@3 logicalTemp expr
   32     | expr . OR $@4 logicalTemp expr
   74 indexedelem: '{' expr ':' expr . '}'

    AND           shift, and go to state 73
    OR            shift, and go to state 74
    GREATEREQUAL  shift, and go to state 75
    LESSEQUAL     shift, and go to state 76
    EQUAL         shift, and go to state 77
    NOTEQUAL      shift, and go to state 78
    '>'           shift, and go to state 79
    '<'           shift, and go to state 80
    '+'           shift, and go to state 81
    '-'           shift, and go to state 82
    '*'           shift, and go to state 83
    '/'           shift, and go to state 84
    '%'           shift, and go to state 85
    '}'           shift, and go to state 198


State 184

   68 elist1: error expr elist1 .

    $default  reduce using rule 68 (elist1)


State 185

   67 elist1: ',' expr elist1 .

    $default  reduce using rule 67 (elist1)


State 186

   72 more: ',' indexedelem more .

    $default  reduce using rule 72 (more)


State 187

   59 call: '(' funcdef ')' '(' elist . ')'

    ')'  shift, and go to state 199


State 188

   77 block: '{' $@5 stmt1 '}' . $@6

    $default  reduce using rule 76 ($@6)

    $@6  go to state 200


State 189

   80 block: '{' $@7 '}' $@8 .

    $default  reduce using rule 80 (block)


State 190

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   30     | expr . AND $@3 logicalTemp expr
   30     | expr AND $@3 logicalTemp expr .
   32     | expr . OR $@4 logicalTemp expr

    GREATEREQUAL  shift, and go to state 75
    LESSEQUAL     shift, and go to state 76
    EQUAL         shift, and go to state 77
    NOTEQUAL      shift, and go to state 78
    '>'           shift, and go to state 79
    '<'           shift, and go to state 80
    '+'           shift, and go to state 81
    '-'           shift, and go to state 82
    '*'           shift, and go to state 83
    '/'           shift, and go to state 84
    '%'           shift, and go to state 85

    $default  reduce using rule 30 (expr)


State 191

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   30     | expr . AND $@3 logicalTemp expr
   32     | expr . OR $@4 logicalTemp expr
   32     | expr OR $@4 logicalTemp expr .

    AND           shift, and go to state 73
    GREATEREQUAL  shift, and go to state 75
    LESSEQUAL     shift, and go to state 76
    EQUAL         shift, and go to state 77
    NOTEQUAL      shift, and go to state 78
    '>'           shift, and go to state 79
    '<'           shift, and go to state 80
    '+'           shift, and go to state 81
    '-'           shift, and go to state 82
    '*'           shift, and go to state 83
    '/'           shift, and go to state 84
    '%'           shift, and go to state 85

    $default  reduce using rule 32 (expr)


State 192

   63 methodcall: DOUPLEDOT ID '(' elist . ')'

    ')'  shift, and go to state 201


State 193

   99 idlist1: ',' ID . idlist1

    ','  shift, and go to state 173

    $default  reduce using rule 98 (idlist1)

    idlist1  go to state 202


State 194

   83 funcdef: funcprefix funcargs funcblockstart funcbody funcblockend .

    $default  reduce using rule 83 (funcdef)


State 195

  113 loopstmt: loopstart stmt loopend .

    $default  reduce using rule 113 (loopstmt)


State 196

  107 forstmt: forprefix N1 elist ')' N2 . loopstmt N3

    $default  reduce using rule 114 (loopstart)

    loopstmt   go to state 203
    loopstart  go to state 153


State 197

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   30     | expr . AND $@3 logicalTemp expr
   32     | expr . OR $@4 logicalTemp expr
  108 forprefix: FOR '(' elist ';' M expr . ';'

    AND           shift, and go to state 73
    OR            shift, and go to state 74
    GREATEREQUAL  shift, and go to state 75
    LESSEQUAL     shift, and go to state 76
    EQUAL         shift, and go to state 77
    NOTEQUAL      shift, and go to state 78
    '>'           shift, and go to state 79
    '<'           shift, and go to state 80
    '+'           shift, and go to state 81
    '-'           shift, and go to state 82
    '*'           shift, and go to state 83
    '/'           shift, and go to state 84
    '%'           shift, and go to state 85
    ';'           shift, and go to state 204


State 198

   74 indexedelem: '{' expr ':' expr '}' .

    $default  reduce using rule 74 (indexedelem)


State 199

   59 call: '(' funcdef ')' '(' elist ')' .

    $default  reduce using rule 59 (call)


State 200

   77 block: '{' $@5 stmt1 '}' $@6 .

    $default  reduce using rule 77 (block)


State 201

   63 methodcall: DOUPLEDOT ID '(' elist ')' .

    $default  reduce using rule 63 (methodcall)


State 202

   99 idlist1: ',' ID idlist1 .

    $default  reduce using rule 99 (idlist1)


State 203

  107 forstmt: forprefix N1 elist ')' N2 loopstmt . N3

    $default  reduce using rule 111 (N3)

    N3  go to state 205


State 204

  108 forprefix: FOR '(' elist ';' M expr ';' .

    $default  reduce using rule 108 (forprefix)


State 205

  107 forstmt: forprefix N1 elist ')' N2 loopstmt N3 .

    $default  reduce using rule 107 (forstmt)
