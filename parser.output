Terminals unused in grammar

   DOUBLEDOT


State 99 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: stmt1
    2        | %empty

    3 stmt1: stmt1 stmt
    4      | stmt

    5 stmt: expr ';'
    6     | ifstmt
    7     | whilestmt
    8     | forstmt
    9     | returnstmt
   10     | BREAK ';'
   11     | CONTINUE ';'

   12 $@1: %empty

   13 $@2: %empty

   14 stmt: $@1 block $@2
   15     | funcdef
   16     | ';'

   17 expr: assignexpr
   18     | expr '+' expr
   19     | expr '-' expr
   20     | expr '*' expr
   21     | expr '/' expr
   22     | expr '%' expr
   23     | expr '>' expr
   24     | expr '<' expr
   25     | expr GREATEREQUAL expr
   26     | expr LESSEQUAL expr
   27     | expr EQUAL expr
   28     | expr NOTEQUAL expr
   29     | expr AND expr
   30     | expr OR expr
   31     | term

   32 term: '(' expr ')'
   33     | '-' expr
   34     | NOT expr
   35     | PLUSPLUS lvalue
   36     | lvalue PLUSPLUS
   37     | MINUSMINUS lvalue
   38     | lvalue MINUSMINUS
   39     | primary

   40 assignexpr: lvalue '=' expr

   41 primary: lvalue
   42        | call
   43        | objectdef
   44        | '(' funcdef ')'
   45        | const

   46 lvalue: ID
   47       | LOCAL ID
   48       | SCOPEOP ID
   49       | member

   50 member: lvalue '.' ID
   51       | lvalue '[' expr ']'
   52       | call '.' ID
   53       | call '[' expr ']'

   54 call: call '(' elist ')'
   55     | lvalue callsuffix
   56     | '(' funcdef ')' '(' elist ')'

   57 callsuffix: normcall
   58           | methodcall

   59 normcall: '(' elist ')'

   60 methodcall: DOUPLEDOT ID '(' elist ')'

   61 elist: %empty
   62      | expr elist1

   63 elist1: %empty
   64       | ',' expr elist1
   65       | error expr elist1

   66 objectdef: '[' elist ']'
   67          | '[' indexed ']'

   68 indexed: indexedelem more

   69 more: ',' indexedelem more
   70     | %empty

   71 indexedelem: '{' expr ':' expr '}'

   72 $@3: %empty

   73 $@4: %empty

   74 block: '{' $@3 stmt1 '}' $@4

   75 $@5: %empty

   76 $@6: %empty

   77 block: '{' $@5 '}' $@6
   78      | error stmt1 '}'
   79      | error '}'

   80 funcdef: K funcprefix funcargs funcblockstart funcbody funcblockend

   81 funcname: ID
   82         | %empty

   83 funcprefix: FUNCTION funcname

   84 K: %empty

   85 funcargs: '(' idlist ')'

   86 funcblockstart: %empty

   87 funcbody: block

   88 funcblockend: %empty

   89 const: NUMBER
   90      | STRING
   91      | NIL
   92      | TRUE
   93      | FALSE

   94 idlist: %empty
   95       | ID idlist1

   96 idlist1: %empty
   97        | ',' ID idlist1

   98 ifstmt: ifprefix stmt elseprefix stmt
   99       | ifprefix stmt

  100 ifprefix: IF '(' expr ')'

  101 elseprefix: ELSE

  102 whilestmt: whilestart whilesecond loopstmt

  103 whilestart: WHILE

  104 whilesecond: '(' expr ')'

  105 forstmt: forprefix N1 elist ')' N2 loopstmt N3

  106 forprefix: FOR '(' elist ';' M expr ';'

  107 N1: %empty

  108 N2: %empty

  109 N3: %empty

  110 M: %empty

  111 loopstmt: loopstart stmt loopend

  112 loopstart: %empty

  113 loopend: %empty

  114 returnstmt: RETURN ';'
  115           | RETURN expr ';'


Terminals, with rules where they appear

$end (0) 0
'%' (37) 22
'(' (40) 32 44 54 56 59 60 85 100 104 106
')' (41) 32 44 54 56 59 60 85 100 104 105
'*' (42) 20
'+' (43) 18
',' (44) 64 69 97
'-' (45) 19 33
'.' (46) 50 52
'/' (47) 21
':' (58) 71
';' (59) 5 10 11 16 106 114 115
'<' (60) 24
'=' (61) 40
'>' (62) 23
'[' (91) 51 53 66 67
']' (93) 51 53 66 67
'{' (123) 71 74 77
'}' (125) 71 74 77 78 79
error (256) 65 78 79
ID (258) 46 47 48 50 52 60 81 95 97
NUMBER (259) 89
STRING (260) 90
BREAK (261) 10
CONTINUE (262) 11
AND (263) 29
OR (264) 30
NOT (265) 34
GREATEREQUAL (266) 25
LESSEQUAL (267) 26
EQUAL (268) 27
NOTEQUAL (269) 28
PLUSPLUS (270) 35 36
MINUSMINUS (271) 37 38
LOCAL (272) 47
SCOPEOP (273) 48
DOUPLEDOT (274) 60
FUNCTION (275) 83
NIL (276) 91
TRUE (277) 92
FALSE (278) 93
IF (279) 100
ELSE (280) 101
WHILE (281) 103
FOR (282) 106
RETURN (283) 114 115
UMINUS (284)
DOUBLEDOT (285)


Nonterminals, with rules where they appear

$accept (49)
    on left: 0
program (50)
    on left: 1 2, on right: 0
stmt1 (51)
    on left: 3 4, on right: 1 3 74 78
stmt (52)
    on left: 5 6 7 8 9 10 11 14 15 16, on right: 3 4 98 99 111
$@1 (53)
    on left: 12, on right: 14
$@2 (54)
    on left: 13, on right: 14
expr (55)
    on left: 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31, on right:
    5 18 19 20 21 22 23 24 25 26 27 28 29 30 32 33 34 40 51 53 62 64
    65 71 100 104 106 115
term (56)
    on left: 32 33 34 35 36 37 38 39, on right: 31
assignexpr (57)
    on left: 40, on right: 17
primary (58)
    on left: 41 42 43 44 45, on right: 39
lvalue (59)
    on left: 46 47 48 49, on right: 35 36 37 38 40 41 50 51 55
member (60)
    on left: 50 51 52 53, on right: 49
call (61)
    on left: 54 55 56, on right: 42 52 53 54
callsuffix (62)
    on left: 57 58, on right: 55
normcall (63)
    on left: 59, on right: 57
methodcall (64)
    on left: 60, on right: 58
elist (65)
    on left: 61 62, on right: 54 56 59 60 66 105 106
elist1 (66)
    on left: 63 64 65, on right: 62 64 65
objectdef (67)
    on left: 66 67, on right: 43
indexed (68)
    on left: 68, on right: 67
more (69)
    on left: 69 70, on right: 68 69
indexedelem (70)
    on left: 71, on right: 68 69
block (71)
    on left: 74 77 78 79, on right: 14 87
$@3 (72)
    on left: 72, on right: 74
$@4 (73)
    on left: 73, on right: 74
$@5 (74)
    on left: 75, on right: 77
$@6 (75)
    on left: 76, on right: 77
funcdef (76)
    on left: 80, on right: 15 44 56
funcname (77)
    on left: 81 82, on right: 83
funcprefix (78)
    on left: 83, on right: 80
K (79)
    on left: 84, on right: 80
funcargs (80)
    on left: 85, on right: 80
funcblockstart (81)
    on left: 86, on right: 80
funcbody (82)
    on left: 87, on right: 80
funcblockend (83)
    on left: 88, on right: 80
const (84)
    on left: 89 90 91 92 93, on right: 45
idlist (85)
    on left: 94 95, on right: 85
idlist1 (86)
    on left: 96 97, on right: 95 97
ifstmt (87)
    on left: 98 99, on right: 6
ifprefix (88)
    on left: 100, on right: 98 99
elseprefix (89)
    on left: 101, on right: 98
whilestmt (90)
    on left: 102, on right: 7
whilestart (91)
    on left: 103, on right: 102
whilesecond (92)
    on left: 104, on right: 102
forstmt (93)
    on left: 105, on right: 8
forprefix (94)
    on left: 106, on right: 105
N1 (95)
    on left: 107, on right: 105
N2 (96)
    on left: 108, on right: 105
N3 (97)
    on left: 109, on right: 105
M (98)
    on left: 110, on right: 106
loopstmt (99)
    on left: 111, on right: 102 105
loopstart (100)
    on left: 112, on right: 111
loopend (101)
    on left: 113, on right: 111
returnstmt (102)
    on left: 114 115, on right: 9


State 0

    0 $accept: . program $end

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    CONTINUE    shift, and go to state 5
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 11
    TRUE        shift, and go to state 12
    FALSE       shift, and go to state 13
    IF          shift, and go to state 14
    WHILE       shift, and go to state 15
    FOR         shift, and go to state 16
    RETURN      shift, and go to state 17
    '-'         shift, and go to state 18
    '['         shift, and go to state 19
    '('         shift, and go to state 20
    ';'         shift, and go to state 21

    $end      reduce using rule 2 (program)
    FUNCTION  reduce using rule 84 (K)
    $default  reduce using rule 12 ($@1)

    program     go to state 22
    stmt1       go to state 23
    stmt        go to state 24
    $@1         go to state 25
    expr        go to state 26
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    funcdef     go to state 34
    K           go to state 35
    const       go to state 36
    ifstmt      go to state 37
    ifprefix    go to state 38
    whilestmt   go to state 39
    whilestart  go to state 40
    forstmt     go to state 41
    forprefix   go to state 42
    returnstmt  go to state 43


State 1

   46 lvalue: ID .

    $default  reduce using rule 46 (lvalue)


State 2

   89 const: NUMBER .

    $default  reduce using rule 89 (const)


State 3

   90 const: STRING .

    $default  reduce using rule 90 (const)


State 4

   10 stmt: BREAK . ';'

    ';'  shift, and go to state 44


State 5

   11 stmt: CONTINUE . ';'

    ';'  shift, and go to state 45


State 6

   34 term: NOT . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 11
    TRUE        shift, and go to state 12
    FALSE       shift, and go to state 13
    '-'         shift, and go to state 18
    '['         shift, and go to state 19
    '('         shift, and go to state 20

    expr        go to state 46
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    const       go to state 36


State 7

   35 term: PLUSPLUS . lvalue

    ID       shift, and go to state 1
    LOCAL    shift, and go to state 9
    SCOPEOP  shift, and go to state 10
    '('      shift, and go to state 47

    lvalue  go to state 48
    member  go to state 31
    call    go to state 49


State 8

   37 term: MINUSMINUS . lvalue

    ID       shift, and go to state 1
    LOCAL    shift, and go to state 9
    SCOPEOP  shift, and go to state 10
    '('      shift, and go to state 47

    lvalue  go to state 50
    member  go to state 31
    call    go to state 49


State 9

   47 lvalue: LOCAL . ID

    ID  shift, and go to state 51


State 10

   48 lvalue: SCOPEOP . ID

    ID  shift, and go to state 52


State 11

   91 const: NIL .

    $default  reduce using rule 91 (const)


State 12

   92 const: TRUE .

    $default  reduce using rule 92 (const)


State 13

   93 const: FALSE .

    $default  reduce using rule 93 (const)


State 14

  100 ifprefix: IF . '(' expr ')'

    '('  shift, and go to state 53


State 15

  103 whilestart: WHILE .

    $default  reduce using rule 103 (whilestart)


State 16

  106 forprefix: FOR . '(' elist ';' M expr ';'

    '('  shift, and go to state 54


State 17

  114 returnstmt: RETURN . ';'
  115           | RETURN . expr ';'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 11
    TRUE        shift, and go to state 12
    FALSE       shift, and go to state 13
    '-'         shift, and go to state 18
    '['         shift, and go to state 19
    '('         shift, and go to state 20
    ';'         shift, and go to state 55

    expr        go to state 56
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    const       go to state 36


State 18

   33 term: '-' . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 11
    TRUE        shift, and go to state 12
    FALSE       shift, and go to state 13
    '-'         shift, and go to state 18
    '['         shift, and go to state 19
    '('         shift, and go to state 20

    expr        go to state 57
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    const       go to state 36


State 19

   66 objectdef: '[' . elist ']'
   67          | '[' . indexed ']'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 11
    TRUE        shift, and go to state 12
    FALSE       shift, and go to state 13
    '-'         shift, and go to state 18
    '['         shift, and go to state 19
    '('         shift, and go to state 20
    '{'         shift, and go to state 58

    $default  reduce using rule 61 (elist)

    expr         go to state 59
    term         go to state 27
    assignexpr   go to state 28
    primary      go to state 29
    lvalue       go to state 30
    member       go to state 31
    call         go to state 32
    elist        go to state 60
    objectdef    go to state 33
    indexed      go to state 61
    indexedelem  go to state 62
    const        go to state 36


State 20

   32 term: '(' . expr ')'
   44 primary: '(' . funcdef ')'
   56 call: '(' . funcdef ')' '(' elist ')'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 11
    TRUE        shift, and go to state 12
    FALSE       shift, and go to state 13
    '-'         shift, and go to state 18
    '['         shift, and go to state 19
    '('         shift, and go to state 20

    $default  reduce using rule 84 (K)

    expr        go to state 63
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    funcdef     go to state 64
    K           go to state 35
    const       go to state 36


State 21

   16 stmt: ';' .

    $default  reduce using rule 16 (stmt)


State 22

    0 $accept: program . $end

    $end  shift, and go to state 65


State 23

    1 program: stmt1 .
    3 stmt1: stmt1 . stmt

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    CONTINUE    shift, and go to state 5
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 11
    TRUE        shift, and go to state 12
    FALSE       shift, and go to state 13
    IF          shift, and go to state 14
    WHILE       shift, and go to state 15
    FOR         shift, and go to state 16
    RETURN      shift, and go to state 17
    '-'         shift, and go to state 18
    '['         shift, and go to state 19
    '('         shift, and go to state 20
    ';'         shift, and go to state 21

    $end      reduce using rule 1 (program)
    FUNCTION  reduce using rule 84 (K)
    $default  reduce using rule 12 ($@1)

    stmt        go to state 66
    $@1         go to state 25
    expr        go to state 26
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    funcdef     go to state 34
    K           go to state 35
    const       go to state 36
    ifstmt      go to state 37
    ifprefix    go to state 38
    whilestmt   go to state 39
    whilestart  go to state 40
    forstmt     go to state 41
    forprefix   go to state 42
    returnstmt  go to state 43


State 24

    4 stmt1: stmt .

    $default  reduce using rule 4 (stmt1)


State 25

   14 stmt: $@1 . block $@2

    error  shift, and go to state 67
    '{'    shift, and go to state 68

    block  go to state 69


State 26

    5 stmt: expr . ';'
   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr

    AND           shift, and go to state 70
    OR            shift, and go to state 71
    GREATEREQUAL  shift, and go to state 72
    LESSEQUAL     shift, and go to state 73
    EQUAL         shift, and go to state 74
    NOTEQUAL      shift, and go to state 75
    '>'           shift, and go to state 76
    '<'           shift, and go to state 77
    '+'           shift, and go to state 78
    '-'           shift, and go to state 79
    '*'           shift, and go to state 80
    '/'           shift, and go to state 81
    '%'           shift, and go to state 82
    ';'           shift, and go to state 83


State 27

   31 expr: term .

    $default  reduce using rule 31 (expr)


State 28

   17 expr: assignexpr .

    $default  reduce using rule 17 (expr)


State 29

   39 term: primary .

    $default  reduce using rule 39 (term)


State 30

   36 term: lvalue . PLUSPLUS
   38     | lvalue . MINUSMINUS
   40 assignexpr: lvalue . '=' expr
   41 primary: lvalue .
   50 member: lvalue . '.' ID
   51       | lvalue . '[' expr ']'
   55 call: lvalue . callsuffix

    PLUSPLUS    shift, and go to state 84
    MINUSMINUS  shift, and go to state 85
    DOUPLEDOT   shift, and go to state 86
    '='         shift, and go to state 87
    '.'         shift, and go to state 88
    '['         shift, and go to state 89
    '('         shift, and go to state 90

    $default  reduce using rule 41 (primary)

    callsuffix  go to state 91
    normcall    go to state 92
    methodcall  go to state 93


State 31

   49 lvalue: member .

    $default  reduce using rule 49 (lvalue)


State 32

   42 primary: call .
   52 member: call . '.' ID
   53       | call . '[' expr ']'
   54 call: call . '(' elist ')'

    '.'  shift, and go to state 94
    '['  shift, and go to state 95
    '('  shift, and go to state 96

    $default  reduce using rule 42 (primary)


State 33

   43 primary: objectdef .

    $default  reduce using rule 43 (primary)


State 34

   15 stmt: funcdef .

    $default  reduce using rule 15 (stmt)


State 35

   80 funcdef: K . funcprefix funcargs funcblockstart funcbody funcblockend

    FUNCTION  shift, and go to state 97

    funcprefix  go to state 98


State 36

   45 primary: const .

    $default  reduce using rule 45 (primary)


State 37

    6 stmt: ifstmt .

    $default  reduce using rule 6 (stmt)


State 38

   98 ifstmt: ifprefix . stmt elseprefix stmt
   99       | ifprefix . stmt

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    CONTINUE    shift, and go to state 5
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 11
    TRUE        shift, and go to state 12
    FALSE       shift, and go to state 13
    IF          shift, and go to state 14
    WHILE       shift, and go to state 15
    FOR         shift, and go to state 16
    RETURN      shift, and go to state 17
    '-'         shift, and go to state 18
    '['         shift, and go to state 19
    '('         shift, and go to state 20
    ';'         shift, and go to state 21

    FUNCTION  reduce using rule 84 (K)
    $default  reduce using rule 12 ($@1)

    stmt        go to state 99
    $@1         go to state 25
    expr        go to state 26
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    funcdef     go to state 34
    K           go to state 35
    const       go to state 36
    ifstmt      go to state 37
    ifprefix    go to state 38
    whilestmt   go to state 39
    whilestart  go to state 40
    forstmt     go to state 41
    forprefix   go to state 42
    returnstmt  go to state 43


State 39

    7 stmt: whilestmt .

    $default  reduce using rule 7 (stmt)


State 40

  102 whilestmt: whilestart . whilesecond loopstmt

    '('  shift, and go to state 100

    whilesecond  go to state 101


State 41

    8 stmt: forstmt .

    $default  reduce using rule 8 (stmt)


State 42

  105 forstmt: forprefix . N1 elist ')' N2 loopstmt N3

    $default  reduce using rule 107 (N1)

    N1  go to state 102


State 43

    9 stmt: returnstmt .

    $default  reduce using rule 9 (stmt)


State 44

   10 stmt: BREAK ';' .

    $default  reduce using rule 10 (stmt)


State 45

   11 stmt: CONTINUE ';' .

    $default  reduce using rule 11 (stmt)


State 46

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr
   34 term: NOT expr .

    $default  reduce using rule 34 (term)


State 47

   56 call: '(' . funcdef ')' '(' elist ')'

    $default  reduce using rule 84 (K)

    funcdef  go to state 103
    K        go to state 35


State 48

   35 term: PLUSPLUS lvalue .
   50 member: lvalue . '.' ID
   51       | lvalue . '[' expr ']'
   55 call: lvalue . callsuffix

    DOUPLEDOT  shift, and go to state 86
    '.'        shift, and go to state 88
    '['        shift, and go to state 89
    '('        shift, and go to state 90

    $default  reduce using rule 35 (term)

    callsuffix  go to state 91
    normcall    go to state 92
    methodcall  go to state 93


State 49

   52 member: call . '.' ID
   53       | call . '[' expr ']'
   54 call: call . '(' elist ')'

    '.'  shift, and go to state 94
    '['  shift, and go to state 95
    '('  shift, and go to state 96


State 50

   37 term: MINUSMINUS lvalue .
   50 member: lvalue . '.' ID
   51       | lvalue . '[' expr ']'
   55 call: lvalue . callsuffix

    DOUPLEDOT  shift, and go to state 86
    '.'        shift, and go to state 88
    '['        shift, and go to state 89
    '('        shift, and go to state 90

    $default  reduce using rule 37 (term)

    callsuffix  go to state 91
    normcall    go to state 92
    methodcall  go to state 93


State 51

   47 lvalue: LOCAL ID .

    $default  reduce using rule 47 (lvalue)


State 52

   48 lvalue: SCOPEOP ID .

    $default  reduce using rule 48 (lvalue)


State 53

  100 ifprefix: IF '(' . expr ')'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 11
    TRUE        shift, and go to state 12
    FALSE       shift, and go to state 13
    '-'         shift, and go to state 18
    '['         shift, and go to state 19
    '('         shift, and go to state 20

    expr        go to state 104
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    const       go to state 36


State 54

  106 forprefix: FOR '(' . elist ';' M expr ';'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 11
    TRUE        shift, and go to state 12
    FALSE       shift, and go to state 13
    '-'         shift, and go to state 18
    '['         shift, and go to state 19
    '('         shift, and go to state 20

    $default  reduce using rule 61 (elist)

    expr        go to state 59
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    elist       go to state 105
    objectdef   go to state 33
    const       go to state 36


State 55

  114 returnstmt: RETURN ';' .

    $default  reduce using rule 114 (returnstmt)


State 56

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr
  115 returnstmt: RETURN expr . ';'

    AND           shift, and go to state 70
    OR            shift, and go to state 71
    GREATEREQUAL  shift, and go to state 72
    LESSEQUAL     shift, and go to state 73
    EQUAL         shift, and go to state 74
    NOTEQUAL      shift, and go to state 75
    '>'           shift, and go to state 76
    '<'           shift, and go to state 77
    '+'           shift, and go to state 78
    '-'           shift, and go to state 79
    '*'           shift, and go to state 80
    '/'           shift, and go to state 81
    '%'           shift, and go to state 82
    ';'           shift, and go to state 106


State 57

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr
   33 term: '-' expr .

    $default  reduce using rule 33 (term)


State 58

   71 indexedelem: '{' . expr ':' expr '}'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 11
    TRUE        shift, and go to state 12
    FALSE       shift, and go to state 13
    '-'         shift, and go to state 18
    '['         shift, and go to state 19
    '('         shift, and go to state 20

    expr        go to state 107
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    const       go to state 36


State 59

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr
   62 elist: expr . elist1

    error         shift, and go to state 108
    AND           shift, and go to state 70
    OR            shift, and go to state 71
    GREATEREQUAL  shift, and go to state 72
    LESSEQUAL     shift, and go to state 73
    EQUAL         shift, and go to state 74
    NOTEQUAL      shift, and go to state 75
    '>'           shift, and go to state 76
    '<'           shift, and go to state 77
    '+'           shift, and go to state 78
    '-'           shift, and go to state 79
    '*'           shift, and go to state 80
    '/'           shift, and go to state 81
    '%'           shift, and go to state 82
    ','           shift, and go to state 109

    ']'  reduce using rule 63 (elist1)
    ')'  reduce using rule 63 (elist1)
    ';'  reduce using rule 63 (elist1)

    elist1  go to state 110


State 60

   66 objectdef: '[' elist . ']'

    ']'  shift, and go to state 111


State 61

   67 objectdef: '[' indexed . ']'

    ']'  shift, and go to state 112


State 62

   68 indexed: indexedelem . more

    ','  shift, and go to state 113

    $default  reduce using rule 70 (more)

    more  go to state 114


State 63

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr
   32 term: '(' expr . ')'

    AND           shift, and go to state 70
    OR            shift, and go to state 71
    GREATEREQUAL  shift, and go to state 72
    LESSEQUAL     shift, and go to state 73
    EQUAL         shift, and go to state 74
    NOTEQUAL      shift, and go to state 75
    '>'           shift, and go to state 76
    '<'           shift, and go to state 77
    '+'           shift, and go to state 78
    '-'           shift, and go to state 79
    '*'           shift, and go to state 80
    '/'           shift, and go to state 81
    '%'           shift, and go to state 82
    ')'           shift, and go to state 115


State 64

   44 primary: '(' funcdef . ')'
   56 call: '(' funcdef . ')' '(' elist ')'

    ')'  shift, and go to state 116


State 65

    0 $accept: program $end .

    $default  accept


State 66

    3 stmt1: stmt1 stmt .

    $default  reduce using rule 3 (stmt1)


State 67

   78 block: error . stmt1 '}'
   79      | error . '}'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    CONTINUE    shift, and go to state 5
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 11
    TRUE        shift, and go to state 12
    FALSE       shift, and go to state 13
    IF          shift, and go to state 14
    WHILE       shift, and go to state 15
    FOR         shift, and go to state 16
    RETURN      shift, and go to state 17
    '-'         shift, and go to state 18
    '['         shift, and go to state 19
    '('         shift, and go to state 20
    ';'         shift, and go to state 21
    '}'         shift, and go to state 117

    FUNCTION  reduce using rule 84 (K)
    $default  reduce using rule 12 ($@1)

    stmt1       go to state 118
    stmt        go to state 24
    $@1         go to state 25
    expr        go to state 26
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    funcdef     go to state 34
    K           go to state 35
    const       go to state 36
    ifstmt      go to state 37
    ifprefix    go to state 38
    whilestmt   go to state 39
    whilestart  go to state 40
    forstmt     go to state 41
    forprefix   go to state 42
    returnstmt  go to state 43


State 68

   74 block: '{' . $@3 stmt1 '}' $@4
   77      | '{' . $@5 '}' $@6

    '}'       reduce using rule 75 ($@5)
    $default  reduce using rule 72 ($@3)

    $@3  go to state 119
    $@5  go to state 120


State 69

   14 stmt: $@1 block . $@2

    $default  reduce using rule 13 ($@2)

    $@2  go to state 121


State 70

   29 expr: expr AND . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 11
    TRUE        shift, and go to state 12
    FALSE       shift, and go to state 13
    '-'         shift, and go to state 18
    '['         shift, and go to state 19
    '('         shift, and go to state 20

    expr        go to state 122
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    const       go to state 36


State 71

   30 expr: expr OR . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 11
    TRUE        shift, and go to state 12
    FALSE       shift, and go to state 13
    '-'         shift, and go to state 18
    '['         shift, and go to state 19
    '('         shift, and go to state 20

    expr        go to state 123
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    const       go to state 36


State 72

   25 expr: expr GREATEREQUAL . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 11
    TRUE        shift, and go to state 12
    FALSE       shift, and go to state 13
    '-'         shift, and go to state 18
    '['         shift, and go to state 19
    '('         shift, and go to state 20

    expr        go to state 124
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    const       go to state 36


State 73

   26 expr: expr LESSEQUAL . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 11
    TRUE        shift, and go to state 12
    FALSE       shift, and go to state 13
    '-'         shift, and go to state 18
    '['         shift, and go to state 19
    '('         shift, and go to state 20

    expr        go to state 125
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    const       go to state 36


State 74

   27 expr: expr EQUAL . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 11
    TRUE        shift, and go to state 12
    FALSE       shift, and go to state 13
    '-'         shift, and go to state 18
    '['         shift, and go to state 19
    '('         shift, and go to state 20

    expr        go to state 126
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    const       go to state 36


State 75

   28 expr: expr NOTEQUAL . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 11
    TRUE        shift, and go to state 12
    FALSE       shift, and go to state 13
    '-'         shift, and go to state 18
    '['         shift, and go to state 19
    '('         shift, and go to state 20

    expr        go to state 127
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    const       go to state 36


State 76

   23 expr: expr '>' . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 11
    TRUE        shift, and go to state 12
    FALSE       shift, and go to state 13
    '-'         shift, and go to state 18
    '['         shift, and go to state 19
    '('         shift, and go to state 20

    expr        go to state 128
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    const       go to state 36


State 77

   24 expr: expr '<' . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 11
    TRUE        shift, and go to state 12
    FALSE       shift, and go to state 13
    '-'         shift, and go to state 18
    '['         shift, and go to state 19
    '('         shift, and go to state 20

    expr        go to state 129
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    const       go to state 36


State 78

   18 expr: expr '+' . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 11
    TRUE        shift, and go to state 12
    FALSE       shift, and go to state 13
    '-'         shift, and go to state 18
    '['         shift, and go to state 19
    '('         shift, and go to state 20

    expr        go to state 130
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    const       go to state 36


State 79

   19 expr: expr '-' . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 11
    TRUE        shift, and go to state 12
    FALSE       shift, and go to state 13
    '-'         shift, and go to state 18
    '['         shift, and go to state 19
    '('         shift, and go to state 20

    expr        go to state 131
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    const       go to state 36


State 80

   20 expr: expr '*' . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 11
    TRUE        shift, and go to state 12
    FALSE       shift, and go to state 13
    '-'         shift, and go to state 18
    '['         shift, and go to state 19
    '('         shift, and go to state 20

    expr        go to state 132
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    const       go to state 36


State 81

   21 expr: expr '/' . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 11
    TRUE        shift, and go to state 12
    FALSE       shift, and go to state 13
    '-'         shift, and go to state 18
    '['         shift, and go to state 19
    '('         shift, and go to state 20

    expr        go to state 133
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    const       go to state 36


State 82

   22 expr: expr '%' . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 11
    TRUE        shift, and go to state 12
    FALSE       shift, and go to state 13
    '-'         shift, and go to state 18
    '['         shift, and go to state 19
    '('         shift, and go to state 20

    expr        go to state 134
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    const       go to state 36


State 83

    5 stmt: expr ';' .

    $default  reduce using rule 5 (stmt)


State 84

   36 term: lvalue PLUSPLUS .

    $default  reduce using rule 36 (term)


State 85

   38 term: lvalue MINUSMINUS .

    $default  reduce using rule 38 (term)


State 86

   60 methodcall: DOUPLEDOT . ID '(' elist ')'

    ID  shift, and go to state 135


State 87

   40 assignexpr: lvalue '=' . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 11
    TRUE        shift, and go to state 12
    FALSE       shift, and go to state 13
    '-'         shift, and go to state 18
    '['         shift, and go to state 19
    '('         shift, and go to state 20

    expr        go to state 136
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    const       go to state 36


State 88

   50 member: lvalue '.' . ID

    ID  shift, and go to state 137


State 89

   51 member: lvalue '[' . expr ']'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 11
    TRUE        shift, and go to state 12
    FALSE       shift, and go to state 13
    '-'         shift, and go to state 18
    '['         shift, and go to state 19
    '('         shift, and go to state 20

    expr        go to state 138
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    const       go to state 36


State 90

   59 normcall: '(' . elist ')'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 11
    TRUE        shift, and go to state 12
    FALSE       shift, and go to state 13
    '-'         shift, and go to state 18
    '['         shift, and go to state 19
    '('         shift, and go to state 20

    $default  reduce using rule 61 (elist)

    expr        go to state 59
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    elist       go to state 139
    objectdef   go to state 33
    const       go to state 36


State 91

   55 call: lvalue callsuffix .

    $default  reduce using rule 55 (call)


State 92

   57 callsuffix: normcall .

    $default  reduce using rule 57 (callsuffix)


State 93

   58 callsuffix: methodcall .

    $default  reduce using rule 58 (callsuffix)


State 94

   52 member: call '.' . ID

    ID  shift, and go to state 140


State 95

   53 member: call '[' . expr ']'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 11
    TRUE        shift, and go to state 12
    FALSE       shift, and go to state 13
    '-'         shift, and go to state 18
    '['         shift, and go to state 19
    '('         shift, and go to state 20

    expr        go to state 141
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    const       go to state 36


State 96

   54 call: call '(' . elist ')'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 11
    TRUE        shift, and go to state 12
    FALSE       shift, and go to state 13
    '-'         shift, and go to state 18
    '['         shift, and go to state 19
    '('         shift, and go to state 20

    $default  reduce using rule 61 (elist)

    expr        go to state 59
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    elist       go to state 142
    objectdef   go to state 33
    const       go to state 36


State 97

   83 funcprefix: FUNCTION . funcname

    ID  shift, and go to state 143

    $default  reduce using rule 82 (funcname)

    funcname  go to state 144


State 98

   80 funcdef: K funcprefix . funcargs funcblockstart funcbody funcblockend

    '('  shift, and go to state 145

    funcargs  go to state 146


State 99

   98 ifstmt: ifprefix stmt . elseprefix stmt
   99       | ifprefix stmt .

    ELSE  shift, and go to state 147

    ELSE      [reduce using rule 99 (ifstmt)]
    $default  reduce using rule 99 (ifstmt)

    elseprefix  go to state 148


State 100

  104 whilesecond: '(' . expr ')'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 11
    TRUE        shift, and go to state 12
    FALSE       shift, and go to state 13
    '-'         shift, and go to state 18
    '['         shift, and go to state 19
    '('         shift, and go to state 20

    expr        go to state 149
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    const       go to state 36


State 101

  102 whilestmt: whilestart whilesecond . loopstmt

    $default  reduce using rule 112 (loopstart)

    loopstmt   go to state 150
    loopstart  go to state 151


State 102

  105 forstmt: forprefix N1 . elist ')' N2 loopstmt N3

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 11
    TRUE        shift, and go to state 12
    FALSE       shift, and go to state 13
    '-'         shift, and go to state 18
    '['         shift, and go to state 19
    '('         shift, and go to state 20

    $default  reduce using rule 61 (elist)

    expr        go to state 59
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    elist       go to state 152
    objectdef   go to state 33
    const       go to state 36


State 103

   56 call: '(' funcdef . ')' '(' elist ')'

    ')'  shift, and go to state 153


State 104

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr
  100 ifprefix: IF '(' expr . ')'

    AND           shift, and go to state 70
    OR            shift, and go to state 71
    GREATEREQUAL  shift, and go to state 72
    LESSEQUAL     shift, and go to state 73
    EQUAL         shift, and go to state 74
    NOTEQUAL      shift, and go to state 75
    '>'           shift, and go to state 76
    '<'           shift, and go to state 77
    '+'           shift, and go to state 78
    '-'           shift, and go to state 79
    '*'           shift, and go to state 80
    '/'           shift, and go to state 81
    '%'           shift, and go to state 82
    ')'           shift, and go to state 154


State 105

  106 forprefix: FOR '(' elist . ';' M expr ';'

    ';'  shift, and go to state 155


State 106

  115 returnstmt: RETURN expr ';' .

    $default  reduce using rule 115 (returnstmt)


State 107

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr
   71 indexedelem: '{' expr . ':' expr '}'

    AND           shift, and go to state 70
    OR            shift, and go to state 71
    GREATEREQUAL  shift, and go to state 72
    LESSEQUAL     shift, and go to state 73
    EQUAL         shift, and go to state 74
    NOTEQUAL      shift, and go to state 75
    '>'           shift, and go to state 76
    '<'           shift, and go to state 77
    '+'           shift, and go to state 78
    '-'           shift, and go to state 79
    '*'           shift, and go to state 80
    '/'           shift, and go to state 81
    '%'           shift, and go to state 82
    ':'           shift, and go to state 156


State 108

   65 elist1: error . expr elist1

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 11
    TRUE        shift, and go to state 12
    FALSE       shift, and go to state 13
    '-'         shift, and go to state 18
    '['         shift, and go to state 19
    '('         shift, and go to state 20

    expr        go to state 157
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    const       go to state 36


State 109

   64 elist1: ',' . expr elist1

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 11
    TRUE        shift, and go to state 12
    FALSE       shift, and go to state 13
    '-'         shift, and go to state 18
    '['         shift, and go to state 19
    '('         shift, and go to state 20

    expr        go to state 158
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    const       go to state 36


State 110

   62 elist: expr elist1 .

    $default  reduce using rule 62 (elist)


State 111

   66 objectdef: '[' elist ']' .

    $default  reduce using rule 66 (objectdef)


State 112

   67 objectdef: '[' indexed ']' .

    $default  reduce using rule 67 (objectdef)


State 113

   69 more: ',' . indexedelem more

    '{'  shift, and go to state 58

    indexedelem  go to state 159


State 114

   68 indexed: indexedelem more .

    $default  reduce using rule 68 (indexed)


State 115

   32 term: '(' expr ')' .

    $default  reduce using rule 32 (term)


State 116

   44 primary: '(' funcdef ')' .
   56 call: '(' funcdef ')' . '(' elist ')'

    '('  shift, and go to state 160

    $default  reduce using rule 44 (primary)


State 117

   79 block: error '}' .

    $default  reduce using rule 79 (block)


State 118

    3 stmt1: stmt1 . stmt
   78 block: error stmt1 . '}'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    CONTINUE    shift, and go to state 5
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 11
    TRUE        shift, and go to state 12
    FALSE       shift, and go to state 13
    IF          shift, and go to state 14
    WHILE       shift, and go to state 15
    FOR         shift, and go to state 16
    RETURN      shift, and go to state 17
    '-'         shift, and go to state 18
    '['         shift, and go to state 19
    '('         shift, and go to state 20
    ';'         shift, and go to state 21
    '}'         shift, and go to state 161

    FUNCTION  reduce using rule 84 (K)
    $default  reduce using rule 12 ($@1)

    stmt        go to state 66
    $@1         go to state 25
    expr        go to state 26
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    funcdef     go to state 34
    K           go to state 35
    const       go to state 36
    ifstmt      go to state 37
    ifprefix    go to state 38
    whilestmt   go to state 39
    whilestart  go to state 40
    forstmt     go to state 41
    forprefix   go to state 42
    returnstmt  go to state 43


State 119

   74 block: '{' $@3 . stmt1 '}' $@4

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    CONTINUE    shift, and go to state 5
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 11
    TRUE        shift, and go to state 12
    FALSE       shift, and go to state 13
    IF          shift, and go to state 14
    WHILE       shift, and go to state 15
    FOR         shift, and go to state 16
    RETURN      shift, and go to state 17
    '-'         shift, and go to state 18
    '['         shift, and go to state 19
    '('         shift, and go to state 20
    ';'         shift, and go to state 21

    FUNCTION  reduce using rule 84 (K)
    $default  reduce using rule 12 ($@1)

    stmt1       go to state 162
    stmt        go to state 24
    $@1         go to state 25
    expr        go to state 26
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    funcdef     go to state 34
    K           go to state 35
    const       go to state 36
    ifstmt      go to state 37
    ifprefix    go to state 38
    whilestmt   go to state 39
    whilestart  go to state 40
    forstmt     go to state 41
    forprefix   go to state 42
    returnstmt  go to state 43


State 120

   77 block: '{' $@5 . '}' $@6

    '}'  shift, and go to state 163


State 121

   14 stmt: $@1 block $@2 .

    $default  reduce using rule 14 (stmt)


State 122

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   29     | expr . AND expr
   29     | expr AND expr .
   30     | expr . OR expr

    GREATEREQUAL  shift, and go to state 72
    LESSEQUAL     shift, and go to state 73
    EQUAL         shift, and go to state 74
    NOTEQUAL      shift, and go to state 75
    '>'           shift, and go to state 76
    '<'           shift, and go to state 77
    '+'           shift, and go to state 78
    '-'           shift, and go to state 79
    '*'           shift, and go to state 80
    '/'           shift, and go to state 81
    '%'           shift, and go to state 82

    $default  reduce using rule 29 (expr)


State 123

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr
   30     | expr OR expr .

    AND           shift, and go to state 70
    GREATEREQUAL  shift, and go to state 72
    LESSEQUAL     shift, and go to state 73
    EQUAL         shift, and go to state 74
    NOTEQUAL      shift, and go to state 75
    '>'           shift, and go to state 76
    '<'           shift, and go to state 77
    '+'           shift, and go to state 78
    '-'           shift, and go to state 79
    '*'           shift, and go to state 80
    '/'           shift, and go to state 81
    '%'           shift, and go to state 82

    $default  reduce using rule 30 (expr)


State 124

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   25     | expr GREATEREQUAL expr .
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr

    '+'  shift, and go to state 78
    '-'  shift, and go to state 79
    '*'  shift, and go to state 80
    '/'  shift, and go to state 81
    '%'  shift, and go to state 82

    GREATEREQUAL  error (nonassociative)
    LESSEQUAL     error (nonassociative)
    '>'           error (nonassociative)
    '<'           error (nonassociative)

    $default  reduce using rule 25 (expr)


State 125

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   26     | expr LESSEQUAL expr .
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr

    '+'  shift, and go to state 78
    '-'  shift, and go to state 79
    '*'  shift, and go to state 80
    '/'  shift, and go to state 81
    '%'  shift, and go to state 82

    GREATEREQUAL  error (nonassociative)
    LESSEQUAL     error (nonassociative)
    '>'           error (nonassociative)
    '<'           error (nonassociative)

    $default  reduce using rule 26 (expr)


State 126

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   27     | expr EQUAL expr .
   28     | expr . NOTEQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr

    GREATEREQUAL  shift, and go to state 72
    LESSEQUAL     shift, and go to state 73
    '>'           shift, and go to state 76
    '<'           shift, and go to state 77
    '+'           shift, and go to state 78
    '-'           shift, and go to state 79
    '*'           shift, and go to state 80
    '/'           shift, and go to state 81
    '%'           shift, and go to state 82

    EQUAL     error (nonassociative)
    NOTEQUAL  error (nonassociative)

    $default  reduce using rule 27 (expr)


State 127

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   28     | expr NOTEQUAL expr .
   29     | expr . AND expr
   30     | expr . OR expr

    GREATEREQUAL  shift, and go to state 72
    LESSEQUAL     shift, and go to state 73
    '>'           shift, and go to state 76
    '<'           shift, and go to state 77
    '+'           shift, and go to state 78
    '-'           shift, and go to state 79
    '*'           shift, and go to state 80
    '/'           shift, and go to state 81
    '%'           shift, and go to state 82

    EQUAL     error (nonassociative)
    NOTEQUAL  error (nonassociative)

    $default  reduce using rule 28 (expr)


State 128

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   23     | expr '>' expr .
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr

    '+'  shift, and go to state 78
    '-'  shift, and go to state 79
    '*'  shift, and go to state 80
    '/'  shift, and go to state 81
    '%'  shift, and go to state 82

    GREATEREQUAL  error (nonassociative)
    LESSEQUAL     error (nonassociative)
    '>'           error (nonassociative)
    '<'           error (nonassociative)

    $default  reduce using rule 23 (expr)


State 129

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   24     | expr '<' expr .
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr

    '+'  shift, and go to state 78
    '-'  shift, and go to state 79
    '*'  shift, and go to state 80
    '/'  shift, and go to state 81
    '%'  shift, and go to state 82

    GREATEREQUAL  error (nonassociative)
    LESSEQUAL     error (nonassociative)
    '>'           error (nonassociative)
    '<'           error (nonassociative)

    $default  reduce using rule 24 (expr)


State 130

   18 expr: expr . '+' expr
   18     | expr '+' expr .
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr

    '*'  shift, and go to state 80
    '/'  shift, and go to state 81
    '%'  shift, and go to state 82

    $default  reduce using rule 18 (expr)


State 131

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   19     | expr '-' expr .
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr

    '*'  shift, and go to state 80
    '/'  shift, and go to state 81
    '%'  shift, and go to state 82

    $default  reduce using rule 19 (expr)


State 132

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   20     | expr '*' expr .
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr

    $default  reduce using rule 20 (expr)


State 133

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   21     | expr '/' expr .
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr

    $default  reduce using rule 21 (expr)


State 134

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   22     | expr '%' expr .
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr

    $default  reduce using rule 22 (expr)


State 135

   60 methodcall: DOUPLEDOT ID . '(' elist ')'

    '('  shift, and go to state 164


State 136

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr
   40 assignexpr: lvalue '=' expr .

    AND           shift, and go to state 70
    OR            shift, and go to state 71
    GREATEREQUAL  shift, and go to state 72
    LESSEQUAL     shift, and go to state 73
    EQUAL         shift, and go to state 74
    NOTEQUAL      shift, and go to state 75
    '>'           shift, and go to state 76
    '<'           shift, and go to state 77
    '+'           shift, and go to state 78
    '-'           shift, and go to state 79
    '*'           shift, and go to state 80
    '/'           shift, and go to state 81
    '%'           shift, and go to state 82

    $default  reduce using rule 40 (assignexpr)


State 137

   50 member: lvalue '.' ID .

    $default  reduce using rule 50 (member)


State 138

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr
   51 member: lvalue '[' expr . ']'

    AND           shift, and go to state 70
    OR            shift, and go to state 71
    GREATEREQUAL  shift, and go to state 72
    LESSEQUAL     shift, and go to state 73
    EQUAL         shift, and go to state 74
    NOTEQUAL      shift, and go to state 75
    '>'           shift, and go to state 76
    '<'           shift, and go to state 77
    '+'           shift, and go to state 78
    '-'           shift, and go to state 79
    '*'           shift, and go to state 80
    '/'           shift, and go to state 81
    '%'           shift, and go to state 82
    ']'           shift, and go to state 165


State 139

   59 normcall: '(' elist . ')'

    ')'  shift, and go to state 166


State 140

   52 member: call '.' ID .

    $default  reduce using rule 52 (member)


State 141

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr
   53 member: call '[' expr . ']'

    AND           shift, and go to state 70
    OR            shift, and go to state 71
    GREATEREQUAL  shift, and go to state 72
    LESSEQUAL     shift, and go to state 73
    EQUAL         shift, and go to state 74
    NOTEQUAL      shift, and go to state 75
    '>'           shift, and go to state 76
    '<'           shift, and go to state 77
    '+'           shift, and go to state 78
    '-'           shift, and go to state 79
    '*'           shift, and go to state 80
    '/'           shift, and go to state 81
    '%'           shift, and go to state 82
    ']'           shift, and go to state 167


State 142

   54 call: call '(' elist . ')'

    ')'  shift, and go to state 168


State 143

   81 funcname: ID .

    $default  reduce using rule 81 (funcname)


State 144

   83 funcprefix: FUNCTION funcname .

    $default  reduce using rule 83 (funcprefix)


State 145

   85 funcargs: '(' . idlist ')'

    ID  shift, and go to state 169

    $default  reduce using rule 94 (idlist)

    idlist  go to state 170


State 146

   80 funcdef: K funcprefix funcargs . funcblockstart funcbody funcblockend

    $default  reduce using rule 86 (funcblockstart)

    funcblockstart  go to state 171


State 147

  101 elseprefix: ELSE .

    $default  reduce using rule 101 (elseprefix)


State 148

   98 ifstmt: ifprefix stmt elseprefix . stmt

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    CONTINUE    shift, and go to state 5
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 11
    TRUE        shift, and go to state 12
    FALSE       shift, and go to state 13
    IF          shift, and go to state 14
    WHILE       shift, and go to state 15
    FOR         shift, and go to state 16
    RETURN      shift, and go to state 17
    '-'         shift, and go to state 18
    '['         shift, and go to state 19
    '('         shift, and go to state 20
    ';'         shift, and go to state 21

    FUNCTION  reduce using rule 84 (K)
    $default  reduce using rule 12 ($@1)

    stmt        go to state 172
    $@1         go to state 25
    expr        go to state 26
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    funcdef     go to state 34
    K           go to state 35
    const       go to state 36
    ifstmt      go to state 37
    ifprefix    go to state 38
    whilestmt   go to state 39
    whilestart  go to state 40
    forstmt     go to state 41
    forprefix   go to state 42
    returnstmt  go to state 43


State 149

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr
  104 whilesecond: '(' expr . ')'

    AND           shift, and go to state 70
    OR            shift, and go to state 71
    GREATEREQUAL  shift, and go to state 72
    LESSEQUAL     shift, and go to state 73
    EQUAL         shift, and go to state 74
    NOTEQUAL      shift, and go to state 75
    '>'           shift, and go to state 76
    '<'           shift, and go to state 77
    '+'           shift, and go to state 78
    '-'           shift, and go to state 79
    '*'           shift, and go to state 80
    '/'           shift, and go to state 81
    '%'           shift, and go to state 82
    ')'           shift, and go to state 173


State 150

  102 whilestmt: whilestart whilesecond loopstmt .

    $default  reduce using rule 102 (whilestmt)


State 151

  111 loopstmt: loopstart . stmt loopend

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    CONTINUE    shift, and go to state 5
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 11
    TRUE        shift, and go to state 12
    FALSE       shift, and go to state 13
    IF          shift, and go to state 14
    WHILE       shift, and go to state 15
    FOR         shift, and go to state 16
    RETURN      shift, and go to state 17
    '-'         shift, and go to state 18
    '['         shift, and go to state 19
    '('         shift, and go to state 20
    ';'         shift, and go to state 21

    FUNCTION  reduce using rule 84 (K)
    $default  reduce using rule 12 ($@1)

    stmt        go to state 174
    $@1         go to state 25
    expr        go to state 26
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    funcdef     go to state 34
    K           go to state 35
    const       go to state 36
    ifstmt      go to state 37
    ifprefix    go to state 38
    whilestmt   go to state 39
    whilestart  go to state 40
    forstmt     go to state 41
    forprefix   go to state 42
    returnstmt  go to state 43


State 152

  105 forstmt: forprefix N1 elist . ')' N2 loopstmt N3

    ')'  shift, and go to state 175


State 153

   56 call: '(' funcdef ')' . '(' elist ')'

    '('  shift, and go to state 160


State 154

  100 ifprefix: IF '(' expr ')' .

    $default  reduce using rule 100 (ifprefix)


State 155

  106 forprefix: FOR '(' elist ';' . M expr ';'

    $default  reduce using rule 110 (M)

    M  go to state 176


State 156

   71 indexedelem: '{' expr ':' . expr '}'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 11
    TRUE        shift, and go to state 12
    FALSE       shift, and go to state 13
    '-'         shift, and go to state 18
    '['         shift, and go to state 19
    '('         shift, and go to state 20

    expr        go to state 177
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    const       go to state 36


State 157

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr
   65 elist1: error expr . elist1

    error         shift, and go to state 108
    AND           shift, and go to state 70
    OR            shift, and go to state 71
    GREATEREQUAL  shift, and go to state 72
    LESSEQUAL     shift, and go to state 73
    EQUAL         shift, and go to state 74
    NOTEQUAL      shift, and go to state 75
    '>'           shift, and go to state 76
    '<'           shift, and go to state 77
    '+'           shift, and go to state 78
    '-'           shift, and go to state 79
    '*'           shift, and go to state 80
    '/'           shift, and go to state 81
    '%'           shift, and go to state 82
    ','           shift, and go to state 109

    ']'  reduce using rule 63 (elist1)
    ')'  reduce using rule 63 (elist1)
    ';'  reduce using rule 63 (elist1)

    elist1  go to state 178


State 158

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr
   64 elist1: ',' expr . elist1

    error         shift, and go to state 108
    AND           shift, and go to state 70
    OR            shift, and go to state 71
    GREATEREQUAL  shift, and go to state 72
    LESSEQUAL     shift, and go to state 73
    EQUAL         shift, and go to state 74
    NOTEQUAL      shift, and go to state 75
    '>'           shift, and go to state 76
    '<'           shift, and go to state 77
    '+'           shift, and go to state 78
    '-'           shift, and go to state 79
    '*'           shift, and go to state 80
    '/'           shift, and go to state 81
    '%'           shift, and go to state 82
    ','           shift, and go to state 109

    ']'  reduce using rule 63 (elist1)
    ')'  reduce using rule 63 (elist1)
    ';'  reduce using rule 63 (elist1)

    elist1  go to state 179


State 159

   69 more: ',' indexedelem . more

    ','  shift, and go to state 113

    $default  reduce using rule 70 (more)

    more  go to state 180


State 160

   56 call: '(' funcdef ')' '(' . elist ')'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 11
    TRUE        shift, and go to state 12
    FALSE       shift, and go to state 13
    '-'         shift, and go to state 18
    '['         shift, and go to state 19
    '('         shift, and go to state 20

    $default  reduce using rule 61 (elist)

    expr        go to state 59
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    elist       go to state 181
    objectdef   go to state 33
    const       go to state 36


State 161

   78 block: error stmt1 '}' .

    $default  reduce using rule 78 (block)


State 162

    3 stmt1: stmt1 . stmt
   74 block: '{' $@3 stmt1 . '}' $@4

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    CONTINUE    shift, and go to state 5
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 11
    TRUE        shift, and go to state 12
    FALSE       shift, and go to state 13
    IF          shift, and go to state 14
    WHILE       shift, and go to state 15
    FOR         shift, and go to state 16
    RETURN      shift, and go to state 17
    '-'         shift, and go to state 18
    '['         shift, and go to state 19
    '('         shift, and go to state 20
    ';'         shift, and go to state 21
    '}'         shift, and go to state 182

    FUNCTION  reduce using rule 84 (K)
    $default  reduce using rule 12 ($@1)

    stmt        go to state 66
    $@1         go to state 25
    expr        go to state 26
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    funcdef     go to state 34
    K           go to state 35
    const       go to state 36
    ifstmt      go to state 37
    ifprefix    go to state 38
    whilestmt   go to state 39
    whilestart  go to state 40
    forstmt     go to state 41
    forprefix   go to state 42
    returnstmt  go to state 43


State 163

   77 block: '{' $@5 '}' . $@6

    $default  reduce using rule 76 ($@6)

    $@6  go to state 183


State 164

   60 methodcall: DOUPLEDOT ID '(' . elist ')'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 11
    TRUE        shift, and go to state 12
    FALSE       shift, and go to state 13
    '-'         shift, and go to state 18
    '['         shift, and go to state 19
    '('         shift, and go to state 20

    $default  reduce using rule 61 (elist)

    expr        go to state 59
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    elist       go to state 184
    objectdef   go to state 33
    const       go to state 36


State 165

   51 member: lvalue '[' expr ']' .

    $default  reduce using rule 51 (member)


State 166

   59 normcall: '(' elist ')' .

    $default  reduce using rule 59 (normcall)


State 167

   53 member: call '[' expr ']' .

    $default  reduce using rule 53 (member)


State 168

   54 call: call '(' elist ')' .

    $default  reduce using rule 54 (call)


State 169

   95 idlist: ID . idlist1

    ','  shift, and go to state 185

    $default  reduce using rule 96 (idlist1)

    idlist1  go to state 186


State 170

   85 funcargs: '(' idlist . ')'

    ')'  shift, and go to state 187


State 171

   80 funcdef: K funcprefix funcargs funcblockstart . funcbody funcblockend

    error  shift, and go to state 67
    '{'    shift, and go to state 68

    block     go to state 188
    funcbody  go to state 189


State 172

   98 ifstmt: ifprefix stmt elseprefix stmt .

    $default  reduce using rule 98 (ifstmt)


State 173

  104 whilesecond: '(' expr ')' .

    $default  reduce using rule 104 (whilesecond)


State 174

  111 loopstmt: loopstart stmt . loopend

    $default  reduce using rule 113 (loopend)

    loopend  go to state 190


State 175

  105 forstmt: forprefix N1 elist ')' . N2 loopstmt N3

    $default  reduce using rule 108 (N2)

    N2  go to state 191


State 176

  106 forprefix: FOR '(' elist ';' M . expr ';'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 11
    TRUE        shift, and go to state 12
    FALSE       shift, and go to state 13
    '-'         shift, and go to state 18
    '['         shift, and go to state 19
    '('         shift, and go to state 20

    expr        go to state 192
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    const       go to state 36


State 177

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr
   71 indexedelem: '{' expr ':' expr . '}'

    AND           shift, and go to state 70
    OR            shift, and go to state 71
    GREATEREQUAL  shift, and go to state 72
    LESSEQUAL     shift, and go to state 73
    EQUAL         shift, and go to state 74
    NOTEQUAL      shift, and go to state 75
    '>'           shift, and go to state 76
    '<'           shift, and go to state 77
    '+'           shift, and go to state 78
    '-'           shift, and go to state 79
    '*'           shift, and go to state 80
    '/'           shift, and go to state 81
    '%'           shift, and go to state 82
    '}'           shift, and go to state 193


State 178

   65 elist1: error expr elist1 .

    $default  reduce using rule 65 (elist1)


State 179

   64 elist1: ',' expr elist1 .

    $default  reduce using rule 64 (elist1)


State 180

   69 more: ',' indexedelem more .

    $default  reduce using rule 69 (more)


State 181

   56 call: '(' funcdef ')' '(' elist . ')'

    ')'  shift, and go to state 194


State 182

   74 block: '{' $@3 stmt1 '}' . $@4

    $default  reduce using rule 73 ($@4)

    $@4  go to state 195


State 183

   77 block: '{' $@5 '}' $@6 .

    $default  reduce using rule 77 (block)


State 184

   60 methodcall: DOUPLEDOT ID '(' elist . ')'

    ')'  shift, and go to state 196


State 185

   97 idlist1: ',' . ID idlist1

    ID  shift, and go to state 197


State 186

   95 idlist: ID idlist1 .

    $default  reduce using rule 95 (idlist)


State 187

   85 funcargs: '(' idlist ')' .

    $default  reduce using rule 85 (funcargs)


State 188

   87 funcbody: block .

    $default  reduce using rule 87 (funcbody)


State 189

   80 funcdef: K funcprefix funcargs funcblockstart funcbody . funcblockend

    $default  reduce using rule 88 (funcblockend)

    funcblockend  go to state 198


State 190

  111 loopstmt: loopstart stmt loopend .

    $default  reduce using rule 111 (loopstmt)


State 191

  105 forstmt: forprefix N1 elist ')' N2 . loopstmt N3

    $default  reduce using rule 112 (loopstart)

    loopstmt   go to state 199
    loopstart  go to state 151


State 192

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22     | expr . '%' expr
   23     | expr . '>' expr
   24     | expr . '<' expr
   25     | expr . GREATEREQUAL expr
   26     | expr . LESSEQUAL expr
   27     | expr . EQUAL expr
   28     | expr . NOTEQUAL expr
   29     | expr . AND expr
   30     | expr . OR expr
  106 forprefix: FOR '(' elist ';' M expr . ';'

    AND           shift, and go to state 70
    OR            shift, and go to state 71
    GREATEREQUAL  shift, and go to state 72
    LESSEQUAL     shift, and go to state 73
    EQUAL         shift, and go to state 74
    NOTEQUAL      shift, and go to state 75
    '>'           shift, and go to state 76
    '<'           shift, and go to state 77
    '+'           shift, and go to state 78
    '-'           shift, and go to state 79
    '*'           shift, and go to state 80
    '/'           shift, and go to state 81
    '%'           shift, and go to state 82
    ';'           shift, and go to state 200


State 193

   71 indexedelem: '{' expr ':' expr '}' .

    $default  reduce using rule 71 (indexedelem)


State 194

   56 call: '(' funcdef ')' '(' elist ')' .

    $default  reduce using rule 56 (call)


State 195

   74 block: '{' $@3 stmt1 '}' $@4 .

    $default  reduce using rule 74 (block)


State 196

   60 methodcall: DOUPLEDOT ID '(' elist ')' .

    $default  reduce using rule 60 (methodcall)


State 197

   97 idlist1: ',' ID . idlist1

    ','  shift, and go to state 185

    $default  reduce using rule 96 (idlist1)

    idlist1  go to state 201


State 198

   80 funcdef: K funcprefix funcargs funcblockstart funcbody funcblockend .

    $default  reduce using rule 80 (funcdef)


State 199

  105 forstmt: forprefix N1 elist ')' N2 loopstmt . N3

    $default  reduce using rule 109 (N3)

    N3  go to state 202


State 200

  106 forprefix: FOR '(' elist ';' M expr ';' .

    $default  reduce using rule 106 (forprefix)


State 201

   97 idlist1: ',' ID idlist1 .

    $default  reduce using rule 97 (idlist1)


State 202

  105 forstmt: forprefix N1 elist ')' N2 loopstmt N3 .

    $default  reduce using rule 105 (forstmt)
