Terminals unused in grammar

   DOUBLEDOT


State 161 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: stmt1
    2        | %empty

    3 stmt1: stmt1 stmt
    4      | stmt

    5 stmt: expr ';'
    6     | expr error ';'
    7     | ifstmt
    8     | whilestmt
    9     | forstmt
   10     | returnstmt
   11     | BREAK ';'
   12     | CONTINUE ';'

   13 $@1: %empty

   14 $@2: %empty

   15 stmt: $@1 block $@2
   16     | funcdef
   17     | ';'

   18 expr: assignexpr
   19     | expr '+' expr
   20     | expr '-' expr
   21     | expr '*' expr
   22     | expr '/' expr
   23     | expr '%' expr
   24     | expr '>' expr
   25     | expr '<' expr
   26     | expr GREATEREQUAL expr
   27     | expr LESSEQUAL expr
   28     | expr EQUAL expr
   29     | expr NOTEQUAL expr
   30     | expr AND expr
   31     | expr OR expr
   32     | term

   33 term: '(' expr ')'
   34     | '-' expr
   35     | NOT expr
   36     | PLUSPLUS lvalue
   37     | lvalue PLUSPLUS
   38     | MINUSMINUS lvalue
   39     | lvalue MINUSMINUS
   40     | primary

   41 assignexpr: lvalue '=' expr

   42 primary: lvalue
   43        | call
   44        | objectdef
   45        | '(' funcdef ')'
   46        | const

   47 lvalue: ID
   48       | LOCAL ID
   49       | SCOPEOP ID
   50       | member

   51 member: lvalue '.' ID
   52       | lvalue '[' expr ']'

   53 $@3: %empty

   54 member: call '.' ID $@3 call '[' expr ']'

   55 call: call '(' elist ')'
   56     | lvalue callsuffix
   57     | '(' funcdef ')' '(' elist ')'

   58 callsuffix: normcall
   59           | methodcall

   60 normcall: '(' elist ')'

   61 methodcall: DOUPLEDOT ID '(' elist ')'

   62 elist: %empty
   63      | expr elist1

   64 elist1: %empty
   65       | ',' expr elist1
   66       | error expr elist1

   67 objectdef: '[' elist ']'
   68          | '[' indexed ']'

   69 indexed: indexedelem more

   70 more: ',' indexedelem more
   71     | %empty

   72 indexedelem: '{' expr ':' expr '}'

   73 $@4: %empty

   74 $@5: %empty

   75 block: '{' $@4 stmt1 '}' $@5
   76      | '{' '}'
   77      | error stmt1 '}'
   78      | error '}'

   79 $@6: %empty

   80 $@7: %empty

   81 $@8: %empty

   82 funcdef: FUNCTION ID $@6 '(' $@7 idlist ')' $@8 block

   83 $@9: %empty

   84 $@10: %empty

   85 $@11: %empty

   86 funcdef: FUNCTION $@9 '(' $@10 idlist ')' $@11 block

   87 const: NUMBER
   88      | STRING
   89      | NIL
   90      | TRUE
   91      | FALSE

   92 idlist: %empty
   93       | ID idlist1

   94 idlist1: %empty
   95        | ',' ID idlist1

   96 ifstmt: IF '(' expr ')' stmt ifstmt1

   97 ifstmt1: %empty
   98        | ELSE stmt

   99 whilestmt: WHILE '(' expr ')' stmt

  100 forstmt: FOR '(' elist ';' expr ';' elist ')' stmt

  101 returnstmt: RETURN ';'
  102           | RETURN expr ';'


Terminals, with rules where they appear

$end (0) 0
'%' (37) 23
'(' (40) 33 45 55 57 60 61 82 86 96 99 100
')' (41) 33 45 55 57 60 61 82 86 96 99 100
'*' (42) 21
'+' (43) 19
',' (44) 65 70 95
'-' (45) 20 34
'.' (46) 51 54
'/' (47) 22
':' (58) 72
';' (59) 5 6 11 12 17 100 101 102
'<' (60) 25
'=' (61) 41
'>' (62) 24
'[' (91) 52 54 67 68
']' (93) 52 54 67 68
'{' (123) 72 75 76
'}' (125) 72 75 76 77 78
error (256) 6 66 77 78
ID (258) 47 48 49 51 54 61 82 93 95
NUMBER (259) 87
STRING (260) 88
BREAK (261) 11
CONTINUE (262) 12
AND (263) 30
OR (264) 31
NOT (265) 35
GREATEREQUAL (266) 26
LESSEQUAL (267) 27
EQUAL (268) 28
NOTEQUAL (269) 29
PLUSPLUS (270) 36 37
MINUSMINUS (271) 38 39
LOCAL (272) 48
SCOPEOP (273) 49
DOUPLEDOT (274) 61
FUNCTION (275) 82 86
NIL (276) 89
TRUE (277) 90
FALSE (278) 91
IF (279) 96
ELSE (280) 98
WHILE (281) 99
FOR (282) 100
RETURN (283) 101 102
DOUBLEDOT (284)
UMINUS (285)


Nonterminals, with rules where they appear

$accept (49)
    on left: 0
program (50)
    on left: 1 2, on right: 0
stmt1 (51)
    on left: 3 4, on right: 1 3 75 77
stmt (52)
    on left: 5 6 7 8 9 10 11 12 15 16 17, on right: 3 4 96 98 99 100
$@1 (53)
    on left: 13, on right: 15
$@2 (54)
    on left: 14, on right: 15
expr (55)
    on left: 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32, on right:
    5 6 19 20 21 22 23 24 25 26 27 28 29 30 31 33 34 35 41 52 54 63
    65 66 72 96 99 100 102
term (56)
    on left: 33 34 35 36 37 38 39 40, on right: 32
assignexpr (57)
    on left: 41, on right: 18
primary (58)
    on left: 42 43 44 45 46, on right: 40
lvalue (59)
    on left: 47 48 49 50, on right: 36 37 38 39 41 42 51 52 56
member (60)
    on left: 51 52 54, on right: 50
$@3 (61)
    on left: 53, on right: 54
call (62)
    on left: 55 56 57, on right: 43 54 55
callsuffix (63)
    on left: 58 59, on right: 56
normcall (64)
    on left: 60, on right: 58
methodcall (65)
    on left: 61, on right: 59
elist (66)
    on left: 62 63, on right: 55 57 60 61 67 100
elist1 (67)
    on left: 64 65 66, on right: 63 65 66
objectdef (68)
    on left: 67 68, on right: 44
indexed (69)
    on left: 69, on right: 68
more (70)
    on left: 70 71, on right: 69 70
indexedelem (71)
    on left: 72, on right: 69 70
block (72)
    on left: 75 76 77 78, on right: 15 82 86
$@4 (73)
    on left: 73, on right: 75
$@5 (74)
    on left: 74, on right: 75
funcdef (75)
    on left: 82 86, on right: 16 45 57
$@6 (76)
    on left: 79, on right: 82
$@7 (77)
    on left: 80, on right: 82
$@8 (78)
    on left: 81, on right: 82
$@9 (79)
    on left: 83, on right: 86
$@10 (80)
    on left: 84, on right: 86
$@11 (81)
    on left: 85, on right: 86
const (82)
    on left: 87 88 89 90 91, on right: 46
idlist (83)
    on left: 92 93, on right: 82 86
idlist1 (84)
    on left: 94 95, on right: 93 95
ifstmt (85)
    on left: 96, on right: 7
ifstmt1 (86)
    on left: 97 98, on right: 96
whilestmt (87)
    on left: 99, on right: 8
forstmt (88)
    on left: 100, on right: 9
returnstmt (89)
    on left: 101 102, on right: 10


State 0

    0 $accept: . program $end

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    CONTINUE    shift, and go to state 5
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    FUNCTION    shift, and go to state 11
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    IF          shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    RETURN      shift, and go to state 18
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21
    ';'         shift, and go to state 22

    $end      reduce using rule 2 (program)
    $default  reduce using rule 13 ($@1)

    program     go to state 23
    stmt1       go to state 24
    stmt        go to state 25
    $@1         go to state 26
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    funcdef     go to state 35
    const       go to state 36
    ifstmt      go to state 37
    whilestmt   go to state 38
    forstmt     go to state 39
    returnstmt  go to state 40


State 1

   47 lvalue: ID .

    $default  reduce using rule 47 (lvalue)


State 2

   87 const: NUMBER .

    $default  reduce using rule 87 (const)


State 3

   88 const: STRING .

    $default  reduce using rule 88 (const)


State 4

   11 stmt: BREAK . ';'

    ';'  shift, and go to state 41


State 5

   12 stmt: CONTINUE . ';'

    ';'  shift, and go to state 42


State 6

   35 term: NOT . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    expr        go to state 43
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 36


State 7

   36 term: PLUSPLUS . lvalue

    ID       shift, and go to state 1
    LOCAL    shift, and go to state 9
    SCOPEOP  shift, and go to state 10
    '('      shift, and go to state 44

    lvalue  go to state 45
    member  go to state 32
    call    go to state 46


State 8

   38 term: MINUSMINUS . lvalue

    ID       shift, and go to state 1
    LOCAL    shift, and go to state 9
    SCOPEOP  shift, and go to state 10
    '('      shift, and go to state 44

    lvalue  go to state 47
    member  go to state 32
    call    go to state 46


State 9

   48 lvalue: LOCAL . ID

    ID  shift, and go to state 48


State 10

   49 lvalue: SCOPEOP . ID

    ID  shift, and go to state 49


State 11

   82 funcdef: FUNCTION . ID $@6 '(' $@7 idlist ')' $@8 block
   86        | FUNCTION . $@9 '(' $@10 idlist ')' $@11 block

    ID  shift, and go to state 50

    $default  reduce using rule 83 ($@9)

    $@9  go to state 51


State 12

   89 const: NIL .

    $default  reduce using rule 89 (const)


State 13

   90 const: TRUE .

    $default  reduce using rule 90 (const)


State 14

   91 const: FALSE .

    $default  reduce using rule 91 (const)


State 15

   96 ifstmt: IF . '(' expr ')' stmt ifstmt1

    '('  shift, and go to state 52


State 16

   99 whilestmt: WHILE . '(' expr ')' stmt

    '('  shift, and go to state 53


State 17

  100 forstmt: FOR . '(' elist ';' expr ';' elist ')' stmt

    '('  shift, and go to state 54


State 18

  101 returnstmt: RETURN . ';'
  102           | RETURN . expr ';'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21
    ';'         shift, and go to state 55

    expr        go to state 56
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 36


State 19

   33 term: '(' . expr ')'
   45 primary: '(' . funcdef ')'
   57 call: '(' . funcdef ')' '(' elist ')'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    FUNCTION    shift, and go to state 11
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    expr        go to state 57
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    funcdef     go to state 58
    const       go to state 36


State 20

   67 objectdef: '[' . elist ']'
   68          | '[' . indexed ']'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21
    '{'         shift, and go to state 59

    $default  reduce using rule 62 (elist)

    expr         go to state 60
    term         go to state 28
    assignexpr   go to state 29
    primary      go to state 30
    lvalue       go to state 31
    member       go to state 32
    call         go to state 33
    elist        go to state 61
    objectdef    go to state 34
    indexed      go to state 62
    indexedelem  go to state 63
    const        go to state 36


State 21

   34 term: '-' . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    expr        go to state 64
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 36


State 22

   17 stmt: ';' .

    $default  reduce using rule 17 (stmt)


State 23

    0 $accept: program . $end

    $end  shift, and go to state 65


State 24

    1 program: stmt1 .
    3 stmt1: stmt1 . stmt

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    CONTINUE    shift, and go to state 5
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    FUNCTION    shift, and go to state 11
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    IF          shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    RETURN      shift, and go to state 18
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21
    ';'         shift, and go to state 22

    $end      reduce using rule 1 (program)
    $default  reduce using rule 13 ($@1)

    stmt        go to state 66
    $@1         go to state 26
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    funcdef     go to state 35
    const       go to state 36
    ifstmt      go to state 37
    whilestmt   go to state 38
    forstmt     go to state 39
    returnstmt  go to state 40


State 25

    4 stmt1: stmt .

    $default  reduce using rule 4 (stmt1)


State 26

   15 stmt: $@1 . block $@2

    error  shift, and go to state 67
    '{'    shift, and go to state 68

    block  go to state 69


State 27

    5 stmt: expr . ';'
    6     | expr . error ';'
   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '%' expr
   24     | expr . '>' expr
   25     | expr . '<' expr
   26     | expr . GREATEREQUAL expr
   27     | expr . LESSEQUAL expr
   28     | expr . EQUAL expr
   29     | expr . NOTEQUAL expr
   30     | expr . AND expr
   31     | expr . OR expr

    error         shift, and go to state 70
    AND           shift, and go to state 71
    OR            shift, and go to state 72
    GREATEREQUAL  shift, and go to state 73
    LESSEQUAL     shift, and go to state 74
    EQUAL         shift, and go to state 75
    NOTEQUAL      shift, and go to state 76
    '*'           shift, and go to state 77
    '/'           shift, and go to state 78
    '%'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '>'           shift, and go to state 82
    '<'           shift, and go to state 83
    ';'           shift, and go to state 84


State 28

   32 expr: term .

    $default  reduce using rule 32 (expr)


State 29

   18 expr: assignexpr .

    $default  reduce using rule 18 (expr)


State 30

   40 term: primary .

    $default  reduce using rule 40 (term)


State 31

   37 term: lvalue . PLUSPLUS
   39     | lvalue . MINUSMINUS
   41 assignexpr: lvalue . '=' expr
   42 primary: lvalue .
   51 member: lvalue . '.' ID
   52       | lvalue . '[' expr ']'
   56 call: lvalue . callsuffix

    PLUSPLUS    shift, and go to state 85
    MINUSMINUS  shift, and go to state 86
    DOUPLEDOT   shift, and go to state 87
    '('         shift, and go to state 88
    '['         shift, and go to state 89
    '.'         shift, and go to state 90
    '='         shift, and go to state 91

    $default  reduce using rule 42 (primary)

    callsuffix  go to state 92
    normcall    go to state 93
    methodcall  go to state 94


State 32

   50 lvalue: member .

    $default  reduce using rule 50 (lvalue)


State 33

   43 primary: call .
   54 member: call . '.' ID $@3 call '[' expr ']'
   55 call: call . '(' elist ')'

    '('  shift, and go to state 95
    '.'  shift, and go to state 96

    $default  reduce using rule 43 (primary)


State 34

   44 primary: objectdef .

    $default  reduce using rule 44 (primary)


State 35

   16 stmt: funcdef .

    $default  reduce using rule 16 (stmt)


State 36

   46 primary: const .

    $default  reduce using rule 46 (primary)


State 37

    7 stmt: ifstmt .

    $default  reduce using rule 7 (stmt)


State 38

    8 stmt: whilestmt .

    $default  reduce using rule 8 (stmt)


State 39

    9 stmt: forstmt .

    $default  reduce using rule 9 (stmt)


State 40

   10 stmt: returnstmt .

    $default  reduce using rule 10 (stmt)


State 41

   11 stmt: BREAK ';' .

    $default  reduce using rule 11 (stmt)


State 42

   12 stmt: CONTINUE ';' .

    $default  reduce using rule 12 (stmt)


State 43

   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '%' expr
   24     | expr . '>' expr
   25     | expr . '<' expr
   26     | expr . GREATEREQUAL expr
   27     | expr . LESSEQUAL expr
   28     | expr . EQUAL expr
   29     | expr . NOTEQUAL expr
   30     | expr . AND expr
   31     | expr . OR expr
   35 term: NOT expr .

    AND           shift, and go to state 71
    OR            shift, and go to state 72
    GREATEREQUAL  shift, and go to state 73
    LESSEQUAL     shift, and go to state 74
    EQUAL         shift, and go to state 75
    NOTEQUAL      shift, and go to state 76
    '*'           shift, and go to state 77
    '/'           shift, and go to state 78
    '%'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '>'           shift, and go to state 82
    '<'           shift, and go to state 83

    $default  reduce using rule 35 (term)


State 44

   57 call: '(' . funcdef ')' '(' elist ')'

    FUNCTION  shift, and go to state 11

    funcdef  go to state 97


State 45

   36 term: PLUSPLUS lvalue .
   51 member: lvalue . '.' ID
   52       | lvalue . '[' expr ']'
   56 call: lvalue . callsuffix

    DOUPLEDOT  shift, and go to state 87
    '('        shift, and go to state 88
    '['        shift, and go to state 89
    '.'        shift, and go to state 90

    $default  reduce using rule 36 (term)

    callsuffix  go to state 92
    normcall    go to state 93
    methodcall  go to state 94


State 46

   54 member: call . '.' ID $@3 call '[' expr ']'
   55 call: call . '(' elist ')'

    '('  shift, and go to state 95
    '.'  shift, and go to state 96


State 47

   38 term: MINUSMINUS lvalue .
   51 member: lvalue . '.' ID
   52       | lvalue . '[' expr ']'
   56 call: lvalue . callsuffix

    DOUPLEDOT  shift, and go to state 87
    '('        shift, and go to state 88
    '['        shift, and go to state 89
    '.'        shift, and go to state 90

    $default  reduce using rule 38 (term)

    callsuffix  go to state 92
    normcall    go to state 93
    methodcall  go to state 94


State 48

   48 lvalue: LOCAL ID .

    $default  reduce using rule 48 (lvalue)


State 49

   49 lvalue: SCOPEOP ID .

    $default  reduce using rule 49 (lvalue)


State 50

   82 funcdef: FUNCTION ID . $@6 '(' $@7 idlist ')' $@8 block

    $default  reduce using rule 79 ($@6)

    $@6  go to state 98


State 51

   86 funcdef: FUNCTION $@9 . '(' $@10 idlist ')' $@11 block

    '('  shift, and go to state 99


State 52

   96 ifstmt: IF '(' . expr ')' stmt ifstmt1

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    expr        go to state 100
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 36


State 53

   99 whilestmt: WHILE '(' . expr ')' stmt

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    expr        go to state 101
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 36


State 54

  100 forstmt: FOR '(' . elist ';' expr ';' elist ')' stmt

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    $default  reduce using rule 62 (elist)

    expr        go to state 60
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 102
    objectdef   go to state 34
    const       go to state 36


State 55

  101 returnstmt: RETURN ';' .

    $default  reduce using rule 101 (returnstmt)


State 56

   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '%' expr
   24     | expr . '>' expr
   25     | expr . '<' expr
   26     | expr . GREATEREQUAL expr
   27     | expr . LESSEQUAL expr
   28     | expr . EQUAL expr
   29     | expr . NOTEQUAL expr
   30     | expr . AND expr
   31     | expr . OR expr
  102 returnstmt: RETURN expr . ';'

    AND           shift, and go to state 71
    OR            shift, and go to state 72
    GREATEREQUAL  shift, and go to state 73
    LESSEQUAL     shift, and go to state 74
    EQUAL         shift, and go to state 75
    NOTEQUAL      shift, and go to state 76
    '*'           shift, and go to state 77
    '/'           shift, and go to state 78
    '%'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '>'           shift, and go to state 82
    '<'           shift, and go to state 83
    ';'           shift, and go to state 103


State 57

   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '%' expr
   24     | expr . '>' expr
   25     | expr . '<' expr
   26     | expr . GREATEREQUAL expr
   27     | expr . LESSEQUAL expr
   28     | expr . EQUAL expr
   29     | expr . NOTEQUAL expr
   30     | expr . AND expr
   31     | expr . OR expr
   33 term: '(' expr . ')'

    AND           shift, and go to state 71
    OR            shift, and go to state 72
    GREATEREQUAL  shift, and go to state 73
    LESSEQUAL     shift, and go to state 74
    EQUAL         shift, and go to state 75
    NOTEQUAL      shift, and go to state 76
    ')'           shift, and go to state 104
    '*'           shift, and go to state 77
    '/'           shift, and go to state 78
    '%'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '>'           shift, and go to state 82
    '<'           shift, and go to state 83


State 58

   45 primary: '(' funcdef . ')'
   57 call: '(' funcdef . ')' '(' elist ')'

    ')'  shift, and go to state 105


State 59

   72 indexedelem: '{' . expr ':' expr '}'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    expr        go to state 106
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 36


State 60

   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '%' expr
   24     | expr . '>' expr
   25     | expr . '<' expr
   26     | expr . GREATEREQUAL expr
   27     | expr . LESSEQUAL expr
   28     | expr . EQUAL expr
   29     | expr . NOTEQUAL expr
   30     | expr . AND expr
   31     | expr . OR expr
   63 elist: expr . elist1

    error         shift, and go to state 107
    AND           shift, and go to state 71
    OR            shift, and go to state 72
    GREATEREQUAL  shift, and go to state 73
    LESSEQUAL     shift, and go to state 74
    EQUAL         shift, and go to state 75
    NOTEQUAL      shift, and go to state 76
    '*'           shift, and go to state 77
    '/'           shift, and go to state 78
    '%'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '>'           shift, and go to state 82
    '<'           shift, and go to state 83
    ','           shift, and go to state 108

    ')'  reduce using rule 64 (elist1)
    ']'  reduce using rule 64 (elist1)
    ';'  reduce using rule 64 (elist1)

    elist1  go to state 109


State 61

   67 objectdef: '[' elist . ']'

    ']'  shift, and go to state 110


State 62

   68 objectdef: '[' indexed . ']'

    ']'  shift, and go to state 111


State 63

   69 indexed: indexedelem . more

    ','  shift, and go to state 112

    $default  reduce using rule 71 (more)

    more  go to state 113


State 64

   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '%' expr
   24     | expr . '>' expr
   25     | expr . '<' expr
   26     | expr . GREATEREQUAL expr
   27     | expr . LESSEQUAL expr
   28     | expr . EQUAL expr
   29     | expr . NOTEQUAL expr
   30     | expr . AND expr
   31     | expr . OR expr
   34 term: '-' expr .

    AND           shift, and go to state 71
    OR            shift, and go to state 72
    GREATEREQUAL  shift, and go to state 73
    LESSEQUAL     shift, and go to state 74
    EQUAL         shift, and go to state 75
    NOTEQUAL      shift, and go to state 76
    '*'           shift, and go to state 77
    '/'           shift, and go to state 78
    '%'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '>'           shift, and go to state 82
    '<'           shift, and go to state 83

    $default  reduce using rule 34 (term)


State 65

    0 $accept: program $end .

    $default  accept


State 66

    3 stmt1: stmt1 stmt .

    $default  reduce using rule 3 (stmt1)


State 67

   77 block: error . stmt1 '}'
   78      | error . '}'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    CONTINUE    shift, and go to state 5
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    FUNCTION    shift, and go to state 11
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    IF          shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    RETURN      shift, and go to state 18
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21
    ';'         shift, and go to state 22
    '}'         shift, and go to state 114

    $default  reduce using rule 13 ($@1)

    stmt1       go to state 115
    stmt        go to state 25
    $@1         go to state 26
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    funcdef     go to state 35
    const       go to state 36
    ifstmt      go to state 37
    whilestmt   go to state 38
    forstmt     go to state 39
    returnstmt  go to state 40


State 68

   75 block: '{' . $@4 stmt1 '}' $@5
   76      | '{' . '}'

    '}'  shift, and go to state 116

    $default  reduce using rule 73 ($@4)

    $@4  go to state 117


State 69

   15 stmt: $@1 block . $@2

    $default  reduce using rule 14 ($@2)

    $@2  go to state 118


State 70

    6 stmt: expr error . ';'

    ';'  shift, and go to state 119


State 71

   30 expr: expr AND . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    expr        go to state 120
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 36


State 72

   31 expr: expr OR . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    expr        go to state 121
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 36


State 73

   26 expr: expr GREATEREQUAL . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    expr        go to state 122
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 36


State 74

   27 expr: expr LESSEQUAL . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    expr        go to state 123
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 36


State 75

   28 expr: expr EQUAL . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    expr        go to state 124
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 36


State 76

   29 expr: expr NOTEQUAL . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    expr        go to state 125
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 36


State 77

   21 expr: expr '*' . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    expr        go to state 126
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 36


State 78

   22 expr: expr '/' . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    expr        go to state 127
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 36


State 79

   23 expr: expr '%' . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    expr        go to state 128
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 36


State 80

   19 expr: expr '+' . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    expr        go to state 129
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 36


State 81

   20 expr: expr '-' . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    expr        go to state 130
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 36


State 82

   24 expr: expr '>' . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    expr        go to state 131
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 36


State 83

   25 expr: expr '<' . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    expr        go to state 132
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 36


State 84

    5 stmt: expr ';' .

    $default  reduce using rule 5 (stmt)


State 85

   37 term: lvalue PLUSPLUS .

    $default  reduce using rule 37 (term)


State 86

   39 term: lvalue MINUSMINUS .

    $default  reduce using rule 39 (term)


State 87

   61 methodcall: DOUPLEDOT . ID '(' elist ')'

    ID  shift, and go to state 133


State 88

   60 normcall: '(' . elist ')'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    $default  reduce using rule 62 (elist)

    expr        go to state 60
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 134
    objectdef   go to state 34
    const       go to state 36


State 89

   52 member: lvalue '[' . expr ']'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    expr        go to state 135
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 36


State 90

   51 member: lvalue '.' . ID

    ID  shift, and go to state 136


State 91

   41 assignexpr: lvalue '=' . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    expr        go to state 137
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 36


State 92

   56 call: lvalue callsuffix .

    $default  reduce using rule 56 (call)


State 93

   58 callsuffix: normcall .

    $default  reduce using rule 58 (callsuffix)


State 94

   59 callsuffix: methodcall .

    $default  reduce using rule 59 (callsuffix)


State 95

   55 call: call '(' . elist ')'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    $default  reduce using rule 62 (elist)

    expr        go to state 60
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 138
    objectdef   go to state 34
    const       go to state 36


State 96

   54 member: call '.' . ID $@3 call '[' expr ']'

    ID  shift, and go to state 139


State 97

   57 call: '(' funcdef . ')' '(' elist ')'

    ')'  shift, and go to state 140


State 98

   82 funcdef: FUNCTION ID $@6 . '(' $@7 idlist ')' $@8 block

    '('  shift, and go to state 141


State 99

   86 funcdef: FUNCTION $@9 '(' . $@10 idlist ')' $@11 block

    $default  reduce using rule 84 ($@10)

    $@10  go to state 142


State 100

   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '%' expr
   24     | expr . '>' expr
   25     | expr . '<' expr
   26     | expr . GREATEREQUAL expr
   27     | expr . LESSEQUAL expr
   28     | expr . EQUAL expr
   29     | expr . NOTEQUAL expr
   30     | expr . AND expr
   31     | expr . OR expr
   96 ifstmt: IF '(' expr . ')' stmt ifstmt1

    AND           shift, and go to state 71
    OR            shift, and go to state 72
    GREATEREQUAL  shift, and go to state 73
    LESSEQUAL     shift, and go to state 74
    EQUAL         shift, and go to state 75
    NOTEQUAL      shift, and go to state 76
    ')'           shift, and go to state 143
    '*'           shift, and go to state 77
    '/'           shift, and go to state 78
    '%'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '>'           shift, and go to state 82
    '<'           shift, and go to state 83


State 101

   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '%' expr
   24     | expr . '>' expr
   25     | expr . '<' expr
   26     | expr . GREATEREQUAL expr
   27     | expr . LESSEQUAL expr
   28     | expr . EQUAL expr
   29     | expr . NOTEQUAL expr
   30     | expr . AND expr
   31     | expr . OR expr
   99 whilestmt: WHILE '(' expr . ')' stmt

    AND           shift, and go to state 71
    OR            shift, and go to state 72
    GREATEREQUAL  shift, and go to state 73
    LESSEQUAL     shift, and go to state 74
    EQUAL         shift, and go to state 75
    NOTEQUAL      shift, and go to state 76
    ')'           shift, and go to state 144
    '*'           shift, and go to state 77
    '/'           shift, and go to state 78
    '%'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '>'           shift, and go to state 82
    '<'           shift, and go to state 83


State 102

  100 forstmt: FOR '(' elist . ';' expr ';' elist ')' stmt

    ';'  shift, and go to state 145


State 103

  102 returnstmt: RETURN expr ';' .

    $default  reduce using rule 102 (returnstmt)


State 104

   33 term: '(' expr ')' .

    $default  reduce using rule 33 (term)


State 105

   45 primary: '(' funcdef ')' .
   57 call: '(' funcdef ')' . '(' elist ')'

    '('  shift, and go to state 146

    $default  reduce using rule 45 (primary)


State 106

   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '%' expr
   24     | expr . '>' expr
   25     | expr . '<' expr
   26     | expr . GREATEREQUAL expr
   27     | expr . LESSEQUAL expr
   28     | expr . EQUAL expr
   29     | expr . NOTEQUAL expr
   30     | expr . AND expr
   31     | expr . OR expr
   72 indexedelem: '{' expr . ':' expr '}'

    AND           shift, and go to state 71
    OR            shift, and go to state 72
    GREATEREQUAL  shift, and go to state 73
    LESSEQUAL     shift, and go to state 74
    EQUAL         shift, and go to state 75
    NOTEQUAL      shift, and go to state 76
    '*'           shift, and go to state 77
    '/'           shift, and go to state 78
    '%'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '>'           shift, and go to state 82
    '<'           shift, and go to state 83
    ':'           shift, and go to state 147


State 107

   66 elist1: error . expr elist1

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    expr        go to state 148
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 36


State 108

   65 elist1: ',' . expr elist1

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    expr        go to state 149
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 36


State 109

   63 elist: expr elist1 .

    $default  reduce using rule 63 (elist)


State 110

   67 objectdef: '[' elist ']' .

    $default  reduce using rule 67 (objectdef)


State 111

   68 objectdef: '[' indexed ']' .

    $default  reduce using rule 68 (objectdef)


State 112

   70 more: ',' . indexedelem more

    '{'  shift, and go to state 59

    indexedelem  go to state 150


State 113

   69 indexed: indexedelem more .

    $default  reduce using rule 69 (indexed)


State 114

   78 block: error '}' .

    $default  reduce using rule 78 (block)


State 115

    3 stmt1: stmt1 . stmt
   77 block: error stmt1 . '}'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    CONTINUE    shift, and go to state 5
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    FUNCTION    shift, and go to state 11
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    IF          shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    RETURN      shift, and go to state 18
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21
    ';'         shift, and go to state 22
    '}'         shift, and go to state 151

    $default  reduce using rule 13 ($@1)

    stmt        go to state 66
    $@1         go to state 26
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    funcdef     go to state 35
    const       go to state 36
    ifstmt      go to state 37
    whilestmt   go to state 38
    forstmt     go to state 39
    returnstmt  go to state 40


State 116

   76 block: '{' '}' .

    $default  reduce using rule 76 (block)


State 117

   75 block: '{' $@4 . stmt1 '}' $@5

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    CONTINUE    shift, and go to state 5
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    FUNCTION    shift, and go to state 11
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    IF          shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    RETURN      shift, and go to state 18
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21
    ';'         shift, and go to state 22

    $default  reduce using rule 13 ($@1)

    stmt1       go to state 152
    stmt        go to state 25
    $@1         go to state 26
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    funcdef     go to state 35
    const       go to state 36
    ifstmt      go to state 37
    whilestmt   go to state 38
    forstmt     go to state 39
    returnstmt  go to state 40


State 118

   15 stmt: $@1 block $@2 .

    $default  reduce using rule 15 (stmt)


State 119

    6 stmt: expr error ';' .

    $default  reduce using rule 6 (stmt)


State 120

   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '%' expr
   24     | expr . '>' expr
   25     | expr . '<' expr
   26     | expr . GREATEREQUAL expr
   27     | expr . LESSEQUAL expr
   28     | expr . EQUAL expr
   29     | expr . NOTEQUAL expr
   30     | expr . AND expr
   30     | expr AND expr .
   31     | expr . OR expr

    OR  shift, and go to state 72

    $default  reduce using rule 30 (expr)


State 121

   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '%' expr
   24     | expr . '>' expr
   25     | expr . '<' expr
   26     | expr . GREATEREQUAL expr
   27     | expr . LESSEQUAL expr
   28     | expr . EQUAL expr
   29     | expr . NOTEQUAL expr
   30     | expr . AND expr
   31     | expr . OR expr
   31     | expr OR expr .

    $default  reduce using rule 31 (expr)


State 122

   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '%' expr
   24     | expr . '>' expr
   25     | expr . '<' expr
   26     | expr . GREATEREQUAL expr
   26     | expr GREATEREQUAL expr .
   27     | expr . LESSEQUAL expr
   28     | expr . EQUAL expr
   29     | expr . NOTEQUAL expr
   30     | expr . AND expr
   31     | expr . OR expr

    AND       shift, and go to state 71
    OR        shift, and go to state 72
    EQUAL     shift, and go to state 75
    NOTEQUAL  shift, and go to state 76

    GREATEREQUAL  error (nonassociative)
    LESSEQUAL     error (nonassociative)
    '>'           error (nonassociative)
    '<'           error (nonassociative)

    $default  reduce using rule 26 (expr)


State 123

   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '%' expr
   24     | expr . '>' expr
   25     | expr . '<' expr
   26     | expr . GREATEREQUAL expr
   27     | expr . LESSEQUAL expr
   27     | expr LESSEQUAL expr .
   28     | expr . EQUAL expr
   29     | expr . NOTEQUAL expr
   30     | expr . AND expr
   31     | expr . OR expr

    AND       shift, and go to state 71
    OR        shift, and go to state 72
    EQUAL     shift, and go to state 75
    NOTEQUAL  shift, and go to state 76

    GREATEREQUAL  error (nonassociative)
    LESSEQUAL     error (nonassociative)
    '>'           error (nonassociative)
    '<'           error (nonassociative)

    $default  reduce using rule 27 (expr)


State 124

   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '%' expr
   24     | expr . '>' expr
   25     | expr . '<' expr
   26     | expr . GREATEREQUAL expr
   27     | expr . LESSEQUAL expr
   28     | expr . EQUAL expr
   28     | expr EQUAL expr .
   29     | expr . NOTEQUAL expr
   30     | expr . AND expr
   31     | expr . OR expr

    AND  shift, and go to state 71
    OR   shift, and go to state 72

    EQUAL     error (nonassociative)
    NOTEQUAL  error (nonassociative)

    $default  reduce using rule 28 (expr)


State 125

   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '%' expr
   24     | expr . '>' expr
   25     | expr . '<' expr
   26     | expr . GREATEREQUAL expr
   27     | expr . LESSEQUAL expr
   28     | expr . EQUAL expr
   29     | expr . NOTEQUAL expr
   29     | expr NOTEQUAL expr .
   30     | expr . AND expr
   31     | expr . OR expr

    AND  shift, and go to state 71
    OR   shift, and go to state 72

    EQUAL     error (nonassociative)
    NOTEQUAL  error (nonassociative)

    $default  reduce using rule 29 (expr)


State 126

   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   21     | expr '*' expr .
   22     | expr . '/' expr
   23     | expr . '%' expr
   24     | expr . '>' expr
   25     | expr . '<' expr
   26     | expr . GREATEREQUAL expr
   27     | expr . LESSEQUAL expr
   28     | expr . EQUAL expr
   29     | expr . NOTEQUAL expr
   30     | expr . AND expr
   31     | expr . OR expr

    AND           shift, and go to state 71
    OR            shift, and go to state 72
    GREATEREQUAL  shift, and go to state 73
    LESSEQUAL     shift, and go to state 74
    EQUAL         shift, and go to state 75
    NOTEQUAL      shift, and go to state 76
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '>'           shift, and go to state 82
    '<'           shift, and go to state 83

    $default  reduce using rule 21 (expr)


State 127

   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   22     | expr '/' expr .
   23     | expr . '%' expr
   24     | expr . '>' expr
   25     | expr . '<' expr
   26     | expr . GREATEREQUAL expr
   27     | expr . LESSEQUAL expr
   28     | expr . EQUAL expr
   29     | expr . NOTEQUAL expr
   30     | expr . AND expr
   31     | expr . OR expr

    AND           shift, and go to state 71
    OR            shift, and go to state 72
    GREATEREQUAL  shift, and go to state 73
    LESSEQUAL     shift, and go to state 74
    EQUAL         shift, and go to state 75
    NOTEQUAL      shift, and go to state 76
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '>'           shift, and go to state 82
    '<'           shift, and go to state 83

    $default  reduce using rule 22 (expr)


State 128

   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '%' expr
   23     | expr '%' expr .
   24     | expr . '>' expr
   25     | expr . '<' expr
   26     | expr . GREATEREQUAL expr
   27     | expr . LESSEQUAL expr
   28     | expr . EQUAL expr
   29     | expr . NOTEQUAL expr
   30     | expr . AND expr
   31     | expr . OR expr

    AND           shift, and go to state 71
    OR            shift, and go to state 72
    GREATEREQUAL  shift, and go to state 73
    LESSEQUAL     shift, and go to state 74
    EQUAL         shift, and go to state 75
    NOTEQUAL      shift, and go to state 76
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '>'           shift, and go to state 82
    '<'           shift, and go to state 83

    $default  reduce using rule 23 (expr)


State 129

   19 expr: expr . '+' expr
   19     | expr '+' expr .
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '%' expr
   24     | expr . '>' expr
   25     | expr . '<' expr
   26     | expr . GREATEREQUAL expr
   27     | expr . LESSEQUAL expr
   28     | expr . EQUAL expr
   29     | expr . NOTEQUAL expr
   30     | expr . AND expr
   31     | expr . OR expr

    AND           shift, and go to state 71
    OR            shift, and go to state 72
    GREATEREQUAL  shift, and go to state 73
    LESSEQUAL     shift, and go to state 74
    EQUAL         shift, and go to state 75
    NOTEQUAL      shift, and go to state 76
    '>'           shift, and go to state 82
    '<'           shift, and go to state 83

    $default  reduce using rule 19 (expr)


State 130

   19 expr: expr . '+' expr
   20     | expr . '-' expr
   20     | expr '-' expr .
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '%' expr
   24     | expr . '>' expr
   25     | expr . '<' expr
   26     | expr . GREATEREQUAL expr
   27     | expr . LESSEQUAL expr
   28     | expr . EQUAL expr
   29     | expr . NOTEQUAL expr
   30     | expr . AND expr
   31     | expr . OR expr

    AND           shift, and go to state 71
    OR            shift, and go to state 72
    GREATEREQUAL  shift, and go to state 73
    LESSEQUAL     shift, and go to state 74
    EQUAL         shift, and go to state 75
    NOTEQUAL      shift, and go to state 76
    '>'           shift, and go to state 82
    '<'           shift, and go to state 83

    $default  reduce using rule 20 (expr)


State 131

   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '%' expr
   24     | expr . '>' expr
   24     | expr '>' expr .
   25     | expr . '<' expr
   26     | expr . GREATEREQUAL expr
   27     | expr . LESSEQUAL expr
   28     | expr . EQUAL expr
   29     | expr . NOTEQUAL expr
   30     | expr . AND expr
   31     | expr . OR expr

    AND       shift, and go to state 71
    OR        shift, and go to state 72
    EQUAL     shift, and go to state 75
    NOTEQUAL  shift, and go to state 76

    GREATEREQUAL  error (nonassociative)
    LESSEQUAL     error (nonassociative)
    '>'           error (nonassociative)
    '<'           error (nonassociative)

    $default  reduce using rule 24 (expr)


State 132

   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '%' expr
   24     | expr . '>' expr
   25     | expr . '<' expr
   25     | expr '<' expr .
   26     | expr . GREATEREQUAL expr
   27     | expr . LESSEQUAL expr
   28     | expr . EQUAL expr
   29     | expr . NOTEQUAL expr
   30     | expr . AND expr
   31     | expr . OR expr

    AND       shift, and go to state 71
    OR        shift, and go to state 72
    EQUAL     shift, and go to state 75
    NOTEQUAL  shift, and go to state 76

    GREATEREQUAL  error (nonassociative)
    LESSEQUAL     error (nonassociative)
    '>'           error (nonassociative)
    '<'           error (nonassociative)

    $default  reduce using rule 25 (expr)


State 133

   61 methodcall: DOUPLEDOT ID . '(' elist ')'

    '('  shift, and go to state 153


State 134

   60 normcall: '(' elist . ')'

    ')'  shift, and go to state 154


State 135

   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '%' expr
   24     | expr . '>' expr
   25     | expr . '<' expr
   26     | expr . GREATEREQUAL expr
   27     | expr . LESSEQUAL expr
   28     | expr . EQUAL expr
   29     | expr . NOTEQUAL expr
   30     | expr . AND expr
   31     | expr . OR expr
   52 member: lvalue '[' expr . ']'

    AND           shift, and go to state 71
    OR            shift, and go to state 72
    GREATEREQUAL  shift, and go to state 73
    LESSEQUAL     shift, and go to state 74
    EQUAL         shift, and go to state 75
    NOTEQUAL      shift, and go to state 76
    ']'           shift, and go to state 155
    '*'           shift, and go to state 77
    '/'           shift, and go to state 78
    '%'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '>'           shift, and go to state 82
    '<'           shift, and go to state 83


State 136

   51 member: lvalue '.' ID .

    $default  reduce using rule 51 (member)


State 137

   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '%' expr
   24     | expr . '>' expr
   25     | expr . '<' expr
   26     | expr . GREATEREQUAL expr
   27     | expr . LESSEQUAL expr
   28     | expr . EQUAL expr
   29     | expr . NOTEQUAL expr
   30     | expr . AND expr
   31     | expr . OR expr
   41 assignexpr: lvalue '=' expr .

    $default  reduce using rule 41 (assignexpr)


State 138

   55 call: call '(' elist . ')'

    ')'  shift, and go to state 156


State 139

   54 member: call '.' ID . $@3 call '[' expr ']'

    $default  reduce using rule 53 ($@3)

    $@3  go to state 157


State 140

   57 call: '(' funcdef ')' . '(' elist ')'

    '('  shift, and go to state 146


State 141

   82 funcdef: FUNCTION ID $@6 '(' . $@7 idlist ')' $@8 block

    $default  reduce using rule 80 ($@7)

    $@7  go to state 158


State 142

   86 funcdef: FUNCTION $@9 '(' $@10 . idlist ')' $@11 block

    ID  shift, and go to state 159

    $default  reduce using rule 92 (idlist)

    idlist  go to state 160


State 143

   96 ifstmt: IF '(' expr ')' . stmt ifstmt1

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    CONTINUE    shift, and go to state 5
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    FUNCTION    shift, and go to state 11
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    IF          shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    RETURN      shift, and go to state 18
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21
    ';'         shift, and go to state 22

    $default  reduce using rule 13 ($@1)

    stmt        go to state 161
    $@1         go to state 26
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    funcdef     go to state 35
    const       go to state 36
    ifstmt      go to state 37
    whilestmt   go to state 38
    forstmt     go to state 39
    returnstmt  go to state 40


State 144

   99 whilestmt: WHILE '(' expr ')' . stmt

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    CONTINUE    shift, and go to state 5
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    FUNCTION    shift, and go to state 11
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    IF          shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    RETURN      shift, and go to state 18
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21
    ';'         shift, and go to state 22

    $default  reduce using rule 13 ($@1)

    stmt        go to state 162
    $@1         go to state 26
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    funcdef     go to state 35
    const       go to state 36
    ifstmt      go to state 37
    whilestmt   go to state 38
    forstmt     go to state 39
    returnstmt  go to state 40


State 145

  100 forstmt: FOR '(' elist ';' . expr ';' elist ')' stmt

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    expr        go to state 163
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 36


State 146

   57 call: '(' funcdef ')' '(' . elist ')'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    $default  reduce using rule 62 (elist)

    expr        go to state 60
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 164
    objectdef   go to state 34
    const       go to state 36


State 147

   72 indexedelem: '{' expr ':' . expr '}'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    expr        go to state 165
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 36


State 148

   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '%' expr
   24     | expr . '>' expr
   25     | expr . '<' expr
   26     | expr . GREATEREQUAL expr
   27     | expr . LESSEQUAL expr
   28     | expr . EQUAL expr
   29     | expr . NOTEQUAL expr
   30     | expr . AND expr
   31     | expr . OR expr
   66 elist1: error expr . elist1

    error         shift, and go to state 107
    AND           shift, and go to state 71
    OR            shift, and go to state 72
    GREATEREQUAL  shift, and go to state 73
    LESSEQUAL     shift, and go to state 74
    EQUAL         shift, and go to state 75
    NOTEQUAL      shift, and go to state 76
    '*'           shift, and go to state 77
    '/'           shift, and go to state 78
    '%'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '>'           shift, and go to state 82
    '<'           shift, and go to state 83
    ','           shift, and go to state 108

    ')'  reduce using rule 64 (elist1)
    ']'  reduce using rule 64 (elist1)
    ';'  reduce using rule 64 (elist1)

    elist1  go to state 166


State 149

   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '%' expr
   24     | expr . '>' expr
   25     | expr . '<' expr
   26     | expr . GREATEREQUAL expr
   27     | expr . LESSEQUAL expr
   28     | expr . EQUAL expr
   29     | expr . NOTEQUAL expr
   30     | expr . AND expr
   31     | expr . OR expr
   65 elist1: ',' expr . elist1

    error         shift, and go to state 107
    AND           shift, and go to state 71
    OR            shift, and go to state 72
    GREATEREQUAL  shift, and go to state 73
    LESSEQUAL     shift, and go to state 74
    EQUAL         shift, and go to state 75
    NOTEQUAL      shift, and go to state 76
    '*'           shift, and go to state 77
    '/'           shift, and go to state 78
    '%'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '>'           shift, and go to state 82
    '<'           shift, and go to state 83
    ','           shift, and go to state 108

    ')'  reduce using rule 64 (elist1)
    ']'  reduce using rule 64 (elist1)
    ';'  reduce using rule 64 (elist1)

    elist1  go to state 167


State 150

   70 more: ',' indexedelem . more

    ','  shift, and go to state 112

    $default  reduce using rule 71 (more)

    more  go to state 168


State 151

   77 block: error stmt1 '}' .

    $default  reduce using rule 77 (block)


State 152

    3 stmt1: stmt1 . stmt
   75 block: '{' $@4 stmt1 . '}' $@5

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    CONTINUE    shift, and go to state 5
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    FUNCTION    shift, and go to state 11
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    IF          shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    RETURN      shift, and go to state 18
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21
    ';'         shift, and go to state 22
    '}'         shift, and go to state 169

    $default  reduce using rule 13 ($@1)

    stmt        go to state 66
    $@1         go to state 26
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    funcdef     go to state 35
    const       go to state 36
    ifstmt      go to state 37
    whilestmt   go to state 38
    forstmt     go to state 39
    returnstmt  go to state 40


State 153

   61 methodcall: DOUPLEDOT ID '(' . elist ')'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    $default  reduce using rule 62 (elist)

    expr        go to state 60
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 170
    objectdef   go to state 34
    const       go to state 36


State 154

   60 normcall: '(' elist ')' .

    $default  reduce using rule 60 (normcall)


State 155

   52 member: lvalue '[' expr ']' .

    $default  reduce using rule 52 (member)


State 156

   55 call: call '(' elist ')' .

    $default  reduce using rule 55 (call)


State 157

   54 member: call '.' ID $@3 . call '[' expr ']'

    ID       shift, and go to state 1
    LOCAL    shift, and go to state 9
    SCOPEOP  shift, and go to state 10
    '('      shift, and go to state 44

    lvalue  go to state 171
    member  go to state 32
    call    go to state 172


State 158

   82 funcdef: FUNCTION ID $@6 '(' $@7 . idlist ')' $@8 block

    ID  shift, and go to state 159

    $default  reduce using rule 92 (idlist)

    idlist  go to state 173


State 159

   93 idlist: ID . idlist1

    ','  shift, and go to state 174

    $default  reduce using rule 94 (idlist1)

    idlist1  go to state 175


State 160

   86 funcdef: FUNCTION $@9 '(' $@10 idlist . ')' $@11 block

    ')'  shift, and go to state 176


State 161

   96 ifstmt: IF '(' expr ')' stmt . ifstmt1

    ELSE  shift, and go to state 177

    ELSE      [reduce using rule 97 (ifstmt1)]
    $default  reduce using rule 97 (ifstmt1)

    ifstmt1  go to state 178


State 162

   99 whilestmt: WHILE '(' expr ')' stmt .

    $default  reduce using rule 99 (whilestmt)


State 163

   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '%' expr
   24     | expr . '>' expr
   25     | expr . '<' expr
   26     | expr . GREATEREQUAL expr
   27     | expr . LESSEQUAL expr
   28     | expr . EQUAL expr
   29     | expr . NOTEQUAL expr
   30     | expr . AND expr
   31     | expr . OR expr
  100 forstmt: FOR '(' elist ';' expr . ';' elist ')' stmt

    AND           shift, and go to state 71
    OR            shift, and go to state 72
    GREATEREQUAL  shift, and go to state 73
    LESSEQUAL     shift, and go to state 74
    EQUAL         shift, and go to state 75
    NOTEQUAL      shift, and go to state 76
    '*'           shift, and go to state 77
    '/'           shift, and go to state 78
    '%'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '>'           shift, and go to state 82
    '<'           shift, and go to state 83
    ';'           shift, and go to state 179


State 164

   57 call: '(' funcdef ')' '(' elist . ')'

    ')'  shift, and go to state 180


State 165

   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '%' expr
   24     | expr . '>' expr
   25     | expr . '<' expr
   26     | expr . GREATEREQUAL expr
   27     | expr . LESSEQUAL expr
   28     | expr . EQUAL expr
   29     | expr . NOTEQUAL expr
   30     | expr . AND expr
   31     | expr . OR expr
   72 indexedelem: '{' expr ':' expr . '}'

    AND           shift, and go to state 71
    OR            shift, and go to state 72
    GREATEREQUAL  shift, and go to state 73
    LESSEQUAL     shift, and go to state 74
    EQUAL         shift, and go to state 75
    NOTEQUAL      shift, and go to state 76
    '*'           shift, and go to state 77
    '/'           shift, and go to state 78
    '%'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '>'           shift, and go to state 82
    '<'           shift, and go to state 83
    '}'           shift, and go to state 181


State 166

   66 elist1: error expr elist1 .

    $default  reduce using rule 66 (elist1)


State 167

   65 elist1: ',' expr elist1 .

    $default  reduce using rule 65 (elist1)


State 168

   70 more: ',' indexedelem more .

    $default  reduce using rule 70 (more)


State 169

   75 block: '{' $@4 stmt1 '}' . $@5

    $default  reduce using rule 74 ($@5)

    $@5  go to state 182


State 170

   61 methodcall: DOUPLEDOT ID '(' elist . ')'

    ')'  shift, and go to state 183


State 171

   51 member: lvalue . '.' ID
   52       | lvalue . '[' expr ']'
   56 call: lvalue . callsuffix

    DOUPLEDOT  shift, and go to state 87
    '('        shift, and go to state 88
    '['        shift, and go to state 89
    '.'        shift, and go to state 90

    callsuffix  go to state 92
    normcall    go to state 93
    methodcall  go to state 94


State 172

   54 member: call . '.' ID $@3 call '[' expr ']'
   54       | call '.' ID $@3 call . '[' expr ']'
   55 call: call . '(' elist ')'

    '('  shift, and go to state 95
    '['  shift, and go to state 184
    '.'  shift, and go to state 96


State 173

   82 funcdef: FUNCTION ID $@6 '(' $@7 idlist . ')' $@8 block

    ')'  shift, and go to state 185


State 174

   95 idlist1: ',' . ID idlist1

    ID  shift, and go to state 186


State 175

   93 idlist: ID idlist1 .

    $default  reduce using rule 93 (idlist)


State 176

   86 funcdef: FUNCTION $@9 '(' $@10 idlist ')' . $@11 block

    $default  reduce using rule 85 ($@11)

    $@11  go to state 187


State 177

   98 ifstmt1: ELSE . stmt

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    CONTINUE    shift, and go to state 5
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    FUNCTION    shift, and go to state 11
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    IF          shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    RETURN      shift, and go to state 18
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21
    ';'         shift, and go to state 22

    $default  reduce using rule 13 ($@1)

    stmt        go to state 188
    $@1         go to state 26
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    funcdef     go to state 35
    const       go to state 36
    ifstmt      go to state 37
    whilestmt   go to state 38
    forstmt     go to state 39
    returnstmt  go to state 40


State 178

   96 ifstmt: IF '(' expr ')' stmt ifstmt1 .

    $default  reduce using rule 96 (ifstmt)


State 179

  100 forstmt: FOR '(' elist ';' expr ';' . elist ')' stmt

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    $default  reduce using rule 62 (elist)

    expr        go to state 60
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 189
    objectdef   go to state 34
    const       go to state 36


State 180

   57 call: '(' funcdef ')' '(' elist ')' .

    $default  reduce using rule 57 (call)


State 181

   72 indexedelem: '{' expr ':' expr '}' .

    $default  reduce using rule 72 (indexedelem)


State 182

   75 block: '{' $@4 stmt1 '}' $@5 .

    $default  reduce using rule 75 (block)


State 183

   61 methodcall: DOUPLEDOT ID '(' elist ')' .

    $default  reduce using rule 61 (methodcall)


State 184

   54 member: call '.' ID $@3 call '[' . expr ']'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21

    expr        go to state 190
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 36


State 185

   82 funcdef: FUNCTION ID $@6 '(' $@7 idlist ')' . $@8 block

    $default  reduce using rule 81 ($@8)

    $@8  go to state 191


State 186

   95 idlist1: ',' ID . idlist1

    ','  shift, and go to state 174

    $default  reduce using rule 94 (idlist1)

    idlist1  go to state 192


State 187

   86 funcdef: FUNCTION $@9 '(' $@10 idlist ')' $@11 . block

    error  shift, and go to state 67
    '{'    shift, and go to state 68

    block  go to state 193


State 188

   98 ifstmt1: ELSE stmt .

    $default  reduce using rule 98 (ifstmt1)


State 189

  100 forstmt: FOR '(' elist ';' expr ';' elist . ')' stmt

    ')'  shift, and go to state 194


State 190

   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '%' expr
   24     | expr . '>' expr
   25     | expr . '<' expr
   26     | expr . GREATEREQUAL expr
   27     | expr . LESSEQUAL expr
   28     | expr . EQUAL expr
   29     | expr . NOTEQUAL expr
   30     | expr . AND expr
   31     | expr . OR expr
   54 member: call '.' ID $@3 call '[' expr . ']'

    AND           shift, and go to state 71
    OR            shift, and go to state 72
    GREATEREQUAL  shift, and go to state 73
    LESSEQUAL     shift, and go to state 74
    EQUAL         shift, and go to state 75
    NOTEQUAL      shift, and go to state 76
    ']'           shift, and go to state 195
    '*'           shift, and go to state 77
    '/'           shift, and go to state 78
    '%'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '>'           shift, and go to state 82
    '<'           shift, and go to state 83


State 191

   82 funcdef: FUNCTION ID $@6 '(' $@7 idlist ')' $@8 . block

    error  shift, and go to state 67
    '{'    shift, and go to state 68

    block  go to state 196


State 192

   95 idlist1: ',' ID idlist1 .

    $default  reduce using rule 95 (idlist1)


State 193

   86 funcdef: FUNCTION $@9 '(' $@10 idlist ')' $@11 block .

    $default  reduce using rule 86 (funcdef)


State 194

  100 forstmt: FOR '(' elist ';' expr ';' elist ')' . stmt

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    CONTINUE    shift, and go to state 5
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    FUNCTION    shift, and go to state 11
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    IF          shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    RETURN      shift, and go to state 18
    '('         shift, and go to state 19
    '['         shift, and go to state 20
    '-'         shift, and go to state 21
    ';'         shift, and go to state 22

    $default  reduce using rule 13 ($@1)

    stmt        go to state 197
    $@1         go to state 26
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    funcdef     go to state 35
    const       go to state 36
    ifstmt      go to state 37
    whilestmt   go to state 38
    forstmt     go to state 39
    returnstmt  go to state 40


State 195

   54 member: call '.' ID $@3 call '[' expr ']' .

    $default  reduce using rule 54 (member)


State 196

   82 funcdef: FUNCTION ID $@6 '(' $@7 idlist ')' $@8 block .

    $default  reduce using rule 82 (funcdef)


State 197

  100 forstmt: FOR '(' elist ';' expr ';' elist ')' stmt .

    $default  reduce using rule 100 (forstmt)
