Terminals unused in grammar

   DOUBLEDOT


State 167 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: stmt1
    2        | %empty

    3 stmt1: stmt1 stmt
    4      | stmt

    5 stmt: expr ';'
    6     | expr error ';'
    7     | ifstmt
    8     | whilestmt
    9     | forstmt
   10     | returnstmt
   11     | BREAK ';'
   12     | CONTINUE ';'

   13 $@1: %empty

   14 $@2: %empty

   15 stmt: $@1 block $@2
   16     | funcdef
   17     | ';'

   18 expr: assignexpr
   19     | expr '+' expr
   20     | expr '-' expr
   21     | expr '*' expr
   22     | expr '/' expr
   23     | expr '%' expr
   24     | expr '>' expr
   25     | expr '<' expr
   26     | expr GREATEREQUAL expr
   27     | expr LESSEQUAL expr
   28     | expr EQUAL expr
   29     | expr NOTEQUAL expr
   30     | expr AND expr
   31     | expr OR expr
   32     | term

   33 term: '(' expr ')'
   34     | '-' expr
   35     | NOT expr
   36     | PLUSPLUS lvalue
   37     | lvalue PLUSPLUS
   38     | MINUSMINUS lvalue
   39     | lvalue MINUSMINUS
   40     | primary

   41 assignexpr: lvalue '=' expr

   42 primary: lvalue
   43        | call
   44        | objectdef
   45        | '(' funcdef ')'
   46        | const

   47 lvalue: ID
   48       | LOCAL ID
   49       | SCOPEOP ID
   50       | member

   51 member: lvalue '.' ID
   52       | lvalue '[' expr ']'
   53       | call '.' ID
   54       | call '[' expr ']'

   55 call: call '(' elist ')'
   56     | lvalue callsuffix
   57     | '(' funcdef ')' '(' elist ')'

   58 callsuffix: normcall
   59           | methodcall

   60 normcall: '(' elist ')'

   61 methodcall: DOUPLEDOT ID '(' elist ')'

   62 elist: %empty
   63      | expr elist1

   64 elist1: %empty
   65       | ',' expr elist1
   66       | error expr elist1

   67 objectdef: '[' elist ']'
   68          | '[' indexed ']'

   69 indexed: indexedelem more

   70 more: ',' indexedelem more
   71     | %empty

   72 indexedelem: '{' expr ':' expr '}'

   73 $@3: %empty

   74 $@4: %empty

   75 block: '{' $@3 stmt1 '}' $@4

   76 $@5: %empty

   77 $@6: %empty

   78 block: '{' $@5 '}' $@6
   79      | error stmt1 '}'
   80      | error '}'

   81 funcname: ID
   82         | %empty

   83 funcprefix: FUNCTION funcname

   84 funcargs: '(' idlist ')'

   85 funcbody: block

   86 funcdef: funcprefix funcargs funcbody

   87 const: NUMBER
   88      | STRING
   89      | NIL
   90      | TRUE
   91      | FALSE

   92 idlist: %empty
   93       | ID idlist1

   94 idlist1: %empty
   95        | ',' ID idlist1

   96 ifstmt: IF '(' expr ')' stmt ifstmt1

   97 ifstmt1: %empty
   98        | ELSE stmt

   99 whilestmt: WHILE '(' expr ')' stmt

  100 forstmt: FOR '(' elist ';' expr ';' elist ')' stmt

  101 returnstmt: RETURN ';'
  102           | RETURN expr ';'


Terminals, with rules where they appear

$end (0) 0
'%' (37) 23
'(' (40) 33 45 55 57 60 61 84 96 99 100
')' (41) 33 45 55 57 60 61 84 96 99 100
'*' (42) 21
'+' (43) 19
',' (44) 65 70 95
'-' (45) 20 34
'.' (46) 51 53
'/' (47) 22
':' (58) 72
';' (59) 5 6 11 12 17 100 101 102
'<' (60) 25
'=' (61) 41
'>' (62) 24
'[' (91) 52 54 67 68
']' (93) 52 54 67 68
'{' (123) 72 75 78
'}' (125) 72 75 78 79 80
error (256) 6 66 79 80
ID (258) 47 48 49 51 53 61 81 93 95
NUMBER (259) 87
STRING (260) 88
BREAK (261) 11
CONTINUE (262) 12
AND (263) 30
OR (264) 31
NOT (265) 35
GREATEREQUAL (266) 26
LESSEQUAL (267) 27
EQUAL (268) 28
NOTEQUAL (269) 29
PLUSPLUS (270) 36 37
MINUSMINUS (271) 38 39
LOCAL (272) 48
SCOPEOP (273) 49
DOUPLEDOT (274) 61
FUNCTION (275) 83
NIL (276) 89
TRUE (277) 90
FALSE (278) 91
IF (279) 96
ELSE (280) 98
WHILE (281) 99
FOR (282) 100
RETURN (283) 101 102
UMINUS (284)
DOUBLEDOT (285)


Nonterminals, with rules where they appear

$accept (49)
    on left: 0
program (50)
    on left: 1 2, on right: 0
stmt1 (51)
    on left: 3 4, on right: 1 3 75 79
stmt (52)
    on left: 5 6 7 8 9 10 11 12 15 16 17, on right: 3 4 96 98 99 100
$@1 (53)
    on left: 13, on right: 15
$@2 (54)
    on left: 14, on right: 15
expr (55)
    on left: 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32, on right:
    5 6 19 20 21 22 23 24 25 26 27 28 29 30 31 33 34 35 41 52 54 63
    65 66 72 96 99 100 102
term (56)
    on left: 33 34 35 36 37 38 39 40, on right: 32
assignexpr (57)
    on left: 41, on right: 18
primary (58)
    on left: 42 43 44 45 46, on right: 40
lvalue (59)
    on left: 47 48 49 50, on right: 36 37 38 39 41 42 51 52 56
member (60)
    on left: 51 52 53 54, on right: 50
call (61)
    on left: 55 56 57, on right: 43 53 54 55
callsuffix (62)
    on left: 58 59, on right: 56
normcall (63)
    on left: 60, on right: 58
methodcall (64)
    on left: 61, on right: 59
elist (65)
    on left: 62 63, on right: 55 57 60 61 67 100
elist1 (66)
    on left: 64 65 66, on right: 63 65 66
objectdef (67)
    on left: 67 68, on right: 44
indexed (68)
    on left: 69, on right: 68
more (69)
    on left: 70 71, on right: 69 70
indexedelem (70)
    on left: 72, on right: 69 70
block (71)
    on left: 75 78 79 80, on right: 15 85
$@3 (72)
    on left: 73, on right: 75
$@4 (73)
    on left: 74, on right: 75
$@5 (74)
    on left: 76, on right: 78
$@6 (75)
    on left: 77, on right: 78
funcname (76)
    on left: 81 82, on right: 83
funcprefix (77)
    on left: 83, on right: 86
funcargs (78)
    on left: 84, on right: 86
funcbody (79)
    on left: 85, on right: 86
funcdef (80)
    on left: 86, on right: 16 45 57
const (81)
    on left: 87 88 89 90 91, on right: 46
idlist (82)
    on left: 92 93, on right: 84
idlist1 (83)
    on left: 94 95, on right: 93 95
ifstmt (84)
    on left: 96, on right: 7
ifstmt1 (85)
    on left: 97 98, on right: 96
whilestmt (86)
    on left: 99, on right: 8
forstmt (87)
    on left: 100, on right: 9
returnstmt (88)
    on left: 101 102, on right: 10


State 0

    0 $accept: . program $end

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    CONTINUE    shift, and go to state 5
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    FUNCTION    shift, and go to state 11
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    IF          shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    RETURN      shift, and go to state 18
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21
    ';'         shift, and go to state 22

    $end      reduce using rule 2 (program)
    $default  reduce using rule 13 ($@1)

    program     go to state 23
    stmt1       go to state 24
    stmt        go to state 25
    $@1         go to state 26
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    funcprefix  go to state 35
    funcdef     go to state 36
    const       go to state 37
    ifstmt      go to state 38
    whilestmt   go to state 39
    forstmt     go to state 40
    returnstmt  go to state 41


State 1

   47 lvalue: ID .

    $default  reduce using rule 47 (lvalue)


State 2

   87 const: NUMBER .

    $default  reduce using rule 87 (const)


State 3

   88 const: STRING .

    $default  reduce using rule 88 (const)


State 4

   11 stmt: BREAK . ';'

    ';'  shift, and go to state 42


State 5

   12 stmt: CONTINUE . ';'

    ';'  shift, and go to state 43


State 6

   35 term: NOT . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    expr        go to state 44
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 7

   36 term: PLUSPLUS . lvalue

    ID       shift, and go to state 1
    LOCAL    shift, and go to state 9
    SCOPEOP  shift, and go to state 10
    '('      shift, and go to state 45

    lvalue  go to state 46
    member  go to state 32
    call    go to state 47


State 8

   38 term: MINUSMINUS . lvalue

    ID       shift, and go to state 1
    LOCAL    shift, and go to state 9
    SCOPEOP  shift, and go to state 10
    '('      shift, and go to state 45

    lvalue  go to state 48
    member  go to state 32
    call    go to state 47


State 9

   48 lvalue: LOCAL . ID

    ID  shift, and go to state 49


State 10

   49 lvalue: SCOPEOP . ID

    ID  shift, and go to state 50


State 11

   83 funcprefix: FUNCTION . funcname

    ID  shift, and go to state 51

    $default  reduce using rule 82 (funcname)

    funcname  go to state 52


State 12

   89 const: NIL .

    $default  reduce using rule 89 (const)


State 13

   90 const: TRUE .

    $default  reduce using rule 90 (const)


State 14

   91 const: FALSE .

    $default  reduce using rule 91 (const)


State 15

   96 ifstmt: IF . '(' expr ')' stmt ifstmt1

    '('  shift, and go to state 53


State 16

   99 whilestmt: WHILE . '(' expr ')' stmt

    '('  shift, and go to state 54


State 17

  100 forstmt: FOR . '(' elist ';' expr ';' elist ')' stmt

    '('  shift, and go to state 55


State 18

  101 returnstmt: RETURN . ';'
  102           | RETURN . expr ';'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21
    ';'         shift, and go to state 56

    expr        go to state 57
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 19

   34 term: '-' . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    expr        go to state 58
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 20

   67 objectdef: '[' . elist ']'
   68          | '[' . indexed ']'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21
    '{'         shift, and go to state 59

    $default  reduce using rule 62 (elist)

    expr         go to state 60
    term         go to state 28
    assignexpr   go to state 29
    primary      go to state 30
    lvalue       go to state 31
    member       go to state 32
    call         go to state 33
    elist        go to state 61
    objectdef    go to state 34
    indexed      go to state 62
    indexedelem  go to state 63
    const        go to state 37


State 21

   33 term: '(' . expr ')'
   45 primary: '(' . funcdef ')'
   57 call: '(' . funcdef ')' '(' elist ')'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    FUNCTION    shift, and go to state 11
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    expr        go to state 64
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    funcprefix  go to state 35
    funcdef     go to state 65
    const       go to state 37


State 22

   17 stmt: ';' .

    $default  reduce using rule 17 (stmt)


State 23

    0 $accept: program . $end

    $end  shift, and go to state 66


State 24

    1 program: stmt1 .
    3 stmt1: stmt1 . stmt

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    CONTINUE    shift, and go to state 5
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    FUNCTION    shift, and go to state 11
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    IF          shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    RETURN      shift, and go to state 18
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21
    ';'         shift, and go to state 22

    $end      reduce using rule 1 (program)
    $default  reduce using rule 13 ($@1)

    stmt        go to state 67
    $@1         go to state 26
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    funcprefix  go to state 35
    funcdef     go to state 36
    const       go to state 37
    ifstmt      go to state 38
    whilestmt   go to state 39
    forstmt     go to state 40
    returnstmt  go to state 41


State 25

    4 stmt1: stmt .

    $default  reduce using rule 4 (stmt1)


State 26

   15 stmt: $@1 . block $@2

    error  shift, and go to state 68
    '{'    shift, and go to state 69

    block  go to state 70


State 27

    5 stmt: expr . ';'
    6     | expr . error ';'
   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '%' expr
   24     | expr . '>' expr
   25     | expr . '<' expr
   26     | expr . GREATEREQUAL expr
   27     | expr . LESSEQUAL expr
   28     | expr . EQUAL expr
   29     | expr . NOTEQUAL expr
   30     | expr . AND expr
   31     | expr . OR expr

    error         shift, and go to state 71
    AND           shift, and go to state 72
    OR            shift, and go to state 73
    GREATEREQUAL  shift, and go to state 74
    LESSEQUAL     shift, and go to state 75
    EQUAL         shift, and go to state 76
    NOTEQUAL      shift, and go to state 77
    '>'           shift, and go to state 78
    '<'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83
    '%'           shift, and go to state 84
    ';'           shift, and go to state 85


State 28

   32 expr: term .

    $default  reduce using rule 32 (expr)


State 29

   18 expr: assignexpr .

    $default  reduce using rule 18 (expr)


State 30

   40 term: primary .

    $default  reduce using rule 40 (term)


State 31

   37 term: lvalue . PLUSPLUS
   39     | lvalue . MINUSMINUS
   41 assignexpr: lvalue . '=' expr
   42 primary: lvalue .
   51 member: lvalue . '.' ID
   52       | lvalue . '[' expr ']'
   56 call: lvalue . callsuffix

    PLUSPLUS    shift, and go to state 86
    MINUSMINUS  shift, and go to state 87
    DOUPLEDOT   shift, and go to state 88
    '='         shift, and go to state 89
    '.'         shift, and go to state 90
    '['         shift, and go to state 91
    '('         shift, and go to state 92

    $default  reduce using rule 42 (primary)

    callsuffix  go to state 93
    normcall    go to state 94
    methodcall  go to state 95


State 32

   50 lvalue: member .

    $default  reduce using rule 50 (lvalue)


State 33

   43 primary: call .
   53 member: call . '.' ID
   54       | call . '[' expr ']'
   55 call: call . '(' elist ')'

    '.'  shift, and go to state 96
    '['  shift, and go to state 97
    '('  shift, and go to state 98

    $default  reduce using rule 43 (primary)


State 34

   44 primary: objectdef .

    $default  reduce using rule 44 (primary)


State 35

   86 funcdef: funcprefix . funcargs funcbody

    '('  shift, and go to state 99

    funcargs  go to state 100


State 36

   16 stmt: funcdef .

    $default  reduce using rule 16 (stmt)


State 37

   46 primary: const .

    $default  reduce using rule 46 (primary)


State 38

    7 stmt: ifstmt .

    $default  reduce using rule 7 (stmt)


State 39

    8 stmt: whilestmt .

    $default  reduce using rule 8 (stmt)


State 40

    9 stmt: forstmt .

    $default  reduce using rule 9 (stmt)


State 41

   10 stmt: returnstmt .

    $default  reduce using rule 10 (stmt)


State 42

   11 stmt: BREAK ';' .

    $default  reduce using rule 11 (stmt)


State 43

   12 stmt: CONTINUE ';' .

    $default  reduce using rule 12 (stmt)


State 44

   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '%' expr
   24     | expr . '>' expr
   25     | expr . '<' expr
   26     | expr . GREATEREQUAL expr
   27     | expr . LESSEQUAL expr
   28     | expr . EQUAL expr
   29     | expr . NOTEQUAL expr
   30     | expr . AND expr
   31     | expr . OR expr
   35 term: NOT expr .

    $default  reduce using rule 35 (term)


State 45

   57 call: '(' . funcdef ')' '(' elist ')'

    FUNCTION  shift, and go to state 11

    funcprefix  go to state 35
    funcdef     go to state 101


State 46

   36 term: PLUSPLUS lvalue .
   51 member: lvalue . '.' ID
   52       | lvalue . '[' expr ']'
   56 call: lvalue . callsuffix

    DOUPLEDOT  shift, and go to state 88
    '.'        shift, and go to state 90
    '['        shift, and go to state 91
    '('        shift, and go to state 92

    $default  reduce using rule 36 (term)

    callsuffix  go to state 93
    normcall    go to state 94
    methodcall  go to state 95


State 47

   53 member: call . '.' ID
   54       | call . '[' expr ']'
   55 call: call . '(' elist ')'

    '.'  shift, and go to state 96
    '['  shift, and go to state 97
    '('  shift, and go to state 98


State 48

   38 term: MINUSMINUS lvalue .
   51 member: lvalue . '.' ID
   52       | lvalue . '[' expr ']'
   56 call: lvalue . callsuffix

    DOUPLEDOT  shift, and go to state 88
    '.'        shift, and go to state 90
    '['        shift, and go to state 91
    '('        shift, and go to state 92

    $default  reduce using rule 38 (term)

    callsuffix  go to state 93
    normcall    go to state 94
    methodcall  go to state 95


State 49

   48 lvalue: LOCAL ID .

    $default  reduce using rule 48 (lvalue)


State 50

   49 lvalue: SCOPEOP ID .

    $default  reduce using rule 49 (lvalue)


State 51

   81 funcname: ID .

    $default  reduce using rule 81 (funcname)


State 52

   83 funcprefix: FUNCTION funcname .

    $default  reduce using rule 83 (funcprefix)


State 53

   96 ifstmt: IF '(' . expr ')' stmt ifstmt1

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    expr        go to state 102
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 54

   99 whilestmt: WHILE '(' . expr ')' stmt

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    expr        go to state 103
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 55

  100 forstmt: FOR '(' . elist ';' expr ';' elist ')' stmt

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    $default  reduce using rule 62 (elist)

    expr        go to state 60
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 104
    objectdef   go to state 34
    const       go to state 37


State 56

  101 returnstmt: RETURN ';' .

    $default  reduce using rule 101 (returnstmt)


State 57

   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '%' expr
   24     | expr . '>' expr
   25     | expr . '<' expr
   26     | expr . GREATEREQUAL expr
   27     | expr . LESSEQUAL expr
   28     | expr . EQUAL expr
   29     | expr . NOTEQUAL expr
   30     | expr . AND expr
   31     | expr . OR expr
  102 returnstmt: RETURN expr . ';'

    AND           shift, and go to state 72
    OR            shift, and go to state 73
    GREATEREQUAL  shift, and go to state 74
    LESSEQUAL     shift, and go to state 75
    EQUAL         shift, and go to state 76
    NOTEQUAL      shift, and go to state 77
    '>'           shift, and go to state 78
    '<'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83
    '%'           shift, and go to state 84
    ';'           shift, and go to state 105


State 58

   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '%' expr
   24     | expr . '>' expr
   25     | expr . '<' expr
   26     | expr . GREATEREQUAL expr
   27     | expr . LESSEQUAL expr
   28     | expr . EQUAL expr
   29     | expr . NOTEQUAL expr
   30     | expr . AND expr
   31     | expr . OR expr
   34 term: '-' expr .

    $default  reduce using rule 34 (term)


State 59

   72 indexedelem: '{' . expr ':' expr '}'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    expr        go to state 106
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 60

   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '%' expr
   24     | expr . '>' expr
   25     | expr . '<' expr
   26     | expr . GREATEREQUAL expr
   27     | expr . LESSEQUAL expr
   28     | expr . EQUAL expr
   29     | expr . NOTEQUAL expr
   30     | expr . AND expr
   31     | expr . OR expr
   63 elist: expr . elist1

    error         shift, and go to state 107
    AND           shift, and go to state 72
    OR            shift, and go to state 73
    GREATEREQUAL  shift, and go to state 74
    LESSEQUAL     shift, and go to state 75
    EQUAL         shift, and go to state 76
    NOTEQUAL      shift, and go to state 77
    '>'           shift, and go to state 78
    '<'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83
    '%'           shift, and go to state 84
    ','           shift, and go to state 108

    ']'  reduce using rule 64 (elist1)
    ')'  reduce using rule 64 (elist1)
    ';'  reduce using rule 64 (elist1)

    elist1  go to state 109


State 61

   67 objectdef: '[' elist . ']'

    ']'  shift, and go to state 110


State 62

   68 objectdef: '[' indexed . ']'

    ']'  shift, and go to state 111


State 63

   69 indexed: indexedelem . more

    ','  shift, and go to state 112

    $default  reduce using rule 71 (more)

    more  go to state 113


State 64

   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '%' expr
   24     | expr . '>' expr
   25     | expr . '<' expr
   26     | expr . GREATEREQUAL expr
   27     | expr . LESSEQUAL expr
   28     | expr . EQUAL expr
   29     | expr . NOTEQUAL expr
   30     | expr . AND expr
   31     | expr . OR expr
   33 term: '(' expr . ')'

    AND           shift, and go to state 72
    OR            shift, and go to state 73
    GREATEREQUAL  shift, and go to state 74
    LESSEQUAL     shift, and go to state 75
    EQUAL         shift, and go to state 76
    NOTEQUAL      shift, and go to state 77
    '>'           shift, and go to state 78
    '<'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83
    '%'           shift, and go to state 84
    ')'           shift, and go to state 114


State 65

   45 primary: '(' funcdef . ')'
   57 call: '(' funcdef . ')' '(' elist ')'

    ')'  shift, and go to state 115


State 66

    0 $accept: program $end .

    $default  accept


State 67

    3 stmt1: stmt1 stmt .

    $default  reduce using rule 3 (stmt1)


State 68

   79 block: error . stmt1 '}'
   80      | error . '}'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    CONTINUE    shift, and go to state 5
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    FUNCTION    shift, and go to state 11
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    IF          shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    RETURN      shift, and go to state 18
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21
    ';'         shift, and go to state 22
    '}'         shift, and go to state 116

    $default  reduce using rule 13 ($@1)

    stmt1       go to state 117
    stmt        go to state 25
    $@1         go to state 26
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    funcprefix  go to state 35
    funcdef     go to state 36
    const       go to state 37
    ifstmt      go to state 38
    whilestmt   go to state 39
    forstmt     go to state 40
    returnstmt  go to state 41


State 69

   75 block: '{' . $@3 stmt1 '}' $@4
   78      | '{' . $@5 '}' $@6

    '}'       reduce using rule 76 ($@5)
    $default  reduce using rule 73 ($@3)

    $@3  go to state 118
    $@5  go to state 119


State 70

   15 stmt: $@1 block . $@2

    $default  reduce using rule 14 ($@2)

    $@2  go to state 120


State 71

    6 stmt: expr error . ';'

    ';'  shift, and go to state 121


State 72

   30 expr: expr AND . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    expr        go to state 122
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 73

   31 expr: expr OR . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    expr        go to state 123
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 74

   26 expr: expr GREATEREQUAL . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    expr        go to state 124
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 75

   27 expr: expr LESSEQUAL . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    expr        go to state 125
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 76

   28 expr: expr EQUAL . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    expr        go to state 126
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 77

   29 expr: expr NOTEQUAL . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    expr        go to state 127
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 78

   24 expr: expr '>' . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    expr        go to state 128
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 79

   25 expr: expr '<' . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    expr        go to state 129
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 80

   19 expr: expr '+' . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    expr        go to state 130
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 81

   20 expr: expr '-' . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    expr        go to state 131
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 82

   21 expr: expr '*' . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    expr        go to state 132
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 83

   22 expr: expr '/' . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    expr        go to state 133
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 84

   23 expr: expr '%' . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    expr        go to state 134
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 85

    5 stmt: expr ';' .

    $default  reduce using rule 5 (stmt)


State 86

   37 term: lvalue PLUSPLUS .

    $default  reduce using rule 37 (term)


State 87

   39 term: lvalue MINUSMINUS .

    $default  reduce using rule 39 (term)


State 88

   61 methodcall: DOUPLEDOT . ID '(' elist ')'

    ID  shift, and go to state 135


State 89

   41 assignexpr: lvalue '=' . expr

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    expr        go to state 136
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 90

   51 member: lvalue '.' . ID

    ID  shift, and go to state 137


State 91

   52 member: lvalue '[' . expr ']'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    expr        go to state 138
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 92

   60 normcall: '(' . elist ')'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    $default  reduce using rule 62 (elist)

    expr        go to state 60
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 139
    objectdef   go to state 34
    const       go to state 37


State 93

   56 call: lvalue callsuffix .

    $default  reduce using rule 56 (call)


State 94

   58 callsuffix: normcall .

    $default  reduce using rule 58 (callsuffix)


State 95

   59 callsuffix: methodcall .

    $default  reduce using rule 59 (callsuffix)


State 96

   53 member: call '.' . ID

    ID  shift, and go to state 140


State 97

   54 member: call '[' . expr ']'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    expr        go to state 141
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 98

   55 call: call '(' . elist ')'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    $default  reduce using rule 62 (elist)

    expr        go to state 60
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 142
    objectdef   go to state 34
    const       go to state 37


State 99

   84 funcargs: '(' . idlist ')'

    ID  shift, and go to state 143

    $default  reduce using rule 92 (idlist)

    idlist  go to state 144


State 100

   86 funcdef: funcprefix funcargs . funcbody

    error  shift, and go to state 68
    '{'    shift, and go to state 69

    block     go to state 145
    funcbody  go to state 146


State 101

   57 call: '(' funcdef . ')' '(' elist ')'

    ')'  shift, and go to state 147


State 102

   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '%' expr
   24     | expr . '>' expr
   25     | expr . '<' expr
   26     | expr . GREATEREQUAL expr
   27     | expr . LESSEQUAL expr
   28     | expr . EQUAL expr
   29     | expr . NOTEQUAL expr
   30     | expr . AND expr
   31     | expr . OR expr
   96 ifstmt: IF '(' expr . ')' stmt ifstmt1

    AND           shift, and go to state 72
    OR            shift, and go to state 73
    GREATEREQUAL  shift, and go to state 74
    LESSEQUAL     shift, and go to state 75
    EQUAL         shift, and go to state 76
    NOTEQUAL      shift, and go to state 77
    '>'           shift, and go to state 78
    '<'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83
    '%'           shift, and go to state 84
    ')'           shift, and go to state 148


State 103

   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '%' expr
   24     | expr . '>' expr
   25     | expr . '<' expr
   26     | expr . GREATEREQUAL expr
   27     | expr . LESSEQUAL expr
   28     | expr . EQUAL expr
   29     | expr . NOTEQUAL expr
   30     | expr . AND expr
   31     | expr . OR expr
   99 whilestmt: WHILE '(' expr . ')' stmt

    AND           shift, and go to state 72
    OR            shift, and go to state 73
    GREATEREQUAL  shift, and go to state 74
    LESSEQUAL     shift, and go to state 75
    EQUAL         shift, and go to state 76
    NOTEQUAL      shift, and go to state 77
    '>'           shift, and go to state 78
    '<'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83
    '%'           shift, and go to state 84
    ')'           shift, and go to state 149


State 104

  100 forstmt: FOR '(' elist . ';' expr ';' elist ')' stmt

    ';'  shift, and go to state 150


State 105

  102 returnstmt: RETURN expr ';' .

    $default  reduce using rule 102 (returnstmt)


State 106

   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '%' expr
   24     | expr . '>' expr
   25     | expr . '<' expr
   26     | expr . GREATEREQUAL expr
   27     | expr . LESSEQUAL expr
   28     | expr . EQUAL expr
   29     | expr . NOTEQUAL expr
   30     | expr . AND expr
   31     | expr . OR expr
   72 indexedelem: '{' expr . ':' expr '}'

    AND           shift, and go to state 72
    OR            shift, and go to state 73
    GREATEREQUAL  shift, and go to state 74
    LESSEQUAL     shift, and go to state 75
    EQUAL         shift, and go to state 76
    NOTEQUAL      shift, and go to state 77
    '>'           shift, and go to state 78
    '<'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83
    '%'           shift, and go to state 84
    ':'           shift, and go to state 151


State 107

   66 elist1: error . expr elist1

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    expr        go to state 152
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 108

   65 elist1: ',' . expr elist1

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    expr        go to state 153
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 109

   63 elist: expr elist1 .

    $default  reduce using rule 63 (elist)


State 110

   67 objectdef: '[' elist ']' .

    $default  reduce using rule 67 (objectdef)


State 111

   68 objectdef: '[' indexed ']' .

    $default  reduce using rule 68 (objectdef)


State 112

   70 more: ',' . indexedelem more

    '{'  shift, and go to state 59

    indexedelem  go to state 154


State 113

   69 indexed: indexedelem more .

    $default  reduce using rule 69 (indexed)


State 114

   33 term: '(' expr ')' .

    $default  reduce using rule 33 (term)


State 115

   45 primary: '(' funcdef ')' .
   57 call: '(' funcdef ')' . '(' elist ')'

    '('  shift, and go to state 155

    $default  reduce using rule 45 (primary)


State 116

   80 block: error '}' .

    $default  reduce using rule 80 (block)


State 117

    3 stmt1: stmt1 . stmt
   79 block: error stmt1 . '}'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    CONTINUE    shift, and go to state 5
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    FUNCTION    shift, and go to state 11
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    IF          shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    RETURN      shift, and go to state 18
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21
    ';'         shift, and go to state 22
    '}'         shift, and go to state 156

    $default  reduce using rule 13 ($@1)

    stmt        go to state 67
    $@1         go to state 26
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    funcprefix  go to state 35
    funcdef     go to state 36
    const       go to state 37
    ifstmt      go to state 38
    whilestmt   go to state 39
    forstmt     go to state 40
    returnstmt  go to state 41


State 118

   75 block: '{' $@3 . stmt1 '}' $@4

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    CONTINUE    shift, and go to state 5
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    FUNCTION    shift, and go to state 11
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    IF          shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    RETURN      shift, and go to state 18
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21
    ';'         shift, and go to state 22

    $default  reduce using rule 13 ($@1)

    stmt1       go to state 157
    stmt        go to state 25
    $@1         go to state 26
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    funcprefix  go to state 35
    funcdef     go to state 36
    const       go to state 37
    ifstmt      go to state 38
    whilestmt   go to state 39
    forstmt     go to state 40
    returnstmt  go to state 41


State 119

   78 block: '{' $@5 . '}' $@6

    '}'  shift, and go to state 158


State 120

   15 stmt: $@1 block $@2 .

    $default  reduce using rule 15 (stmt)


State 121

    6 stmt: expr error ';' .

    $default  reduce using rule 6 (stmt)


State 122

   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '%' expr
   24     | expr . '>' expr
   25     | expr . '<' expr
   26     | expr . GREATEREQUAL expr
   27     | expr . LESSEQUAL expr
   28     | expr . EQUAL expr
   29     | expr . NOTEQUAL expr
   30     | expr . AND expr
   30     | expr AND expr .
   31     | expr . OR expr

    GREATEREQUAL  shift, and go to state 74
    LESSEQUAL     shift, and go to state 75
    EQUAL         shift, and go to state 76
    NOTEQUAL      shift, and go to state 77
    '>'           shift, and go to state 78
    '<'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83
    '%'           shift, and go to state 84

    $default  reduce using rule 30 (expr)


State 123

   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '%' expr
   24     | expr . '>' expr
   25     | expr . '<' expr
   26     | expr . GREATEREQUAL expr
   27     | expr . LESSEQUAL expr
   28     | expr . EQUAL expr
   29     | expr . NOTEQUAL expr
   30     | expr . AND expr
   31     | expr . OR expr
   31     | expr OR expr .

    AND           shift, and go to state 72
    GREATEREQUAL  shift, and go to state 74
    LESSEQUAL     shift, and go to state 75
    EQUAL         shift, and go to state 76
    NOTEQUAL      shift, and go to state 77
    '>'           shift, and go to state 78
    '<'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83
    '%'           shift, and go to state 84

    $default  reduce using rule 31 (expr)


State 124

   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '%' expr
   24     | expr . '>' expr
   25     | expr . '<' expr
   26     | expr . GREATEREQUAL expr
   26     | expr GREATEREQUAL expr .
   27     | expr . LESSEQUAL expr
   28     | expr . EQUAL expr
   29     | expr . NOTEQUAL expr
   30     | expr . AND expr
   31     | expr . OR expr

    '+'  shift, and go to state 80
    '-'  shift, and go to state 81
    '*'  shift, and go to state 82
    '/'  shift, and go to state 83
    '%'  shift, and go to state 84

    GREATEREQUAL  error (nonassociative)
    LESSEQUAL     error (nonassociative)
    '>'           error (nonassociative)
    '<'           error (nonassociative)

    $default  reduce using rule 26 (expr)


State 125

   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '%' expr
   24     | expr . '>' expr
   25     | expr . '<' expr
   26     | expr . GREATEREQUAL expr
   27     | expr . LESSEQUAL expr
   27     | expr LESSEQUAL expr .
   28     | expr . EQUAL expr
   29     | expr . NOTEQUAL expr
   30     | expr . AND expr
   31     | expr . OR expr

    '+'  shift, and go to state 80
    '-'  shift, and go to state 81
    '*'  shift, and go to state 82
    '/'  shift, and go to state 83
    '%'  shift, and go to state 84

    GREATEREQUAL  error (nonassociative)
    LESSEQUAL     error (nonassociative)
    '>'           error (nonassociative)
    '<'           error (nonassociative)

    $default  reduce using rule 27 (expr)


State 126

   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '%' expr
   24     | expr . '>' expr
   25     | expr . '<' expr
   26     | expr . GREATEREQUAL expr
   27     | expr . LESSEQUAL expr
   28     | expr . EQUAL expr
   28     | expr EQUAL expr .
   29     | expr . NOTEQUAL expr
   30     | expr . AND expr
   31     | expr . OR expr

    GREATEREQUAL  shift, and go to state 74
    LESSEQUAL     shift, and go to state 75
    '>'           shift, and go to state 78
    '<'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83
    '%'           shift, and go to state 84

    EQUAL     error (nonassociative)
    NOTEQUAL  error (nonassociative)

    $default  reduce using rule 28 (expr)


State 127

   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '%' expr
   24     | expr . '>' expr
   25     | expr . '<' expr
   26     | expr . GREATEREQUAL expr
   27     | expr . LESSEQUAL expr
   28     | expr . EQUAL expr
   29     | expr . NOTEQUAL expr
   29     | expr NOTEQUAL expr .
   30     | expr . AND expr
   31     | expr . OR expr

    GREATEREQUAL  shift, and go to state 74
    LESSEQUAL     shift, and go to state 75
    '>'           shift, and go to state 78
    '<'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83
    '%'           shift, and go to state 84

    EQUAL     error (nonassociative)
    NOTEQUAL  error (nonassociative)

    $default  reduce using rule 29 (expr)


State 128

   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '%' expr
   24     | expr . '>' expr
   24     | expr '>' expr .
   25     | expr . '<' expr
   26     | expr . GREATEREQUAL expr
   27     | expr . LESSEQUAL expr
   28     | expr . EQUAL expr
   29     | expr . NOTEQUAL expr
   30     | expr . AND expr
   31     | expr . OR expr

    '+'  shift, and go to state 80
    '-'  shift, and go to state 81
    '*'  shift, and go to state 82
    '/'  shift, and go to state 83
    '%'  shift, and go to state 84

    GREATEREQUAL  error (nonassociative)
    LESSEQUAL     error (nonassociative)
    '>'           error (nonassociative)
    '<'           error (nonassociative)

    $default  reduce using rule 24 (expr)


State 129

   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '%' expr
   24     | expr . '>' expr
   25     | expr . '<' expr
   25     | expr '<' expr .
   26     | expr . GREATEREQUAL expr
   27     | expr . LESSEQUAL expr
   28     | expr . EQUAL expr
   29     | expr . NOTEQUAL expr
   30     | expr . AND expr
   31     | expr . OR expr

    '+'  shift, and go to state 80
    '-'  shift, and go to state 81
    '*'  shift, and go to state 82
    '/'  shift, and go to state 83
    '%'  shift, and go to state 84

    GREATEREQUAL  error (nonassociative)
    LESSEQUAL     error (nonassociative)
    '>'           error (nonassociative)
    '<'           error (nonassociative)

    $default  reduce using rule 25 (expr)


State 130

   19 expr: expr . '+' expr
   19     | expr '+' expr .
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '%' expr
   24     | expr . '>' expr
   25     | expr . '<' expr
   26     | expr . GREATEREQUAL expr
   27     | expr . LESSEQUAL expr
   28     | expr . EQUAL expr
   29     | expr . NOTEQUAL expr
   30     | expr . AND expr
   31     | expr . OR expr

    '*'  shift, and go to state 82
    '/'  shift, and go to state 83
    '%'  shift, and go to state 84

    $default  reduce using rule 19 (expr)


State 131

   19 expr: expr . '+' expr
   20     | expr . '-' expr
   20     | expr '-' expr .
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '%' expr
   24     | expr . '>' expr
   25     | expr . '<' expr
   26     | expr . GREATEREQUAL expr
   27     | expr . LESSEQUAL expr
   28     | expr . EQUAL expr
   29     | expr . NOTEQUAL expr
   30     | expr . AND expr
   31     | expr . OR expr

    '*'  shift, and go to state 82
    '/'  shift, and go to state 83
    '%'  shift, and go to state 84

    $default  reduce using rule 20 (expr)


State 132

   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   21     | expr '*' expr .
   22     | expr . '/' expr
   23     | expr . '%' expr
   24     | expr . '>' expr
   25     | expr . '<' expr
   26     | expr . GREATEREQUAL expr
   27     | expr . LESSEQUAL expr
   28     | expr . EQUAL expr
   29     | expr . NOTEQUAL expr
   30     | expr . AND expr
   31     | expr . OR expr

    $default  reduce using rule 21 (expr)


State 133

   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   22     | expr '/' expr .
   23     | expr . '%' expr
   24     | expr . '>' expr
   25     | expr . '<' expr
   26     | expr . GREATEREQUAL expr
   27     | expr . LESSEQUAL expr
   28     | expr . EQUAL expr
   29     | expr . NOTEQUAL expr
   30     | expr . AND expr
   31     | expr . OR expr

    $default  reduce using rule 22 (expr)


State 134

   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '%' expr
   23     | expr '%' expr .
   24     | expr . '>' expr
   25     | expr . '<' expr
   26     | expr . GREATEREQUAL expr
   27     | expr . LESSEQUAL expr
   28     | expr . EQUAL expr
   29     | expr . NOTEQUAL expr
   30     | expr . AND expr
   31     | expr . OR expr

    $default  reduce using rule 23 (expr)


State 135

   61 methodcall: DOUPLEDOT ID . '(' elist ')'

    '('  shift, and go to state 159


State 136

   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '%' expr
   24     | expr . '>' expr
   25     | expr . '<' expr
   26     | expr . GREATEREQUAL expr
   27     | expr . LESSEQUAL expr
   28     | expr . EQUAL expr
   29     | expr . NOTEQUAL expr
   30     | expr . AND expr
   31     | expr . OR expr
   41 assignexpr: lvalue '=' expr .

    AND           shift, and go to state 72
    OR            shift, and go to state 73
    GREATEREQUAL  shift, and go to state 74
    LESSEQUAL     shift, and go to state 75
    EQUAL         shift, and go to state 76
    NOTEQUAL      shift, and go to state 77
    '>'           shift, and go to state 78
    '<'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83
    '%'           shift, and go to state 84

    $default  reduce using rule 41 (assignexpr)


State 137

   51 member: lvalue '.' ID .

    $default  reduce using rule 51 (member)


State 138

   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '%' expr
   24     | expr . '>' expr
   25     | expr . '<' expr
   26     | expr . GREATEREQUAL expr
   27     | expr . LESSEQUAL expr
   28     | expr . EQUAL expr
   29     | expr . NOTEQUAL expr
   30     | expr . AND expr
   31     | expr . OR expr
   52 member: lvalue '[' expr . ']'

    AND           shift, and go to state 72
    OR            shift, and go to state 73
    GREATEREQUAL  shift, and go to state 74
    LESSEQUAL     shift, and go to state 75
    EQUAL         shift, and go to state 76
    NOTEQUAL      shift, and go to state 77
    '>'           shift, and go to state 78
    '<'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83
    '%'           shift, and go to state 84
    ']'           shift, and go to state 160


State 139

   60 normcall: '(' elist . ')'

    ')'  shift, and go to state 161


State 140

   53 member: call '.' ID .

    $default  reduce using rule 53 (member)


State 141

   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '%' expr
   24     | expr . '>' expr
   25     | expr . '<' expr
   26     | expr . GREATEREQUAL expr
   27     | expr . LESSEQUAL expr
   28     | expr . EQUAL expr
   29     | expr . NOTEQUAL expr
   30     | expr . AND expr
   31     | expr . OR expr
   54 member: call '[' expr . ']'

    AND           shift, and go to state 72
    OR            shift, and go to state 73
    GREATEREQUAL  shift, and go to state 74
    LESSEQUAL     shift, and go to state 75
    EQUAL         shift, and go to state 76
    NOTEQUAL      shift, and go to state 77
    '>'           shift, and go to state 78
    '<'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83
    '%'           shift, and go to state 84
    ']'           shift, and go to state 162


State 142

   55 call: call '(' elist . ')'

    ')'  shift, and go to state 163


State 143

   93 idlist: ID . idlist1

    ','  shift, and go to state 164

    $default  reduce using rule 94 (idlist1)

    idlist1  go to state 165


State 144

   84 funcargs: '(' idlist . ')'

    ')'  shift, and go to state 166


State 145

   85 funcbody: block .

    $default  reduce using rule 85 (funcbody)


State 146

   86 funcdef: funcprefix funcargs funcbody .

    $default  reduce using rule 86 (funcdef)


State 147

   57 call: '(' funcdef ')' . '(' elist ')'

    '('  shift, and go to state 155


State 148

   96 ifstmt: IF '(' expr ')' . stmt ifstmt1

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    CONTINUE    shift, and go to state 5
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    FUNCTION    shift, and go to state 11
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    IF          shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    RETURN      shift, and go to state 18
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21
    ';'         shift, and go to state 22

    $default  reduce using rule 13 ($@1)

    stmt        go to state 167
    $@1         go to state 26
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    funcprefix  go to state 35
    funcdef     go to state 36
    const       go to state 37
    ifstmt      go to state 38
    whilestmt   go to state 39
    forstmt     go to state 40
    returnstmt  go to state 41


State 149

   99 whilestmt: WHILE '(' expr ')' . stmt

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    CONTINUE    shift, and go to state 5
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    FUNCTION    shift, and go to state 11
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    IF          shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    RETURN      shift, and go to state 18
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21
    ';'         shift, and go to state 22

    $default  reduce using rule 13 ($@1)

    stmt        go to state 168
    $@1         go to state 26
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    funcprefix  go to state 35
    funcdef     go to state 36
    const       go to state 37
    ifstmt      go to state 38
    whilestmt   go to state 39
    forstmt     go to state 40
    returnstmt  go to state 41


State 150

  100 forstmt: FOR '(' elist ';' . expr ';' elist ')' stmt

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    expr        go to state 169
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 151

   72 indexedelem: '{' expr ':' . expr '}'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    expr        go to state 170
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 152

   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '%' expr
   24     | expr . '>' expr
   25     | expr . '<' expr
   26     | expr . GREATEREQUAL expr
   27     | expr . LESSEQUAL expr
   28     | expr . EQUAL expr
   29     | expr . NOTEQUAL expr
   30     | expr . AND expr
   31     | expr . OR expr
   66 elist1: error expr . elist1

    error         shift, and go to state 107
    AND           shift, and go to state 72
    OR            shift, and go to state 73
    GREATEREQUAL  shift, and go to state 74
    LESSEQUAL     shift, and go to state 75
    EQUAL         shift, and go to state 76
    NOTEQUAL      shift, and go to state 77
    '>'           shift, and go to state 78
    '<'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83
    '%'           shift, and go to state 84
    ','           shift, and go to state 108

    ']'  reduce using rule 64 (elist1)
    ')'  reduce using rule 64 (elist1)
    ';'  reduce using rule 64 (elist1)

    elist1  go to state 171


State 153

   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '%' expr
   24     | expr . '>' expr
   25     | expr . '<' expr
   26     | expr . GREATEREQUAL expr
   27     | expr . LESSEQUAL expr
   28     | expr . EQUAL expr
   29     | expr . NOTEQUAL expr
   30     | expr . AND expr
   31     | expr . OR expr
   65 elist1: ',' expr . elist1

    error         shift, and go to state 107
    AND           shift, and go to state 72
    OR            shift, and go to state 73
    GREATEREQUAL  shift, and go to state 74
    LESSEQUAL     shift, and go to state 75
    EQUAL         shift, and go to state 76
    NOTEQUAL      shift, and go to state 77
    '>'           shift, and go to state 78
    '<'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83
    '%'           shift, and go to state 84
    ','           shift, and go to state 108

    ']'  reduce using rule 64 (elist1)
    ')'  reduce using rule 64 (elist1)
    ';'  reduce using rule 64 (elist1)

    elist1  go to state 172


State 154

   70 more: ',' indexedelem . more

    ','  shift, and go to state 112

    $default  reduce using rule 71 (more)

    more  go to state 173


State 155

   57 call: '(' funcdef ')' '(' . elist ')'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    $default  reduce using rule 62 (elist)

    expr        go to state 60
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 174
    objectdef   go to state 34
    const       go to state 37


State 156

   79 block: error stmt1 '}' .

    $default  reduce using rule 79 (block)


State 157

    3 stmt1: stmt1 . stmt
   75 block: '{' $@3 stmt1 . '}' $@4

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    CONTINUE    shift, and go to state 5
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    FUNCTION    shift, and go to state 11
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    IF          shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    RETURN      shift, and go to state 18
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21
    ';'         shift, and go to state 22
    '}'         shift, and go to state 175

    $default  reduce using rule 13 ($@1)

    stmt        go to state 67
    $@1         go to state 26
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    funcprefix  go to state 35
    funcdef     go to state 36
    const       go to state 37
    ifstmt      go to state 38
    whilestmt   go to state 39
    forstmt     go to state 40
    returnstmt  go to state 41


State 158

   78 block: '{' $@5 '}' . $@6

    $default  reduce using rule 77 ($@6)

    $@6  go to state 176


State 159

   61 methodcall: DOUPLEDOT ID '(' . elist ')'

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    $default  reduce using rule 62 (elist)

    expr        go to state 60
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 177
    objectdef   go to state 34
    const       go to state 37


State 160

   52 member: lvalue '[' expr ']' .

    $default  reduce using rule 52 (member)


State 161

   60 normcall: '(' elist ')' .

    $default  reduce using rule 60 (normcall)


State 162

   54 member: call '[' expr ']' .

    $default  reduce using rule 54 (member)


State 163

   55 call: call '(' elist ')' .

    $default  reduce using rule 55 (call)


State 164

   95 idlist1: ',' . ID idlist1

    ID  shift, and go to state 178


State 165

   93 idlist: ID idlist1 .

    $default  reduce using rule 93 (idlist)


State 166

   84 funcargs: '(' idlist ')' .

    $default  reduce using rule 84 (funcargs)


State 167

   96 ifstmt: IF '(' expr ')' stmt . ifstmt1

    ELSE  shift, and go to state 179

    ELSE      [reduce using rule 97 (ifstmt1)]
    $default  reduce using rule 97 (ifstmt1)

    ifstmt1  go to state 180


State 168

   99 whilestmt: WHILE '(' expr ')' stmt .

    $default  reduce using rule 99 (whilestmt)


State 169

   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '%' expr
   24     | expr . '>' expr
   25     | expr . '<' expr
   26     | expr . GREATEREQUAL expr
   27     | expr . LESSEQUAL expr
   28     | expr . EQUAL expr
   29     | expr . NOTEQUAL expr
   30     | expr . AND expr
   31     | expr . OR expr
  100 forstmt: FOR '(' elist ';' expr . ';' elist ')' stmt

    AND           shift, and go to state 72
    OR            shift, and go to state 73
    GREATEREQUAL  shift, and go to state 74
    LESSEQUAL     shift, and go to state 75
    EQUAL         shift, and go to state 76
    NOTEQUAL      shift, and go to state 77
    '>'           shift, and go to state 78
    '<'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83
    '%'           shift, and go to state 84
    ';'           shift, and go to state 181


State 170

   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '%' expr
   24     | expr . '>' expr
   25     | expr . '<' expr
   26     | expr . GREATEREQUAL expr
   27     | expr . LESSEQUAL expr
   28     | expr . EQUAL expr
   29     | expr . NOTEQUAL expr
   30     | expr . AND expr
   31     | expr . OR expr
   72 indexedelem: '{' expr ':' expr . '}'

    AND           shift, and go to state 72
    OR            shift, and go to state 73
    GREATEREQUAL  shift, and go to state 74
    LESSEQUAL     shift, and go to state 75
    EQUAL         shift, and go to state 76
    NOTEQUAL      shift, and go to state 77
    '>'           shift, and go to state 78
    '<'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83
    '%'           shift, and go to state 84
    '}'           shift, and go to state 182


State 171

   66 elist1: error expr elist1 .

    $default  reduce using rule 66 (elist1)


State 172

   65 elist1: ',' expr elist1 .

    $default  reduce using rule 65 (elist1)


State 173

   70 more: ',' indexedelem more .

    $default  reduce using rule 70 (more)


State 174

   57 call: '(' funcdef ')' '(' elist . ')'

    ')'  shift, and go to state 183


State 175

   75 block: '{' $@3 stmt1 '}' . $@4

    $default  reduce using rule 74 ($@4)

    $@4  go to state 184


State 176

   78 block: '{' $@5 '}' $@6 .

    $default  reduce using rule 78 (block)


State 177

   61 methodcall: DOUPLEDOT ID '(' elist . ')'

    ')'  shift, and go to state 185


State 178

   95 idlist1: ',' ID . idlist1

    ','  shift, and go to state 164

    $default  reduce using rule 94 (idlist1)

    idlist1  go to state 186


State 179

   98 ifstmt1: ELSE . stmt

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    CONTINUE    shift, and go to state 5
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    FUNCTION    shift, and go to state 11
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    IF          shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    RETURN      shift, and go to state 18
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21
    ';'         shift, and go to state 22

    $default  reduce using rule 13 ($@1)

    stmt        go to state 187
    $@1         go to state 26
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    funcprefix  go to state 35
    funcdef     go to state 36
    const       go to state 37
    ifstmt      go to state 38
    whilestmt   go to state 39
    forstmt     go to state 40
    returnstmt  go to state 41


State 180

   96 ifstmt: IF '(' expr ')' stmt ifstmt1 .

    $default  reduce using rule 96 (ifstmt)


State 181

  100 forstmt: FOR '(' elist ';' expr ';' . elist ')' stmt

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21

    $default  reduce using rule 62 (elist)

    expr        go to state 60
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 188
    objectdef   go to state 34
    const       go to state 37


State 182

   72 indexedelem: '{' expr ':' expr '}' .

    $default  reduce using rule 72 (indexedelem)


State 183

   57 call: '(' funcdef ')' '(' elist ')' .

    $default  reduce using rule 57 (call)


State 184

   75 block: '{' $@3 stmt1 '}' $@4 .

    $default  reduce using rule 75 (block)


State 185

   61 methodcall: DOUPLEDOT ID '(' elist ')' .

    $default  reduce using rule 61 (methodcall)


State 186

   95 idlist1: ',' ID idlist1 .

    $default  reduce using rule 95 (idlist1)


State 187

   98 ifstmt1: ELSE stmt .

    $default  reduce using rule 98 (ifstmt1)


State 188

  100 forstmt: FOR '(' elist ';' expr ';' elist . ')' stmt

    ')'  shift, and go to state 189


State 189

  100 forstmt: FOR '(' elist ';' expr ';' elist ')' . stmt

    ID          shift, and go to state 1
    NUMBER      shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    CONTINUE    shift, and go to state 5
    NOT         shift, and go to state 6
    PLUSPLUS    shift, and go to state 7
    MINUSMINUS  shift, and go to state 8
    LOCAL       shift, and go to state 9
    SCOPEOP     shift, and go to state 10
    FUNCTION    shift, and go to state 11
    NIL         shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    IF          shift, and go to state 15
    WHILE       shift, and go to state 16
    FOR         shift, and go to state 17
    RETURN      shift, and go to state 18
    '-'         shift, and go to state 19
    '['         shift, and go to state 20
    '('         shift, and go to state 21
    ';'         shift, and go to state 22

    $default  reduce using rule 13 ($@1)

    stmt        go to state 190
    $@1         go to state 26
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    funcprefix  go to state 35
    funcdef     go to state 36
    const       go to state 37
    ifstmt      go to state 38
    whilestmt   go to state 39
    forstmt     go to state 40
    returnstmt  go to state 41


State 190

  100 forstmt: FOR '(' elist ';' expr ';' elist ')' stmt .

    $default  reduce using rule 100 (forstmt)
